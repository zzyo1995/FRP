
==============Pipeline Pretty Print==============
Sentence #1 (11 tokens):
It'd be really helpful in case of huge JOIN statements
[Text=It CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=PRP Lemma=it NamedEntityTag=O]
[Text='d CharacterOffsetBegin=2 CharacterOffsetEnd=4 PartOfSpeech=MD Lemma=would NamedEntityTag=O]
[Text=be CharacterOffsetBegin=5 CharacterOffsetEnd=7 PartOfSpeech=VB Lemma=be NamedEntityTag=O]
[Text=really CharacterOffsetBegin=8 CharacterOffsetEnd=14 PartOfSpeech=RB Lemma=really NamedEntityTag=O]
[Text=helpful CharacterOffsetBegin=15 CharacterOffsetEnd=22 PartOfSpeech=JJ Lemma=helpful NamedEntityTag=O]
[Text=in CharacterOffsetBegin=23 CharacterOffsetEnd=25 PartOfSpeech=IN Lemma=in NamedEntityTag=O]
[Text=case CharacterOffsetBegin=26 CharacterOffsetEnd=30 PartOfSpeech=NN Lemma=case NamedEntityTag=O]
[Text=of CharacterOffsetBegin=31 CharacterOffsetEnd=33 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=huge CharacterOffsetBegin=34 CharacterOffsetEnd=38 PartOfSpeech=JJ Lemma=huge NamedEntityTag=O]
[Text=JOIN CharacterOffsetBegin=39 CharacterOffsetEnd=43 PartOfSpeech=VBP Lemma=join NamedEntityTag=O]
[Text=statements CharacterOffsetBegin=44 CharacterOffsetEnd=54 PartOfSpeech=NNS Lemma=statement NamedEntityTag=O]
(ROOT
  (S
    (NP (PRP It))
    (VP (MD 'd)
      (VP (VB be)
        (ADJP (RB really) (JJ helpful)
          (PP (IN in)
            (NP
              (NP (NN case))
              (PP (IN of)
                (NP
                  (NP (JJ huge))
                  (VP (VBP JOIN)
                    (NP (NNS statements))))))))))))

root(ROOT-0, helpful-5)
nsubj(helpful-5, It-1)
aux(helpful-5, 'd-2)
cop(helpful-5, be-3)
advmod(helpful-5, really-4)
case(huge-9, in-6)
mwe(in-6, case-7)
mwe(in-6, of-8)
nmod:in_case_of(helpful-5, huge-9)
dep(huge-9, JOIN-10)
dobj(JOIN-10, statements-11)


==============Pipeline Pretty Print==============
Sentence #1 (11 tokens):
It'd be really helpful in case of huge JOIN statements
[Text=It CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=PRP Lemma=it NamedEntityTag=O]
[Text='d CharacterOffsetBegin=2 CharacterOffsetEnd=4 PartOfSpeech=MD Lemma=would NamedEntityTag=O]
[Text=be CharacterOffsetBegin=5 CharacterOffsetEnd=7 PartOfSpeech=VB Lemma=be NamedEntityTag=O]
[Text=really CharacterOffsetBegin=8 CharacterOffsetEnd=14 PartOfSpeech=RB Lemma=really NamedEntityTag=O]
[Text=helpful CharacterOffsetBegin=15 CharacterOffsetEnd=22 PartOfSpeech=JJ Lemma=helpful NamedEntityTag=O]
[Text=in CharacterOffsetBegin=23 CharacterOffsetEnd=25 PartOfSpeech=IN Lemma=in NamedEntityTag=O]
[Text=case CharacterOffsetBegin=26 CharacterOffsetEnd=30 PartOfSpeech=NN Lemma=case NamedEntityTag=O]
[Text=of CharacterOffsetBegin=31 CharacterOffsetEnd=33 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=huge CharacterOffsetBegin=34 CharacterOffsetEnd=38 PartOfSpeech=JJ Lemma=huge NamedEntityTag=O]
[Text=JOIN CharacterOffsetBegin=39 CharacterOffsetEnd=43 PartOfSpeech=VBP Lemma=join NamedEntityTag=O]
[Text=statements CharacterOffsetBegin=44 CharacterOffsetEnd=54 PartOfSpeech=NNS Lemma=statement NamedEntityTag=O]
(ROOT
  (S
    (NP (PRP It))
    (VP (MD 'd)
      (VP (VB be)
        (ADJP (RB really) (JJ helpful)
          (PP (IN in)
            (NP
              (NP (NN case))
              (PP (IN of)
                (NP
                  (NP (JJ huge))
                  (VP (VBP JOIN)
                    (NP (NNS statements))))))))))))

root(ROOT-0, helpful-5)
nsubj(helpful-5, It-1)
aux(helpful-5, 'd-2)
cop(helpful-5, be-3)
advmod(helpful-5, really-4)
case(huge-9, in-6)
mwe(in-6, case-7)
mwe(in-6, of-8)
nmod:in_case_of(helpful-5, huge-9)
dep(huge-9, JOIN-10)
dobj(JOIN-10, statements-11)


==============Pipeline Pretty Print==============
Sentence #1 (17 tokens):
I think it would be more appropriate (for security and privacy) to have POST parameters
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=think CharacterOffsetBegin=2 CharacterOffsetEnd=7 PartOfSpeech=VBP Lemma=think NamedEntityTag=O]
[Text=it CharacterOffsetBegin=8 CharacterOffsetEnd=10 PartOfSpeech=PRP Lemma=it NamedEntityTag=O]
[Text=would CharacterOffsetBegin=11 CharacterOffsetEnd=16 PartOfSpeech=MD Lemma=would NamedEntityTag=O]
[Text=be CharacterOffsetBegin=17 CharacterOffsetEnd=19 PartOfSpeech=VB Lemma=be NamedEntityTag=O]
[Text=more CharacterOffsetBegin=20 CharacterOffsetEnd=24 PartOfSpeech=RBR Lemma=more NamedEntityTag=O]
[Text=appropriate CharacterOffsetBegin=25 CharacterOffsetEnd=36 PartOfSpeech=JJ Lemma=appropriate NamedEntityTag=O]
[Text=-LRB- CharacterOffsetBegin=37 CharacterOffsetEnd=38 PartOfSpeech=-LRB- Lemma=-lrb- NamedEntityTag=O]
[Text=for CharacterOffsetBegin=38 CharacterOffsetEnd=41 PartOfSpeech=IN Lemma=for NamedEntityTag=O]
[Text=security CharacterOffsetBegin=42 CharacterOffsetEnd=50 PartOfSpeech=NN Lemma=security NamedEntityTag=O]
[Text=and CharacterOffsetBegin=51 CharacterOffsetEnd=54 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=privacy CharacterOffsetBegin=55 CharacterOffsetEnd=62 PartOfSpeech=NN Lemma=privacy NamedEntityTag=O]
[Text=-RRB- CharacterOffsetBegin=62 CharacterOffsetEnd=63 PartOfSpeech=-RRB- Lemma=-rrb- NamedEntityTag=O]
[Text=to CharacterOffsetBegin=64 CharacterOffsetEnd=66 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=have CharacterOffsetBegin=67 CharacterOffsetEnd=71 PartOfSpeech=VB Lemma=have NamedEntityTag=O]
[Text=POST CharacterOffsetBegin=72 CharacterOffsetEnd=76 PartOfSpeech=NN Lemma=post NamedEntityTag=O]
[Text=parameters CharacterOffsetBegin=77 CharacterOffsetEnd=87 PartOfSpeech=NNS Lemma=parameter NamedEntityTag=O]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD would)
            (VP (VB be)
              (ADJP
                (ADJP (RBR more) (JJ appropriate))
                (PRN (-LRB- -LRB-)
                  (PP (IN for)
                    (NP (NN security)
                      (CC and)
                      (NN privacy)))
                  (-RRB- -RRB-)))
              (S
                (VP (TO to)
                  (VP (VB have)
                    (NP (NN POST) (NNS parameters))))))))))))

root(ROOT-0, think-2)
nsubj(think-2, I-1)
nsubj(appropriate-7, it-3)
nsubj:xsubj(have-15, it-3)
aux(appropriate-7, would-4)
cop(appropriate-7, be-5)
advmod(appropriate-7, more-6)
ccomp(think-2, appropriate-7)
punct(security-10, -LRB--8)
case(security-10, for-9)
dep(appropriate-7, security-10)
cc(security-10, and-11)
dep(appropriate-7, privacy-12)
conj:and(security-10, privacy-12)
punct(security-10, -RRB--13)
mark(have-15, to-14)
xcomp(appropriate-7, have-15)
compound(parameters-17, POST-16)
dobj(have-15, parameters-17)


==============Pipeline Pretty Print==============
Sentence #1 (17 tokens):
I think it would be more appropriate (for security and privacy) to have POST parameters
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=think CharacterOffsetBegin=2 CharacterOffsetEnd=7 PartOfSpeech=VBP Lemma=think NamedEntityTag=O]
[Text=it CharacterOffsetBegin=8 CharacterOffsetEnd=10 PartOfSpeech=PRP Lemma=it NamedEntityTag=O]
[Text=would CharacterOffsetBegin=11 CharacterOffsetEnd=16 PartOfSpeech=MD Lemma=would NamedEntityTag=O]
[Text=be CharacterOffsetBegin=17 CharacterOffsetEnd=19 PartOfSpeech=VB Lemma=be NamedEntityTag=O]
[Text=more CharacterOffsetBegin=20 CharacterOffsetEnd=24 PartOfSpeech=RBR Lemma=more NamedEntityTag=O]
[Text=appropriate CharacterOffsetBegin=25 CharacterOffsetEnd=36 PartOfSpeech=JJ Lemma=appropriate NamedEntityTag=O]
[Text=-LRB- CharacterOffsetBegin=37 CharacterOffsetEnd=38 PartOfSpeech=-LRB- Lemma=-lrb- NamedEntityTag=O]
[Text=for CharacterOffsetBegin=38 CharacterOffsetEnd=41 PartOfSpeech=IN Lemma=for NamedEntityTag=O]
[Text=security CharacterOffsetBegin=42 CharacterOffsetEnd=50 PartOfSpeech=NN Lemma=security NamedEntityTag=O]
[Text=and CharacterOffsetBegin=51 CharacterOffsetEnd=54 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=privacy CharacterOffsetBegin=55 CharacterOffsetEnd=62 PartOfSpeech=NN Lemma=privacy NamedEntityTag=O]
[Text=-RRB- CharacterOffsetBegin=62 CharacterOffsetEnd=63 PartOfSpeech=-RRB- Lemma=-rrb- NamedEntityTag=O]
[Text=to CharacterOffsetBegin=64 CharacterOffsetEnd=66 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=have CharacterOffsetBegin=67 CharacterOffsetEnd=71 PartOfSpeech=VB Lemma=have NamedEntityTag=O]
[Text=POST CharacterOffsetBegin=72 CharacterOffsetEnd=76 PartOfSpeech=NN Lemma=post NamedEntityTag=O]
[Text=parameters CharacterOffsetBegin=77 CharacterOffsetEnd=87 PartOfSpeech=NNS Lemma=parameter NamedEntityTag=O]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD would)
            (VP (VB be)
              (ADJP
                (ADJP (RBR more) (JJ appropriate))
                (PRN (-LRB- -LRB-)
                  (PP (IN for)
                    (NP (NN security)
                      (CC and)
                      (NN privacy)))
                  (-RRB- -RRB-)))
              (S
                (VP (TO to)
                  (VP (VB have)
                    (NP (NN POST) (NNS parameters))))))))))))

root(ROOT-0, think-2)
nsubj(think-2, I-1)
nsubj(appropriate-7, it-3)
nsubj:xsubj(have-15, it-3)
aux(appropriate-7, would-4)
cop(appropriate-7, be-5)
advmod(appropriate-7, more-6)
ccomp(think-2, appropriate-7)
punct(security-10, -LRB--8)
case(security-10, for-9)
dep(appropriate-7, security-10)
cc(security-10, and-11)
dep(appropriate-7, privacy-12)
conj:and(security-10, privacy-12)
punct(security-10, -RRB--13)
mark(have-15, to-14)
xcomp(appropriate-7, have-15)
compound(parameters-17, POST-16)
dobj(have-15, parameters-17)


==============Pipeline Pretty Print==============
Sentence #1 (17 tokens):
I think it would be more appropriate (for security and privacy) to have POST parameters
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=think CharacterOffsetBegin=2 CharacterOffsetEnd=7 PartOfSpeech=VBP Lemma=think NamedEntityTag=O]
[Text=it CharacterOffsetBegin=8 CharacterOffsetEnd=10 PartOfSpeech=PRP Lemma=it NamedEntityTag=O]
[Text=would CharacterOffsetBegin=11 CharacterOffsetEnd=16 PartOfSpeech=MD Lemma=would NamedEntityTag=O]
[Text=be CharacterOffsetBegin=17 CharacterOffsetEnd=19 PartOfSpeech=VB Lemma=be NamedEntityTag=O]
[Text=more CharacterOffsetBegin=20 CharacterOffsetEnd=24 PartOfSpeech=RBR Lemma=more NamedEntityTag=O]
[Text=appropriate CharacterOffsetBegin=25 CharacterOffsetEnd=36 PartOfSpeech=JJ Lemma=appropriate NamedEntityTag=O]
[Text=-LRB- CharacterOffsetBegin=37 CharacterOffsetEnd=38 PartOfSpeech=-LRB- Lemma=-lrb- NamedEntityTag=O]
[Text=for CharacterOffsetBegin=38 CharacterOffsetEnd=41 PartOfSpeech=IN Lemma=for NamedEntityTag=O]
[Text=security CharacterOffsetBegin=42 CharacterOffsetEnd=50 PartOfSpeech=NN Lemma=security NamedEntityTag=O]
[Text=and CharacterOffsetBegin=51 CharacterOffsetEnd=54 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=privacy CharacterOffsetBegin=55 CharacterOffsetEnd=62 PartOfSpeech=NN Lemma=privacy NamedEntityTag=O]
[Text=-RRB- CharacterOffsetBegin=62 CharacterOffsetEnd=63 PartOfSpeech=-RRB- Lemma=-rrb- NamedEntityTag=O]
[Text=to CharacterOffsetBegin=64 CharacterOffsetEnd=66 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=have CharacterOffsetBegin=67 CharacterOffsetEnd=71 PartOfSpeech=VB Lemma=have NamedEntityTag=O]
[Text=POST CharacterOffsetBegin=72 CharacterOffsetEnd=76 PartOfSpeech=NN Lemma=post NamedEntityTag=O]
[Text=parameters CharacterOffsetBegin=77 CharacterOffsetEnd=87 PartOfSpeech=NNS Lemma=parameter NamedEntityTag=O]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD would)
            (VP (VB be)
              (ADJP
                (ADJP (RBR more) (JJ appropriate))
                (PRN (-LRB- -LRB-)
                  (PP (IN for)
                    (NP (NN security)
                      (CC and)
                      (NN privacy)))
                  (-RRB- -RRB-)))
              (S
                (VP (TO to)
                  (VP (VB have)
                    (NP (NN POST) (NNS parameters))))))))))))

root(ROOT-0, think-2)
nsubj(think-2, I-1)
nsubj(appropriate-7, it-3)
nsubj:xsubj(have-15, it-3)
aux(appropriate-7, would-4)
cop(appropriate-7, be-5)
advmod(appropriate-7, more-6)
ccomp(think-2, appropriate-7)
punct(security-10, -LRB--8)
case(security-10, for-9)
dep(appropriate-7, security-10)
cc(security-10, and-11)
dep(appropriate-7, privacy-12)
conj:and(security-10, privacy-12)
punct(security-10, -RRB--13)
mark(have-15, to-14)
xcomp(appropriate-7, have-15)
compound(parameters-17, POST-16)
dobj(have-15, parameters-17)


==============Pipeline Pretty Print==============
Sentence #1 (17 tokens):
I think it would be more appropriate (for security and privacy) to have POST parameters
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=think CharacterOffsetBegin=2 CharacterOffsetEnd=7 PartOfSpeech=VBP Lemma=think NamedEntityTag=O]
[Text=it CharacterOffsetBegin=8 CharacterOffsetEnd=10 PartOfSpeech=PRP Lemma=it NamedEntityTag=O]
[Text=would CharacterOffsetBegin=11 CharacterOffsetEnd=16 PartOfSpeech=MD Lemma=would NamedEntityTag=O]
[Text=be CharacterOffsetBegin=17 CharacterOffsetEnd=19 PartOfSpeech=VB Lemma=be NamedEntityTag=O]
[Text=more CharacterOffsetBegin=20 CharacterOffsetEnd=24 PartOfSpeech=RBR Lemma=more NamedEntityTag=O]
[Text=appropriate CharacterOffsetBegin=25 CharacterOffsetEnd=36 PartOfSpeech=JJ Lemma=appropriate NamedEntityTag=O]
[Text=-LRB- CharacterOffsetBegin=37 CharacterOffsetEnd=38 PartOfSpeech=-LRB- Lemma=-lrb- NamedEntityTag=O]
[Text=for CharacterOffsetBegin=38 CharacterOffsetEnd=41 PartOfSpeech=IN Lemma=for NamedEntityTag=O]
[Text=security CharacterOffsetBegin=42 CharacterOffsetEnd=50 PartOfSpeech=NN Lemma=security NamedEntityTag=O]
[Text=and CharacterOffsetBegin=51 CharacterOffsetEnd=54 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=privacy CharacterOffsetBegin=55 CharacterOffsetEnd=62 PartOfSpeech=NN Lemma=privacy NamedEntityTag=O]
[Text=-RRB- CharacterOffsetBegin=62 CharacterOffsetEnd=63 PartOfSpeech=-RRB- Lemma=-rrb- NamedEntityTag=O]
[Text=to CharacterOffsetBegin=64 CharacterOffsetEnd=66 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=have CharacterOffsetBegin=67 CharacterOffsetEnd=71 PartOfSpeech=VB Lemma=have NamedEntityTag=O]
[Text=POST CharacterOffsetBegin=72 CharacterOffsetEnd=76 PartOfSpeech=NN Lemma=post NamedEntityTag=O]
[Text=parameters CharacterOffsetBegin=77 CharacterOffsetEnd=87 PartOfSpeech=NNS Lemma=parameter NamedEntityTag=O]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD would)
            (VP (VB be)
              (ADJP
                (ADJP (RBR more) (JJ appropriate))
                (PRN (-LRB- -LRB-)
                  (PP (IN for)
                    (NP (NN security)
                      (CC and)
                      (NN privacy)))
                  (-RRB- -RRB-)))
              (S
                (VP (TO to)
                  (VP (VB have)
                    (NP (NN POST) (NNS parameters))))))))))))

root(ROOT-0, think-2)
nsubj(think-2, I-1)
nsubj(appropriate-7, it-3)
nsubj:xsubj(have-15, it-3)
aux(appropriate-7, would-4)
cop(appropriate-7, be-5)
advmod(appropriate-7, more-6)
ccomp(think-2, appropriate-7)
punct(security-10, -LRB--8)
case(security-10, for-9)
dep(appropriate-7, security-10)
cc(security-10, and-11)
dep(appropriate-7, privacy-12)
conj:and(security-10, privacy-12)
punct(security-10, -RRB--13)
mark(have-15, to-14)
xcomp(appropriate-7, have-15)
compound(parameters-17, POST-16)
dobj(have-15, parameters-17)


==============Pipeline Pretty Print==============
Sentence #1 (17 tokens):
I think it would be more appropriate (for security and privacy) to have POST parameters
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=think CharacterOffsetBegin=2 CharacterOffsetEnd=7 PartOfSpeech=VBP Lemma=think NamedEntityTag=O]
[Text=it CharacterOffsetBegin=8 CharacterOffsetEnd=10 PartOfSpeech=PRP Lemma=it NamedEntityTag=O]
[Text=would CharacterOffsetBegin=11 CharacterOffsetEnd=16 PartOfSpeech=MD Lemma=would NamedEntityTag=O]
[Text=be CharacterOffsetBegin=17 CharacterOffsetEnd=19 PartOfSpeech=VB Lemma=be NamedEntityTag=O]
[Text=more CharacterOffsetBegin=20 CharacterOffsetEnd=24 PartOfSpeech=RBR Lemma=more NamedEntityTag=O]
[Text=appropriate CharacterOffsetBegin=25 CharacterOffsetEnd=36 PartOfSpeech=JJ Lemma=appropriate NamedEntityTag=O]
[Text=-LRB- CharacterOffsetBegin=37 CharacterOffsetEnd=38 PartOfSpeech=-LRB- Lemma=-lrb- NamedEntityTag=O]
[Text=for CharacterOffsetBegin=38 CharacterOffsetEnd=41 PartOfSpeech=IN Lemma=for NamedEntityTag=O]
[Text=security CharacterOffsetBegin=42 CharacterOffsetEnd=50 PartOfSpeech=NN Lemma=security NamedEntityTag=O]
[Text=and CharacterOffsetBegin=51 CharacterOffsetEnd=54 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=privacy CharacterOffsetBegin=55 CharacterOffsetEnd=62 PartOfSpeech=NN Lemma=privacy NamedEntityTag=O]
[Text=-RRB- CharacterOffsetBegin=62 CharacterOffsetEnd=63 PartOfSpeech=-RRB- Lemma=-rrb- NamedEntityTag=O]
[Text=to CharacterOffsetBegin=64 CharacterOffsetEnd=66 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=have CharacterOffsetBegin=67 CharacterOffsetEnd=71 PartOfSpeech=VB Lemma=have NamedEntityTag=O]
[Text=POST CharacterOffsetBegin=72 CharacterOffsetEnd=76 PartOfSpeech=NN Lemma=post NamedEntityTag=O]
[Text=parameters CharacterOffsetBegin=77 CharacterOffsetEnd=87 PartOfSpeech=NNS Lemma=parameter NamedEntityTag=O]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD would)
            (VP (VB be)
              (ADJP
                (ADJP (RBR more) (JJ appropriate))
                (PRN (-LRB- -LRB-)
                  (PP (IN for)
                    (NP (NN security)
                      (CC and)
                      (NN privacy)))
                  (-RRB- -RRB-)))
              (S
                (VP (TO to)
                  (VP (VB have)
                    (NP (NN POST) (NNS parameters))))))))))))

root(ROOT-0, think-2)
nsubj(think-2, I-1)
nsubj(appropriate-7, it-3)
nsubj:xsubj(have-15, it-3)
aux(appropriate-7, would-4)
cop(appropriate-7, be-5)
advmod(appropriate-7, more-6)
ccomp(think-2, appropriate-7)
punct(security-10, -LRB--8)
case(security-10, for-9)
dep(appropriate-7, security-10)
cc(security-10, and-11)
dep(appropriate-7, privacy-12)
conj:and(security-10, privacy-12)
punct(security-10, -RRB--13)
mark(have-15, to-14)
xcomp(appropriate-7, have-15)
compound(parameters-17, POST-16)
dobj(have-15, parameters-17)


==============Pipeline Pretty Print==============
Sentence #1 (23 tokens):
It will be great to have a database analyzer which can suggest how can a schema be modified in order to reduce redundancies
[Text=It CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=PRP Lemma=it NamedEntityTag=O]
[Text=will CharacterOffsetBegin=3 CharacterOffsetEnd=7 PartOfSpeech=MD Lemma=will NamedEntityTag=O]
[Text=be CharacterOffsetBegin=8 CharacterOffsetEnd=10 PartOfSpeech=VB Lemma=be NamedEntityTag=O]
[Text=great CharacterOffsetBegin=11 CharacterOffsetEnd=16 PartOfSpeech=JJ Lemma=great NamedEntityTag=O]
[Text=to CharacterOffsetBegin=17 CharacterOffsetEnd=19 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=have CharacterOffsetBegin=20 CharacterOffsetEnd=24 PartOfSpeech=VB Lemma=have NamedEntityTag=O]
[Text=a CharacterOffsetBegin=25 CharacterOffsetEnd=26 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=database CharacterOffsetBegin=27 CharacterOffsetEnd=35 PartOfSpeech=NN Lemma=database NamedEntityTag=O]
[Text=analyzer CharacterOffsetBegin=36 CharacterOffsetEnd=44 PartOfSpeech=NN Lemma=analyzer NamedEntityTag=O]
[Text=which CharacterOffsetBegin=45 CharacterOffsetEnd=50 PartOfSpeech=WDT Lemma=which NamedEntityTag=O]
[Text=can CharacterOffsetBegin=51 CharacterOffsetEnd=54 PartOfSpeech=MD Lemma=can NamedEntityTag=O]
[Text=suggest CharacterOffsetBegin=55 CharacterOffsetEnd=62 PartOfSpeech=VB Lemma=suggest NamedEntityTag=O]
[Text=how CharacterOffsetBegin=63 CharacterOffsetEnd=66 PartOfSpeech=WRB Lemma=how NamedEntityTag=O]
[Text=can CharacterOffsetBegin=67 CharacterOffsetEnd=70 PartOfSpeech=MD Lemma=can NamedEntityTag=O]
[Text=a CharacterOffsetBegin=71 CharacterOffsetEnd=72 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=schema CharacterOffsetBegin=73 CharacterOffsetEnd=79 PartOfSpeech=NN Lemma=schema NamedEntityTag=O]
[Text=be CharacterOffsetBegin=80 CharacterOffsetEnd=82 PartOfSpeech=VB Lemma=be NamedEntityTag=O]
[Text=modified CharacterOffsetBegin=83 CharacterOffsetEnd=91 PartOfSpeech=VBN Lemma=modify NamedEntityTag=O]
[Text=in CharacterOffsetBegin=92 CharacterOffsetEnd=94 PartOfSpeech=IN Lemma=in NamedEntityTag=O]
[Text=order CharacterOffsetBegin=95 CharacterOffsetEnd=100 PartOfSpeech=NN Lemma=order NamedEntityTag=O]
[Text=to CharacterOffsetBegin=101 CharacterOffsetEnd=103 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=reduce CharacterOffsetBegin=104 CharacterOffsetEnd=110 PartOfSpeech=VB Lemma=reduce NamedEntityTag=O]
[Text=redundancies CharacterOffsetBegin=111 CharacterOffsetEnd=123 PartOfSpeech=NNS Lemma=redundancy NamedEntityTag=O]
(ROOT
  (S
    (NP (PRP It))
    (VP (MD will)
      (VP (VB be)
        (ADJP (JJ great)
          (S
            (VP (TO to)
              (VP (VB have)
                (NP
                  (NP (DT a) (NN database) (NN analyzer))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (MD can)
                        (VP (VB suggest)
                          (SBAR
                            (SBARQ
                              (WHADVP (WRB how))
                              (SQ (MD can)
                                (NP (DT a) (NN schema))
                                (VP (VB be)
                                  (VP (VBN modified)
                                    (PP (IN in)
                                      (NP (NN order)))
                                    (S
                                      (VP (TO to)
                                        (VP (VB reduce)
                                          (NP (NNS redundancies)))))))))))))))))))))))

root(ROOT-0, great-4)
nsubj(great-4, It-1)
nsubj:xsubj(have-6, It-1)
aux(great-4, will-2)
cop(great-4, be-3)
mark(have-6, to-5)
xcomp(great-4, have-6)
det(analyzer-9, a-7)
compound(analyzer-9, database-8)
dobj(have-6, analyzer-9)
nsubj(suggest-12, analyzer-9)
ref(analyzer-9, which-10)
aux(suggest-12, can-11)
acl:relcl(analyzer-9, suggest-12)
advmod(modified-18, how-13)
aux(modified-18, can-14)
det(schema-16, a-15)
nsubjpass(modified-18, schema-16)
nsubj:xsubj(reduce-22, schema-16)
auxpass(modified-18, be-17)
dep(suggest-12, modified-18)
advcl(modified-18, in-19)
mwe(in-19, order-20)
mark(reduce-22, to-21)
xcomp(modified-18, reduce-22)
dobj(reduce-22, redundancies-23)


==============Pipeline Pretty Print==============
Sentence #1 (11 tokens):
It'd be really helpful in case of huge JOIN statements
[Text=It CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=PRP Lemma=it NamedEntityTag=O]
[Text='d CharacterOffsetBegin=2 CharacterOffsetEnd=4 PartOfSpeech=MD Lemma=would NamedEntityTag=O]
[Text=be CharacterOffsetBegin=5 CharacterOffsetEnd=7 PartOfSpeech=VB Lemma=be NamedEntityTag=O]
[Text=really CharacterOffsetBegin=8 CharacterOffsetEnd=14 PartOfSpeech=RB Lemma=really NamedEntityTag=O]
[Text=helpful CharacterOffsetBegin=15 CharacterOffsetEnd=22 PartOfSpeech=JJ Lemma=helpful NamedEntityTag=O]
[Text=in CharacterOffsetBegin=23 CharacterOffsetEnd=25 PartOfSpeech=IN Lemma=in NamedEntityTag=O]
[Text=case CharacterOffsetBegin=26 CharacterOffsetEnd=30 PartOfSpeech=NN Lemma=case NamedEntityTag=O]
[Text=of CharacterOffsetBegin=31 CharacterOffsetEnd=33 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=huge CharacterOffsetBegin=34 CharacterOffsetEnd=38 PartOfSpeech=JJ Lemma=huge NamedEntityTag=O]
[Text=JOIN CharacterOffsetBegin=39 CharacterOffsetEnd=43 PartOfSpeech=VBP Lemma=join NamedEntityTag=O]
[Text=statements CharacterOffsetBegin=44 CharacterOffsetEnd=54 PartOfSpeech=NNS Lemma=statement NamedEntityTag=O]
(ROOT
  (S
    (NP (PRP It))
    (VP (MD 'd)
      (VP (VB be)
        (ADJP (RB really) (JJ helpful)
          (PP (IN in)
            (NP
              (NP (NN case))
              (PP (IN of)
                (NP
                  (NP (JJ huge))
                  (VP (VBP JOIN)
                    (NP (NNS statements))))))))))))

root(ROOT-0, helpful-5)
nsubj(helpful-5, It-1)
aux(helpful-5, 'd-2)
cop(helpful-5, be-3)
advmod(helpful-5, really-4)
case(huge-9, in-6)
mwe(in-6, case-7)
mwe(in-6, of-8)
nmod:in_case_of(helpful-5, huge-9)
dep(huge-9, JOIN-10)
dobj(JOIN-10, statements-11)


==============Pipeline Pretty Print==============
Sentence #1 (28 tokens):
If we can select a column and the find particular word or string and then replace with some other string through GUI, that will be very helpful
[Text=If CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=IN Lemma=if NamedEntityTag=O]
[Text=we CharacterOffsetBegin=3 CharacterOffsetEnd=5 PartOfSpeech=PRP Lemma=we NamedEntityTag=O]
[Text=can CharacterOffsetBegin=6 CharacterOffsetEnd=9 PartOfSpeech=MD Lemma=can NamedEntityTag=O]
[Text=select CharacterOffsetBegin=10 CharacterOffsetEnd=16 PartOfSpeech=VB Lemma=select NamedEntityTag=O]
[Text=a CharacterOffsetBegin=17 CharacterOffsetEnd=18 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=column CharacterOffsetBegin=19 CharacterOffsetEnd=25 PartOfSpeech=NN Lemma=column NamedEntityTag=O]
[Text=and CharacterOffsetBegin=26 CharacterOffsetEnd=29 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=the CharacterOffsetBegin=30 CharacterOffsetEnd=33 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=find CharacterOffsetBegin=34 CharacterOffsetEnd=38 PartOfSpeech=VB Lemma=find NamedEntityTag=O]
[Text=particular CharacterOffsetBegin=39 CharacterOffsetEnd=49 PartOfSpeech=JJ Lemma=particular NamedEntityTag=O]
[Text=word CharacterOffsetBegin=50 CharacterOffsetEnd=54 PartOfSpeech=NN Lemma=word NamedEntityTag=O]
[Text=or CharacterOffsetBegin=55 CharacterOffsetEnd=57 PartOfSpeech=CC Lemma=or NamedEntityTag=O]
[Text=string CharacterOffsetBegin=58 CharacterOffsetEnd=64 PartOfSpeech=NN Lemma=string NamedEntityTag=O]
[Text=and CharacterOffsetBegin=65 CharacterOffsetEnd=68 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=then CharacterOffsetBegin=69 CharacterOffsetEnd=73 PartOfSpeech=RB Lemma=then NamedEntityTag=O]
[Text=replace CharacterOffsetBegin=74 CharacterOffsetEnd=81 PartOfSpeech=VB Lemma=replace NamedEntityTag=O]
[Text=with CharacterOffsetBegin=82 CharacterOffsetEnd=86 PartOfSpeech=IN Lemma=with NamedEntityTag=O]
[Text=some CharacterOffsetBegin=87 CharacterOffsetEnd=91 PartOfSpeech=DT Lemma=some NamedEntityTag=O]
[Text=other CharacterOffsetBegin=92 CharacterOffsetEnd=97 PartOfSpeech=JJ Lemma=other NamedEntityTag=O]
[Text=string CharacterOffsetBegin=98 CharacterOffsetEnd=104 PartOfSpeech=NN Lemma=string NamedEntityTag=O]
[Text=through CharacterOffsetBegin=105 CharacterOffsetEnd=112 PartOfSpeech=IN Lemma=through NamedEntityTag=O]
[Text=GUI CharacterOffsetBegin=113 CharacterOffsetEnd=116 PartOfSpeech=NNP Lemma=GUI NamedEntityTag=O]
[Text=, CharacterOffsetBegin=116 CharacterOffsetEnd=117 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=that CharacterOffsetBegin=118 CharacterOffsetEnd=122 PartOfSpeech=WDT Lemma=that NamedEntityTag=O]
[Text=will CharacterOffsetBegin=123 CharacterOffsetEnd=127 PartOfSpeech=MD Lemma=will NamedEntityTag=O]
[Text=be CharacterOffsetBegin=128 CharacterOffsetEnd=130 PartOfSpeech=VB Lemma=be NamedEntityTag=O]
[Text=very CharacterOffsetBegin=131 CharacterOffsetEnd=135 PartOfSpeech=RB Lemma=very NamedEntityTag=O]
[Text=helpful CharacterOffsetBegin=136 CharacterOffsetEnd=143 PartOfSpeech=JJ Lemma=helpful NamedEntityTag=O]
(ROOT
  (SBAR (IN If)
    (S
      (NP (PRP we))
      (VP (MD can)
        (VP
          (VP (VB select)
            (NP (DT a) (NN column)))
          (CC and)
          (VP (DT the)
            (VP (VB find)
              (NP (JJ particular) (NN word)
                (CC or)
                (NN string)))
            (CC and)
            (VP
              (ADVP (RB then))
              (VB replace)
              (PP (IN with)
                (NP (DT some) (JJ other) (NN string)))
              (PP (IN through)
                (NP
                  (NP (NNP GUI))
                  (, ,)
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (MD will)
                        (VP (VB be)
                          (ADJP (RB very) (JJ helpful)))))))))))))))

root(ROOT-0, select-4)
mark(select-4, If-1)
nsubj(select-4, we-2)
nsubj(find-9, we-2)
aux(select-4, can-3)
det(column-6, a-5)
dobj(select-4, column-6)
cc(select-4, and-7)
dep(find-9, the-8)
conj:and(select-4, find-9)
amod(word-11, particular-10)
dobj(find-9, word-11)
cc(word-11, or-12)
dobj(find-9, string-13)
conj:or(word-11, string-13)
cc(find-9, and-14)
advmod(replace-16, then-15)
conj:and(select-4, replace-16)
conj:and(find-9, replace-16)
case(string-20, with-17)
det(string-20, some-18)
amod(string-20, other-19)
nmod:with(replace-16, string-20)
case(GUI-22, through-21)
nmod:through(replace-16, GUI-22)
nsubj(helpful-28, GUI-22)
punct(GUI-22, ,-23)
ref(GUI-22, that-24)
aux(helpful-28, will-25)
cop(helpful-28, be-26)
advmod(helpful-28, very-27)
acl:relcl(GUI-22, helpful-28)


==============Pipeline Pretty Print==============
Sentence #1 (28 tokens):
If we can select a column and the find particular word or string and then replace with some other string through GUI, that will be very helpful
[Text=If CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=IN Lemma=if NamedEntityTag=O]
[Text=we CharacterOffsetBegin=3 CharacterOffsetEnd=5 PartOfSpeech=PRP Lemma=we NamedEntityTag=O]
[Text=can CharacterOffsetBegin=6 CharacterOffsetEnd=9 PartOfSpeech=MD Lemma=can NamedEntityTag=O]
[Text=select CharacterOffsetBegin=10 CharacterOffsetEnd=16 PartOfSpeech=VB Lemma=select NamedEntityTag=O]
[Text=a CharacterOffsetBegin=17 CharacterOffsetEnd=18 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=column CharacterOffsetBegin=19 CharacterOffsetEnd=25 PartOfSpeech=NN Lemma=column NamedEntityTag=O]
[Text=and CharacterOffsetBegin=26 CharacterOffsetEnd=29 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=the CharacterOffsetBegin=30 CharacterOffsetEnd=33 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=find CharacterOffsetBegin=34 CharacterOffsetEnd=38 PartOfSpeech=VB Lemma=find NamedEntityTag=O]
[Text=particular CharacterOffsetBegin=39 CharacterOffsetEnd=49 PartOfSpeech=JJ Lemma=particular NamedEntityTag=O]
[Text=word CharacterOffsetBegin=50 CharacterOffsetEnd=54 PartOfSpeech=NN Lemma=word NamedEntityTag=O]
[Text=or CharacterOffsetBegin=55 CharacterOffsetEnd=57 PartOfSpeech=CC Lemma=or NamedEntityTag=O]
[Text=string CharacterOffsetBegin=58 CharacterOffsetEnd=64 PartOfSpeech=NN Lemma=string NamedEntityTag=O]
[Text=and CharacterOffsetBegin=65 CharacterOffsetEnd=68 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=then CharacterOffsetBegin=69 CharacterOffsetEnd=73 PartOfSpeech=RB Lemma=then NamedEntityTag=O]
[Text=replace CharacterOffsetBegin=74 CharacterOffsetEnd=81 PartOfSpeech=VB Lemma=replace NamedEntityTag=O]
[Text=with CharacterOffsetBegin=82 CharacterOffsetEnd=86 PartOfSpeech=IN Lemma=with NamedEntityTag=O]
[Text=some CharacterOffsetBegin=87 CharacterOffsetEnd=91 PartOfSpeech=DT Lemma=some NamedEntityTag=O]
[Text=other CharacterOffsetBegin=92 CharacterOffsetEnd=97 PartOfSpeech=JJ Lemma=other NamedEntityTag=O]
[Text=string CharacterOffsetBegin=98 CharacterOffsetEnd=104 PartOfSpeech=NN Lemma=string NamedEntityTag=O]
[Text=through CharacterOffsetBegin=105 CharacterOffsetEnd=112 PartOfSpeech=IN Lemma=through NamedEntityTag=O]
[Text=GUI CharacterOffsetBegin=113 CharacterOffsetEnd=116 PartOfSpeech=NNP Lemma=GUI NamedEntityTag=O]
[Text=, CharacterOffsetBegin=116 CharacterOffsetEnd=117 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=that CharacterOffsetBegin=118 CharacterOffsetEnd=122 PartOfSpeech=WDT Lemma=that NamedEntityTag=O]
[Text=will CharacterOffsetBegin=123 CharacterOffsetEnd=127 PartOfSpeech=MD Lemma=will NamedEntityTag=O]
[Text=be CharacterOffsetBegin=128 CharacterOffsetEnd=130 PartOfSpeech=VB Lemma=be NamedEntityTag=O]
[Text=very CharacterOffsetBegin=131 CharacterOffsetEnd=135 PartOfSpeech=RB Lemma=very NamedEntityTag=O]
[Text=helpful CharacterOffsetBegin=136 CharacterOffsetEnd=143 PartOfSpeech=JJ Lemma=helpful NamedEntityTag=O]
(ROOT
  (SBAR (IN If)
    (S
      (NP (PRP we))
      (VP (MD can)
        (VP
          (VP (VB select)
            (NP (DT a) (NN column)))
          (CC and)
          (VP (DT the)
            (VP (VB find)
              (NP (JJ particular) (NN word)
                (CC or)
                (NN string)))
            (CC and)
            (VP
              (ADVP (RB then))
              (VB replace)
              (PP (IN with)
                (NP (DT some) (JJ other) (NN string)))
              (PP (IN through)
                (NP
                  (NP (NNP GUI))
                  (, ,)
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (MD will)
                        (VP (VB be)
                          (ADJP (RB very) (JJ helpful)))))))))))))))

root(ROOT-0, select-4)
mark(select-4, If-1)
nsubj(select-4, we-2)
nsubj(find-9, we-2)
aux(select-4, can-3)
det(column-6, a-5)
dobj(select-4, column-6)
cc(select-4, and-7)
dep(find-9, the-8)
conj:and(select-4, find-9)
amod(word-11, particular-10)
dobj(find-9, word-11)
cc(word-11, or-12)
dobj(find-9, string-13)
conj:or(word-11, string-13)
cc(find-9, and-14)
advmod(replace-16, then-15)
conj:and(select-4, replace-16)
conj:and(find-9, replace-16)
case(string-20, with-17)
det(string-20, some-18)
amod(string-20, other-19)
nmod:with(replace-16, string-20)
case(GUI-22, through-21)
nmod:through(replace-16, GUI-22)
nsubj(helpful-28, GUI-22)
punct(GUI-22, ,-23)
ref(GUI-22, that-24)
aux(helpful-28, will-25)
cop(helpful-28, be-26)
advmod(helpful-28, very-27)
acl:relcl(GUI-22, helpful-28)


==============Pipeline Pretty Print==============
Sentence #1 (9 tokens):
Make auto fill to finish table names or column
[Text=Make CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=VB Lemma=make NamedEntityTag=O]
[Text=auto CharacterOffsetBegin=5 CharacterOffsetEnd=9 PartOfSpeech=NN Lemma=auto NamedEntityTag=O]
[Text=fill CharacterOffsetBegin=10 CharacterOffsetEnd=14 PartOfSpeech=NN Lemma=fill NamedEntityTag=O]
[Text=to CharacterOffsetBegin=15 CharacterOffsetEnd=17 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=finish CharacterOffsetBegin=18 CharacterOffsetEnd=24 PartOfSpeech=VB Lemma=finish NamedEntityTag=O]
[Text=table CharacterOffsetBegin=25 CharacterOffsetEnd=30 PartOfSpeech=NN Lemma=table NamedEntityTag=O]
[Text=names CharacterOffsetBegin=31 CharacterOffsetEnd=36 PartOfSpeech=NNS Lemma=name NamedEntityTag=O]
[Text=or CharacterOffsetBegin=37 CharacterOffsetEnd=39 PartOfSpeech=CC Lemma=or NamedEntityTag=O]
[Text=column CharacterOffsetBegin=40 CharacterOffsetEnd=46 PartOfSpeech=NN Lemma=column NamedEntityTag=O]
(ROOT
  (S
    (VP (VB Make)
      (S
        (NP (NN auto) (NN fill))
        (VP (TO to)
          (VP (VB finish)
            (NP
              (NP (NN table) (NNS names))
              (CC or)
              (NP (NN column)))))))))

root(ROOT-0, Make-1)
compound(fill-3, auto-2)
dobj(Make-1, fill-3)
nsubj:xsubj(finish-5, fill-3)
mark(finish-5, to-4)
xcomp(Make-1, finish-5)
compound(names-7, table-6)
dobj(finish-5, names-7)
cc(names-7, or-8)
dobj(finish-5, column-9)
conj:or(names-7, column-9)


==============Pipeline Pretty Print==============
Sentence #1 (9 tokens):
Make auto fill to finish table names or column
[Text=Make CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=VB Lemma=make NamedEntityTag=O]
[Text=auto CharacterOffsetBegin=5 CharacterOffsetEnd=9 PartOfSpeech=NN Lemma=auto NamedEntityTag=O]
[Text=fill CharacterOffsetBegin=10 CharacterOffsetEnd=14 PartOfSpeech=NN Lemma=fill NamedEntityTag=O]
[Text=to CharacterOffsetBegin=15 CharacterOffsetEnd=17 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=finish CharacterOffsetBegin=18 CharacterOffsetEnd=24 PartOfSpeech=VB Lemma=finish NamedEntityTag=O]
[Text=table CharacterOffsetBegin=25 CharacterOffsetEnd=30 PartOfSpeech=NN Lemma=table NamedEntityTag=O]
[Text=names CharacterOffsetBegin=31 CharacterOffsetEnd=36 PartOfSpeech=NNS Lemma=name NamedEntityTag=O]
[Text=or CharacterOffsetBegin=37 CharacterOffsetEnd=39 PartOfSpeech=CC Lemma=or NamedEntityTag=O]
[Text=column CharacterOffsetBegin=40 CharacterOffsetEnd=46 PartOfSpeech=NN Lemma=column NamedEntityTag=O]
(ROOT
  (S
    (VP (VB Make)
      (S
        (NP (NN auto) (NN fill))
        (VP (TO to)
          (VP (VB finish)
            (NP
              (NP (NN table) (NNS names))
              (CC or)
              (NP (NN column)))))))))

root(ROOT-0, Make-1)
compound(fill-3, auto-2)
dobj(Make-1, fill-3)
nsubj:xsubj(finish-5, fill-3)
mark(finish-5, to-4)
xcomp(Make-1, finish-5)
compound(names-7, table-6)
dobj(finish-5, names-7)
cc(names-7, or-8)
dobj(finish-5, column-9)
conj:or(names-7, column-9)


==============Pipeline Pretty Print==============
Sentence #1 (9 tokens):
Make auto fill to finish table names or column
[Text=Make CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=VB Lemma=make NamedEntityTag=O]
[Text=auto CharacterOffsetBegin=5 CharacterOffsetEnd=9 PartOfSpeech=NN Lemma=auto NamedEntityTag=O]
[Text=fill CharacterOffsetBegin=10 CharacterOffsetEnd=14 PartOfSpeech=NN Lemma=fill NamedEntityTag=O]
[Text=to CharacterOffsetBegin=15 CharacterOffsetEnd=17 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=finish CharacterOffsetBegin=18 CharacterOffsetEnd=24 PartOfSpeech=VB Lemma=finish NamedEntityTag=O]
[Text=table CharacterOffsetBegin=25 CharacterOffsetEnd=30 PartOfSpeech=NN Lemma=table NamedEntityTag=O]
[Text=names CharacterOffsetBegin=31 CharacterOffsetEnd=36 PartOfSpeech=NNS Lemma=name NamedEntityTag=O]
[Text=or CharacterOffsetBegin=37 CharacterOffsetEnd=39 PartOfSpeech=CC Lemma=or NamedEntityTag=O]
[Text=column CharacterOffsetBegin=40 CharacterOffsetEnd=46 PartOfSpeech=NN Lemma=column NamedEntityTag=O]
(ROOT
  (S
    (VP (VB Make)
      (S
        (NP (NN auto) (NN fill))
        (VP (TO to)
          (VP (VB finish)
            (NP
              (NP (NN table) (NNS names))
              (CC or)
              (NP (NN column)))))))))

root(ROOT-0, Make-1)
compound(fill-3, auto-2)
dobj(Make-1, fill-3)
nsubj:xsubj(finish-5, fill-3)
mark(finish-5, to-4)
xcomp(Make-1, finish-5)
compound(names-7, table-6)
dobj(finish-5, names-7)
cc(names-7, or-8)
dobj(finish-5, column-9)
conj:or(names-7, column-9)


==============Pipeline Pretty Print==============
Sentence #1 (9 tokens):
Make auto fill to finish table names or column
[Text=Make CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=VB Lemma=make NamedEntityTag=O]
[Text=auto CharacterOffsetBegin=5 CharacterOffsetEnd=9 PartOfSpeech=NN Lemma=auto NamedEntityTag=O]
[Text=fill CharacterOffsetBegin=10 CharacterOffsetEnd=14 PartOfSpeech=NN Lemma=fill NamedEntityTag=O]
[Text=to CharacterOffsetBegin=15 CharacterOffsetEnd=17 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=finish CharacterOffsetBegin=18 CharacterOffsetEnd=24 PartOfSpeech=VB Lemma=finish NamedEntityTag=O]
[Text=table CharacterOffsetBegin=25 CharacterOffsetEnd=30 PartOfSpeech=NN Lemma=table NamedEntityTag=O]
[Text=names CharacterOffsetBegin=31 CharacterOffsetEnd=36 PartOfSpeech=NNS Lemma=name NamedEntityTag=O]
[Text=or CharacterOffsetBegin=37 CharacterOffsetEnd=39 PartOfSpeech=CC Lemma=or NamedEntityTag=O]
[Text=column CharacterOffsetBegin=40 CharacterOffsetEnd=46 PartOfSpeech=NN Lemma=column NamedEntityTag=O]
(ROOT
  (S
    (VP (VB Make)
      (S
        (NP (NN auto) (NN fill))
        (VP (TO to)
          (VP (VB finish)
            (NP
              (NP (NN table) (NNS names))
              (CC or)
              (NP (NN column)))))))))

root(ROOT-0, Make-1)
compound(fill-3, auto-2)
dobj(Make-1, fill-3)
nsubj:xsubj(finish-5, fill-3)
mark(finish-5, to-4)
xcomp(Make-1, finish-5)
compound(names-7, table-6)
dobj(finish-5, names-7)
cc(names-7, or-8)
dobj(finish-5, column-9)
conj:or(names-7, column-9)


==============Pipeline Pretty Print==============
Sentence #1 (9 tokens):
Make auto fill to finish table names or column
[Text=Make CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=VB Lemma=make NamedEntityTag=O]
[Text=auto CharacterOffsetBegin=5 CharacterOffsetEnd=9 PartOfSpeech=NN Lemma=auto NamedEntityTag=O]
[Text=fill CharacterOffsetBegin=10 CharacterOffsetEnd=14 PartOfSpeech=NN Lemma=fill NamedEntityTag=O]
[Text=to CharacterOffsetBegin=15 CharacterOffsetEnd=17 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=finish CharacterOffsetBegin=18 CharacterOffsetEnd=24 PartOfSpeech=VB Lemma=finish NamedEntityTag=O]
[Text=table CharacterOffsetBegin=25 CharacterOffsetEnd=30 PartOfSpeech=NN Lemma=table NamedEntityTag=O]
[Text=names CharacterOffsetBegin=31 CharacterOffsetEnd=36 PartOfSpeech=NNS Lemma=name NamedEntityTag=O]
[Text=or CharacterOffsetBegin=37 CharacterOffsetEnd=39 PartOfSpeech=CC Lemma=or NamedEntityTag=O]
[Text=column CharacterOffsetBegin=40 CharacterOffsetEnd=46 PartOfSpeech=NN Lemma=column NamedEntityTag=O]
(ROOT
  (S
    (VP (VB Make)
      (S
        (NP (NN auto) (NN fill))
        (VP (TO to)
          (VP (VB finish)
            (NP
              (NP (NN table) (NNS names))
              (CC or)
              (NP (NN column)))))))))

root(ROOT-0, Make-1)
compound(fill-3, auto-2)
dobj(Make-1, fill-3)
nsubj:xsubj(finish-5, fill-3)
mark(finish-5, to-4)
xcomp(Make-1, finish-5)
compound(names-7, table-6)
dobj(finish-5, names-7)
cc(names-7, or-8)
dobj(finish-5, column-9)
conj:or(names-7, column-9)


==============Pipeline Pretty Print==============
Sentence #1 (10 tokens):
Make auto fill to finish table names or column.
[Text=Make CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=VB Lemma=make NamedEntityTag=O]
[Text=auto CharacterOffsetBegin=5 CharacterOffsetEnd=9 PartOfSpeech=NN Lemma=auto NamedEntityTag=O]
[Text=fill CharacterOffsetBegin=10 CharacterOffsetEnd=14 PartOfSpeech=NN Lemma=fill NamedEntityTag=O]
[Text=to CharacterOffsetBegin=15 CharacterOffsetEnd=17 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=finish CharacterOffsetBegin=18 CharacterOffsetEnd=24 PartOfSpeech=VB Lemma=finish NamedEntityTag=O]
[Text=table CharacterOffsetBegin=25 CharacterOffsetEnd=30 PartOfSpeech=NN Lemma=table NamedEntityTag=O]
[Text=names CharacterOffsetBegin=31 CharacterOffsetEnd=36 PartOfSpeech=NNS Lemma=name NamedEntityTag=O]
[Text=or CharacterOffsetBegin=37 CharacterOffsetEnd=39 PartOfSpeech=CC Lemma=or NamedEntityTag=O]
[Text=column CharacterOffsetBegin=40 CharacterOffsetEnd=46 PartOfSpeech=NN Lemma=column NamedEntityTag=O]
[Text=. CharacterOffsetBegin=46 CharacterOffsetEnd=47 PartOfSpeech=. Lemma=. NamedEntityTag=O]
(ROOT
  (S
    (VP (VB Make)
      (S
        (NP (NN auto) (NN fill))
        (VP (TO to)
          (VP (VB finish)
            (NP
              (NP (NN table) (NNS names))
              (CC or)
              (NP (NN column)))))))
    (. .)))

root(ROOT-0, Make-1)
compound(fill-3, auto-2)
dobj(Make-1, fill-3)
nsubj:xsubj(finish-5, fill-3)
mark(finish-5, to-4)
xcomp(Make-1, finish-5)
compound(names-7, table-6)
dobj(finish-5, names-7)
cc(names-7, or-8)
dobj(finish-5, column-9)
conj:or(names-7, column-9)
punct(Make-1, .-10)


==============Pipeline Pretty Print==============
Sentence #1 (19 tokens):
This was convenient for me to click out of habit to return to the main view of the database
[Text=This CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=DT Lemma=this NamedEntityTag=O]
[Text=was CharacterOffsetBegin=5 CharacterOffsetEnd=8 PartOfSpeech=VBD Lemma=be NamedEntityTag=O]
[Text=convenient CharacterOffsetBegin=9 CharacterOffsetEnd=19 PartOfSpeech=JJ Lemma=convenient NamedEntityTag=O]
[Text=for CharacterOffsetBegin=20 CharacterOffsetEnd=23 PartOfSpeech=IN Lemma=for NamedEntityTag=O]
[Text=me CharacterOffsetBegin=24 CharacterOffsetEnd=26 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=to CharacterOffsetBegin=27 CharacterOffsetEnd=29 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=click CharacterOffsetBegin=30 CharacterOffsetEnd=35 PartOfSpeech=VB Lemma=click NamedEntityTag=O]
[Text=out CharacterOffsetBegin=36 CharacterOffsetEnd=39 PartOfSpeech=IN Lemma=out NamedEntityTag=O]
[Text=of CharacterOffsetBegin=40 CharacterOffsetEnd=42 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=habit CharacterOffsetBegin=43 CharacterOffsetEnd=48 PartOfSpeech=NN Lemma=habit NamedEntityTag=O]
[Text=to CharacterOffsetBegin=49 CharacterOffsetEnd=51 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=return CharacterOffsetBegin=52 CharacterOffsetEnd=58 PartOfSpeech=VB Lemma=return NamedEntityTag=O]
[Text=to CharacterOffsetBegin=59 CharacterOffsetEnd=61 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=the CharacterOffsetBegin=62 CharacterOffsetEnd=65 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=main CharacterOffsetBegin=66 CharacterOffsetEnd=70 PartOfSpeech=JJ Lemma=main NamedEntityTag=O]
[Text=view CharacterOffsetBegin=71 CharacterOffsetEnd=75 PartOfSpeech=NN Lemma=view NamedEntityTag=O]
[Text=of CharacterOffsetBegin=76 CharacterOffsetEnd=78 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=the CharacterOffsetBegin=79 CharacterOffsetEnd=82 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=database CharacterOffsetBegin=83 CharacterOffsetEnd=91 PartOfSpeech=NN Lemma=database NamedEntityTag=O]
(ROOT
  (S
    (NP (DT This))
    (VP (VBD was)
      (ADJP (JJ convenient)
        (PP (IN for)
          (NP (PRP me))))
      (S
        (VP (TO to)
          (VP (VB click)
            (ADVP (IN out)
              (PP (IN of)
                (NP (NN habit))))
            (S
              (VP (TO to)
                (VP (VB return)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (JJ main) (NN view))
                      (PP (IN of)
                        (NP (DT the) (NN database))))))))))))))

root(ROOT-0, convenient-3)
nsubj(convenient-3, This-1)
nsubj:xsubj(click-7, This-1)
cop(convenient-3, was-2)
case(me-5, for-4)
nmod:for(convenient-3, me-5)
mark(click-7, to-6)
xcomp(convenient-3, click-7)
case(habit-10, out-8)
mwe(out-8, of-9)
nmod:out_of(click-7, habit-10)
mark(return-12, to-11)
xcomp(click-7, return-12)
case(view-16, to-13)
det(view-16, the-14)
amod(view-16, main-15)
nmod:to(return-12, view-16)
case(database-19, of-17)
det(database-19, the-18)
nmod:of(view-16, database-19)


==============Pipeline Pretty Print==============
Sentence #1 (19 tokens):
This was convenient for me to click out of habit to return to the main view of the database
[Text=This CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=DT Lemma=this NamedEntityTag=O]
[Text=was CharacterOffsetBegin=5 CharacterOffsetEnd=8 PartOfSpeech=VBD Lemma=be NamedEntityTag=O]
[Text=convenient CharacterOffsetBegin=9 CharacterOffsetEnd=19 PartOfSpeech=JJ Lemma=convenient NamedEntityTag=O]
[Text=for CharacterOffsetBegin=20 CharacterOffsetEnd=23 PartOfSpeech=IN Lemma=for NamedEntityTag=O]
[Text=me CharacterOffsetBegin=24 CharacterOffsetEnd=26 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=to CharacterOffsetBegin=27 CharacterOffsetEnd=29 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=click CharacterOffsetBegin=30 CharacterOffsetEnd=35 PartOfSpeech=VB Lemma=click NamedEntityTag=O]
[Text=out CharacterOffsetBegin=36 CharacterOffsetEnd=39 PartOfSpeech=IN Lemma=out NamedEntityTag=O]
[Text=of CharacterOffsetBegin=40 CharacterOffsetEnd=42 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=habit CharacterOffsetBegin=43 CharacterOffsetEnd=48 PartOfSpeech=NN Lemma=habit NamedEntityTag=O]
[Text=to CharacterOffsetBegin=49 CharacterOffsetEnd=51 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=return CharacterOffsetBegin=52 CharacterOffsetEnd=58 PartOfSpeech=VB Lemma=return NamedEntityTag=O]
[Text=to CharacterOffsetBegin=59 CharacterOffsetEnd=61 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=the CharacterOffsetBegin=62 CharacterOffsetEnd=65 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=main CharacterOffsetBegin=66 CharacterOffsetEnd=70 PartOfSpeech=JJ Lemma=main NamedEntityTag=O]
[Text=view CharacterOffsetBegin=71 CharacterOffsetEnd=75 PartOfSpeech=NN Lemma=view NamedEntityTag=O]
[Text=of CharacterOffsetBegin=76 CharacterOffsetEnd=78 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=the CharacterOffsetBegin=79 CharacterOffsetEnd=82 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=database CharacterOffsetBegin=83 CharacterOffsetEnd=91 PartOfSpeech=NN Lemma=database NamedEntityTag=O]
(ROOT
  (S
    (NP (DT This))
    (VP (VBD was)
      (ADJP (JJ convenient)
        (PP (IN for)
          (NP (PRP me))))
      (S
        (VP (TO to)
          (VP (VB click)
            (ADVP (IN out)
              (PP (IN of)
                (NP (NN habit))))
            (S
              (VP (TO to)
                (VP (VB return)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (JJ main) (NN view))
                      (PP (IN of)
                        (NP (DT the) (NN database))))))))))))))

root(ROOT-0, convenient-3)
nsubj(convenient-3, This-1)
nsubj:xsubj(click-7, This-1)
cop(convenient-3, was-2)
case(me-5, for-4)
nmod:for(convenient-3, me-5)
mark(click-7, to-6)
xcomp(convenient-3, click-7)
case(habit-10, out-8)
mwe(out-8, of-9)
nmod:out_of(click-7, habit-10)
mark(return-12, to-11)
xcomp(click-7, return-12)
case(view-16, to-13)
det(view-16, the-14)
amod(view-16, main-15)
nmod:to(return-12, view-16)
case(database-19, of-17)
det(database-19, the-18)
nmod:of(view-16, database-19)


==============Pipeline Pretty Print==============
Sentence #1 (19 tokens):
This was convenient for me to click out of habit to return to the main view of the database
[Text=This CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=DT Lemma=this NamedEntityTag=O]
[Text=was CharacterOffsetBegin=5 CharacterOffsetEnd=8 PartOfSpeech=VBD Lemma=be NamedEntityTag=O]
[Text=convenient CharacterOffsetBegin=9 CharacterOffsetEnd=19 PartOfSpeech=JJ Lemma=convenient NamedEntityTag=O]
[Text=for CharacterOffsetBegin=20 CharacterOffsetEnd=23 PartOfSpeech=IN Lemma=for NamedEntityTag=O]
[Text=me CharacterOffsetBegin=24 CharacterOffsetEnd=26 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=to CharacterOffsetBegin=27 CharacterOffsetEnd=29 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=click CharacterOffsetBegin=30 CharacterOffsetEnd=35 PartOfSpeech=VB Lemma=click NamedEntityTag=O]
[Text=out CharacterOffsetBegin=36 CharacterOffsetEnd=39 PartOfSpeech=IN Lemma=out NamedEntityTag=O]
[Text=of CharacterOffsetBegin=40 CharacterOffsetEnd=42 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=habit CharacterOffsetBegin=43 CharacterOffsetEnd=48 PartOfSpeech=NN Lemma=habit NamedEntityTag=O]
[Text=to CharacterOffsetBegin=49 CharacterOffsetEnd=51 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=return CharacterOffsetBegin=52 CharacterOffsetEnd=58 PartOfSpeech=VB Lemma=return NamedEntityTag=O]
[Text=to CharacterOffsetBegin=59 CharacterOffsetEnd=61 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=the CharacterOffsetBegin=62 CharacterOffsetEnd=65 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=main CharacterOffsetBegin=66 CharacterOffsetEnd=70 PartOfSpeech=JJ Lemma=main NamedEntityTag=O]
[Text=view CharacterOffsetBegin=71 CharacterOffsetEnd=75 PartOfSpeech=NN Lemma=view NamedEntityTag=O]
[Text=of CharacterOffsetBegin=76 CharacterOffsetEnd=78 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=the CharacterOffsetBegin=79 CharacterOffsetEnd=82 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=database CharacterOffsetBegin=83 CharacterOffsetEnd=91 PartOfSpeech=NN Lemma=database NamedEntityTag=O]
(ROOT
  (S
    (NP (DT This))
    (VP (VBD was)
      (ADJP (JJ convenient)
        (PP (IN for)
          (NP (PRP me))))
      (S
        (VP (TO to)
          (VP (VB click)
            (ADVP (IN out)
              (PP (IN of)
                (NP (NN habit))))
            (S
              (VP (TO to)
                (VP (VB return)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (JJ main) (NN view))
                      (PP (IN of)
                        (NP (DT the) (NN database))))))))))))))

root(ROOT-0, convenient-3)
nsubj(convenient-3, This-1)
nsubj:xsubj(click-7, This-1)
cop(convenient-3, was-2)
case(me-5, for-4)
nmod:for(convenient-3, me-5)
mark(click-7, to-6)
xcomp(convenient-3, click-7)
case(habit-10, out-8)
mwe(out-8, of-9)
nmod:out_of(click-7, habit-10)
mark(return-12, to-11)
xcomp(click-7, return-12)
case(view-16, to-13)
det(view-16, the-14)
amod(view-16, main-15)
nmod:to(return-12, view-16)
case(database-19, of-17)
det(database-19, the-18)
nmod:of(view-16, database-19)


==============Pipeline Pretty Print==============
Sentence #1 (19 tokens):
This was convenient for me to click out of habit to return to the main view of the database
[Text=This CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=DT Lemma=this NamedEntityTag=O]
[Text=was CharacterOffsetBegin=5 CharacterOffsetEnd=8 PartOfSpeech=VBD Lemma=be NamedEntityTag=O]
[Text=convenient CharacterOffsetBegin=9 CharacterOffsetEnd=19 PartOfSpeech=JJ Lemma=convenient NamedEntityTag=O]
[Text=for CharacterOffsetBegin=20 CharacterOffsetEnd=23 PartOfSpeech=IN Lemma=for NamedEntityTag=O]
[Text=me CharacterOffsetBegin=24 CharacterOffsetEnd=26 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=to CharacterOffsetBegin=27 CharacterOffsetEnd=29 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=click CharacterOffsetBegin=30 CharacterOffsetEnd=35 PartOfSpeech=VB Lemma=click NamedEntityTag=O]
[Text=out CharacterOffsetBegin=36 CharacterOffsetEnd=39 PartOfSpeech=IN Lemma=out NamedEntityTag=O]
[Text=of CharacterOffsetBegin=40 CharacterOffsetEnd=42 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=habit CharacterOffsetBegin=43 CharacterOffsetEnd=48 PartOfSpeech=NN Lemma=habit NamedEntityTag=O]
[Text=to CharacterOffsetBegin=49 CharacterOffsetEnd=51 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=return CharacterOffsetBegin=52 CharacterOffsetEnd=58 PartOfSpeech=VB Lemma=return NamedEntityTag=O]
[Text=to CharacterOffsetBegin=59 CharacterOffsetEnd=61 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=the CharacterOffsetBegin=62 CharacterOffsetEnd=65 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=main CharacterOffsetBegin=66 CharacterOffsetEnd=70 PartOfSpeech=JJ Lemma=main NamedEntityTag=O]
[Text=view CharacterOffsetBegin=71 CharacterOffsetEnd=75 PartOfSpeech=NN Lemma=view NamedEntityTag=O]
[Text=of CharacterOffsetBegin=76 CharacterOffsetEnd=78 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=the CharacterOffsetBegin=79 CharacterOffsetEnd=82 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=database CharacterOffsetBegin=83 CharacterOffsetEnd=91 PartOfSpeech=NN Lemma=database NamedEntityTag=O]
(ROOT
  (S
    (NP (DT This))
    (VP (VBD was)
      (ADJP (JJ convenient)
        (PP (IN for)
          (NP (PRP me))))
      (S
        (VP (TO to)
          (VP (VB click)
            (ADVP (IN out)
              (PP (IN of)
                (NP (NN habit))))
            (S
              (VP (TO to)
                (VP (VB return)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (JJ main) (NN view))
                      (PP (IN of)
                        (NP (DT the) (NN database))))))))))))))

root(ROOT-0, convenient-3)
nsubj(convenient-3, This-1)
nsubj:xsubj(click-7, This-1)
cop(convenient-3, was-2)
case(me-5, for-4)
nmod:for(convenient-3, me-5)
mark(click-7, to-6)
xcomp(convenient-3, click-7)
case(habit-10, out-8)
mwe(out-8, of-9)
nmod:out_of(click-7, habit-10)
mark(return-12, to-11)
xcomp(click-7, return-12)
case(view-16, to-13)
det(view-16, the-14)
amod(view-16, main-15)
nmod:to(return-12, view-16)
case(database-19, of-17)
det(database-19, the-18)
nmod:of(view-16, database-19)


==============Pipeline Pretty Print==============
Sentence #1 (19 tokens):
This was convenient for me to click out of habit to return to the main view of the database
[Text=This CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=DT Lemma=this NamedEntityTag=O]
[Text=was CharacterOffsetBegin=5 CharacterOffsetEnd=8 PartOfSpeech=VBD Lemma=be NamedEntityTag=O]
[Text=convenient CharacterOffsetBegin=9 CharacterOffsetEnd=19 PartOfSpeech=JJ Lemma=convenient NamedEntityTag=O]
[Text=for CharacterOffsetBegin=20 CharacterOffsetEnd=23 PartOfSpeech=IN Lemma=for NamedEntityTag=O]
[Text=me CharacterOffsetBegin=24 CharacterOffsetEnd=26 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=to CharacterOffsetBegin=27 CharacterOffsetEnd=29 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=click CharacterOffsetBegin=30 CharacterOffsetEnd=35 PartOfSpeech=VB Lemma=click NamedEntityTag=O]
[Text=out CharacterOffsetBegin=36 CharacterOffsetEnd=39 PartOfSpeech=IN Lemma=out NamedEntityTag=O]
[Text=of CharacterOffsetBegin=40 CharacterOffsetEnd=42 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=habit CharacterOffsetBegin=43 CharacterOffsetEnd=48 PartOfSpeech=NN Lemma=habit NamedEntityTag=O]
[Text=to CharacterOffsetBegin=49 CharacterOffsetEnd=51 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=return CharacterOffsetBegin=52 CharacterOffsetEnd=58 PartOfSpeech=VB Lemma=return NamedEntityTag=O]
[Text=to CharacterOffsetBegin=59 CharacterOffsetEnd=61 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=the CharacterOffsetBegin=62 CharacterOffsetEnd=65 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=main CharacterOffsetBegin=66 CharacterOffsetEnd=70 PartOfSpeech=JJ Lemma=main NamedEntityTag=O]
[Text=view CharacterOffsetBegin=71 CharacterOffsetEnd=75 PartOfSpeech=NN Lemma=view NamedEntityTag=O]
[Text=of CharacterOffsetBegin=76 CharacterOffsetEnd=78 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=the CharacterOffsetBegin=79 CharacterOffsetEnd=82 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=database CharacterOffsetBegin=83 CharacterOffsetEnd=91 PartOfSpeech=NN Lemma=database NamedEntityTag=O]
(ROOT
  (S
    (NP (DT This))
    (VP (VBD was)
      (ADJP (JJ convenient)
        (PP (IN for)
          (NP (PRP me))))
      (S
        (VP (TO to)
          (VP (VB click)
            (ADVP (IN out)
              (PP (IN of)
                (NP (NN habit))))
            (S
              (VP (TO to)
                (VP (VB return)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (JJ main) (NN view))
                      (PP (IN of)
                        (NP (DT the) (NN database))))))))))))))

root(ROOT-0, convenient-3)
nsubj(convenient-3, This-1)
nsubj:xsubj(click-7, This-1)
cop(convenient-3, was-2)
case(me-5, for-4)
nmod:for(convenient-3, me-5)
mark(click-7, to-6)
xcomp(convenient-3, click-7)
case(habit-10, out-8)
mwe(out-8, of-9)
nmod:out_of(click-7, habit-10)
mark(return-12, to-11)
xcomp(click-7, return-12)
case(view-16, to-13)
det(view-16, the-14)
amod(view-16, main-15)
nmod:to(return-12, view-16)
case(database-19, of-17)
det(database-19, the-18)
nmod:of(view-16, database-19)


==============Pipeline Pretty Print==============
Sentence #1 (11 tokens):
But I was wandering , this feature is available or not
[Text=But CharacterOffsetBegin=0 CharacterOffsetEnd=3 PartOfSpeech=CC Lemma=but NamedEntityTag=O]
[Text=I CharacterOffsetBegin=4 CharacterOffsetEnd=5 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=was CharacterOffsetBegin=6 CharacterOffsetEnd=9 PartOfSpeech=VBD Lemma=be NamedEntityTag=O]
[Text=wandering CharacterOffsetBegin=10 CharacterOffsetEnd=19 PartOfSpeech=VBG Lemma=wander NamedEntityTag=O]
[Text=, CharacterOffsetBegin=20 CharacterOffsetEnd=21 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=this CharacterOffsetBegin=22 CharacterOffsetEnd=26 PartOfSpeech=DT Lemma=this NamedEntityTag=O]
[Text=feature CharacterOffsetBegin=27 CharacterOffsetEnd=34 PartOfSpeech=NN Lemma=feature NamedEntityTag=O]
[Text=is CharacterOffsetBegin=35 CharacterOffsetEnd=37 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O]
[Text=available CharacterOffsetBegin=38 CharacterOffsetEnd=47 PartOfSpeech=JJ Lemma=available NamedEntityTag=O]
[Text=or CharacterOffsetBegin=48 CharacterOffsetEnd=50 PartOfSpeech=CC Lemma=or NamedEntityTag=O]
[Text=not CharacterOffsetBegin=51 CharacterOffsetEnd=54 PartOfSpeech=RB Lemma=not NamedEntityTag=O]
(ROOT
  (NP
    (S
      (S (CC But)
        (NP (PRP I))
        (VP (VBD was)
          (VP (VBG wandering))))
      (, ,)
      (NP (DT this) (NN feature))
      (VP (VBZ is)
        (ADJP (JJ available)
          (CC or)
          (RB not))))))

root(ROOT-0, available-9)
cc(wandering-4, But-1)
nsubj(wandering-4, I-2)
aux(wandering-4, was-3)
ccomp(available-9, wandering-4)
punct(available-9, ,-5)
det(feature-7, this-6)
nsubj(available-9, feature-7)
cop(available-9, is-8)
cc(available-9, or-10)
conj:or(available-9, not-11)


==============Pipeline Pretty Print==============
Sentence #1 (11 tokens):
But I was wandering , this feature is available or not
[Text=But CharacterOffsetBegin=0 CharacterOffsetEnd=3 PartOfSpeech=CC Lemma=but NamedEntityTag=O]
[Text=I CharacterOffsetBegin=4 CharacterOffsetEnd=5 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=was CharacterOffsetBegin=6 CharacterOffsetEnd=9 PartOfSpeech=VBD Lemma=be NamedEntityTag=O]
[Text=wandering CharacterOffsetBegin=10 CharacterOffsetEnd=19 PartOfSpeech=VBG Lemma=wander NamedEntityTag=O]
[Text=, CharacterOffsetBegin=20 CharacterOffsetEnd=21 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=this CharacterOffsetBegin=22 CharacterOffsetEnd=26 PartOfSpeech=DT Lemma=this NamedEntityTag=O]
[Text=feature CharacterOffsetBegin=27 CharacterOffsetEnd=34 PartOfSpeech=NN Lemma=feature NamedEntityTag=O]
[Text=is CharacterOffsetBegin=35 CharacterOffsetEnd=37 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O]
[Text=available CharacterOffsetBegin=38 CharacterOffsetEnd=47 PartOfSpeech=JJ Lemma=available NamedEntityTag=O]
[Text=or CharacterOffsetBegin=48 CharacterOffsetEnd=50 PartOfSpeech=CC Lemma=or NamedEntityTag=O]
[Text=not CharacterOffsetBegin=51 CharacterOffsetEnd=54 PartOfSpeech=RB Lemma=not NamedEntityTag=O]
(ROOT
  (NP
    (S
      (S (CC But)
        (NP (PRP I))
        (VP (VBD was)
          (VP (VBG wandering))))
      (, ,)
      (NP (DT this) (NN feature))
      (VP (VBZ is)
        (ADJP (JJ available)
          (CC or)
          (RB not))))))

root(ROOT-0, available-9)
cc(wandering-4, But-1)
nsubj(wandering-4, I-2)
aux(wandering-4, was-3)
ccomp(available-9, wandering-4)
punct(available-9, ,-5)
det(feature-7, this-6)
nsubj(available-9, feature-7)
cop(available-9, is-8)
cc(available-9, or-10)
conj:or(available-9, not-11)


==============Pipeline Pretty Print==============
Sentence #1 (11 tokens):
But I was wondering , this feature is available or not
[Text=But CharacterOffsetBegin=0 CharacterOffsetEnd=3 PartOfSpeech=CC Lemma=but NamedEntityTag=O]
[Text=I CharacterOffsetBegin=4 CharacterOffsetEnd=5 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=was CharacterOffsetBegin=6 CharacterOffsetEnd=9 PartOfSpeech=VBD Lemma=be NamedEntityTag=O]
[Text=wondering CharacterOffsetBegin=10 CharacterOffsetEnd=19 PartOfSpeech=VBG Lemma=wonder NamedEntityTag=O]
[Text=, CharacterOffsetBegin=20 CharacterOffsetEnd=21 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=this CharacterOffsetBegin=22 CharacterOffsetEnd=26 PartOfSpeech=DT Lemma=this NamedEntityTag=O]
[Text=feature CharacterOffsetBegin=27 CharacterOffsetEnd=34 PartOfSpeech=NN Lemma=feature NamedEntityTag=O]
[Text=is CharacterOffsetBegin=35 CharacterOffsetEnd=37 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O]
[Text=available CharacterOffsetBegin=38 CharacterOffsetEnd=47 PartOfSpeech=JJ Lemma=available NamedEntityTag=O]
[Text=or CharacterOffsetBegin=48 CharacterOffsetEnd=50 PartOfSpeech=CC Lemma=or NamedEntityTag=O]
[Text=not CharacterOffsetBegin=51 CharacterOffsetEnd=54 PartOfSpeech=RB Lemma=not NamedEntityTag=O]
(ROOT
  (NP
    (S
      (S (CC But)
        (NP (PRP I))
        (VP (VBD was)
          (VP (VBG wondering))))
      (, ,)
      (NP (DT this) (NN feature))
      (VP (VBZ is)
        (ADJP (JJ available)
          (CC or)
          (RB not))))))

root(ROOT-0, available-9)
cc(wondering-4, But-1)
nsubj(wondering-4, I-2)
aux(wondering-4, was-3)
ccomp(available-9, wondering-4)
punct(available-9, ,-5)
det(feature-7, this-6)
nsubj(available-9, feature-7)
cop(available-9, is-8)
cc(available-9, or-10)
conj:or(available-9, not-11)


==============Pipeline Pretty Print==============
Sentence #1 (11 tokens):
But I was wondering , this feature is available or not
[Text=But CharacterOffsetBegin=0 CharacterOffsetEnd=3 PartOfSpeech=CC Lemma=but NamedEntityTag=O]
[Text=I CharacterOffsetBegin=4 CharacterOffsetEnd=5 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=was CharacterOffsetBegin=6 CharacterOffsetEnd=9 PartOfSpeech=VBD Lemma=be NamedEntityTag=O]
[Text=wondering CharacterOffsetBegin=10 CharacterOffsetEnd=19 PartOfSpeech=VBG Lemma=wonder NamedEntityTag=O]
[Text=, CharacterOffsetBegin=20 CharacterOffsetEnd=21 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=this CharacterOffsetBegin=22 CharacterOffsetEnd=26 PartOfSpeech=DT Lemma=this NamedEntityTag=O]
[Text=feature CharacterOffsetBegin=27 CharacterOffsetEnd=34 PartOfSpeech=NN Lemma=feature NamedEntityTag=O]
[Text=is CharacterOffsetBegin=35 CharacterOffsetEnd=37 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O]
[Text=available CharacterOffsetBegin=38 CharacterOffsetEnd=47 PartOfSpeech=JJ Lemma=available NamedEntityTag=O]
[Text=or CharacterOffsetBegin=48 CharacterOffsetEnd=50 PartOfSpeech=CC Lemma=or NamedEntityTag=O]
[Text=not CharacterOffsetBegin=51 CharacterOffsetEnd=54 PartOfSpeech=RB Lemma=not NamedEntityTag=O]
(ROOT
  (NP
    (S
      (S (CC But)
        (NP (PRP I))
        (VP (VBD was)
          (VP (VBG wondering))))
      (, ,)
      (NP (DT this) (NN feature))
      (VP (VBZ is)
        (ADJP (JJ available)
          (CC or)
          (RB not))))))

root(ROOT-0, available-9)
cc(wondering-4, But-1)
nsubj(wondering-4, I-2)
aux(wondering-4, was-3)
ccomp(available-9, wondering-4)
punct(available-9, ,-5)
det(feature-7, this-6)
nsubj(available-9, feature-7)
cop(available-9, is-8)
cc(available-9, or-10)
conj:or(available-9, not-11)


==============Pipeline Pretty Print==============
Sentence #1 (6 tokens):
I thank you for future answer
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=thank CharacterOffsetBegin=2 CharacterOffsetEnd=7 PartOfSpeech=VBP Lemma=thank NamedEntityTag=O]
[Text=you CharacterOffsetBegin=8 CharacterOffsetEnd=11 PartOfSpeech=PRP Lemma=you NamedEntityTag=O]
[Text=for CharacterOffsetBegin=12 CharacterOffsetEnd=15 PartOfSpeech=IN Lemma=for NamedEntityTag=O]
[Text=future CharacterOffsetBegin=16 CharacterOffsetEnd=22 PartOfSpeech=JJ Lemma=future NamedEntityTag=O]
[Text=answer CharacterOffsetBegin=23 CharacterOffsetEnd=29 PartOfSpeech=NN Lemma=answer NamedEntityTag=O]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP thank)
      (NP (PRP you))
      (PP (IN for)
        (NP (JJ future) (NN answer))))))

root(ROOT-0, thank-2)
nsubj(thank-2, I-1)
dobj(thank-2, you-3)
case(answer-6, for-4)
amod(answer-6, future-5)
nmod:for(thank-2, answer-6)


==============Pipeline Pretty Print==============
Sentence #1 (19 tokens):
This was convenient for me to click out of habit to return to the main view of the database
[Text=This CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=DT Lemma=this NamedEntityTag=O]
[Text=was CharacterOffsetBegin=5 CharacterOffsetEnd=8 PartOfSpeech=VBD Lemma=be NamedEntityTag=O]
[Text=convenient CharacterOffsetBegin=9 CharacterOffsetEnd=19 PartOfSpeech=JJ Lemma=convenient NamedEntityTag=O]
[Text=for CharacterOffsetBegin=20 CharacterOffsetEnd=23 PartOfSpeech=IN Lemma=for NamedEntityTag=O]
[Text=me CharacterOffsetBegin=24 CharacterOffsetEnd=26 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=to CharacterOffsetBegin=27 CharacterOffsetEnd=29 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=click CharacterOffsetBegin=30 CharacterOffsetEnd=35 PartOfSpeech=VB Lemma=click NamedEntityTag=O]
[Text=out CharacterOffsetBegin=36 CharacterOffsetEnd=39 PartOfSpeech=IN Lemma=out NamedEntityTag=O]
[Text=of CharacterOffsetBegin=40 CharacterOffsetEnd=42 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=habit CharacterOffsetBegin=43 CharacterOffsetEnd=48 PartOfSpeech=NN Lemma=habit NamedEntityTag=O]
[Text=to CharacterOffsetBegin=49 CharacterOffsetEnd=51 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=return CharacterOffsetBegin=52 CharacterOffsetEnd=58 PartOfSpeech=VB Lemma=return NamedEntityTag=O]
[Text=to CharacterOffsetBegin=59 CharacterOffsetEnd=61 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=the CharacterOffsetBegin=62 CharacterOffsetEnd=65 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=main CharacterOffsetBegin=66 CharacterOffsetEnd=70 PartOfSpeech=JJ Lemma=main NamedEntityTag=O]
[Text=view CharacterOffsetBegin=71 CharacterOffsetEnd=75 PartOfSpeech=NN Lemma=view NamedEntityTag=O]
[Text=of CharacterOffsetBegin=76 CharacterOffsetEnd=78 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=the CharacterOffsetBegin=79 CharacterOffsetEnd=82 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=database CharacterOffsetBegin=83 CharacterOffsetEnd=91 PartOfSpeech=NN Lemma=database NamedEntityTag=O]
(ROOT
  (S
    (NP (DT This))
    (VP (VBD was)
      (ADJP (JJ convenient)
        (PP (IN for)
          (NP (PRP me))))
      (S
        (VP (TO to)
          (VP (VB click)
            (ADVP (IN out)
              (PP (IN of)
                (NP (NN habit))))
            (S
              (VP (TO to)
                (VP (VB return)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (JJ main) (NN view))
                      (PP (IN of)
                        (NP (DT the) (NN database))))))))))))))

root(ROOT-0, convenient-3)
nsubj(convenient-3, This-1)
nsubj:xsubj(click-7, This-1)
cop(convenient-3, was-2)
case(me-5, for-4)
nmod:for(convenient-3, me-5)
mark(click-7, to-6)
xcomp(convenient-3, click-7)
case(habit-10, out-8)
mwe(out-8, of-9)
nmod:out_of(click-7, habit-10)
mark(return-12, to-11)
xcomp(click-7, return-12)
case(view-16, to-13)
det(view-16, the-14)
amod(view-16, main-15)
nmod:to(return-12, view-16)
case(database-19, of-17)
det(database-19, the-18)
nmod:of(view-16, database-19)


==============Pipeline Pretty Print==============
Sentence #1 (19 tokens):
Did I miss something related to "find and replace feature" or please give your suggestion to this
[Text=Did CharacterOffsetBegin=0 CharacterOffsetEnd=3 PartOfSpeech=VBD Lemma=do NamedEntityTag=O]
[Text=I CharacterOffsetBegin=4 CharacterOffsetEnd=5 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=miss CharacterOffsetBegin=6 CharacterOffsetEnd=10 PartOfSpeech=VBP Lemma=miss NamedEntityTag=O]
[Text=something CharacterOffsetBegin=11 CharacterOffsetEnd=20 PartOfSpeech=NN Lemma=something NamedEntityTag=O]
[Text=related CharacterOffsetBegin=21 CharacterOffsetEnd=28 PartOfSpeech=JJ Lemma=related NamedEntityTag=O]
[Text=to CharacterOffsetBegin=29 CharacterOffsetEnd=31 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=`` CharacterOffsetBegin=32 CharacterOffsetEnd=33 PartOfSpeech=`` Lemma=`` NamedEntityTag=O]
[Text=find CharacterOffsetBegin=33 CharacterOffsetEnd=37 PartOfSpeech=VB Lemma=find NamedEntityTag=O]
[Text=and CharacterOffsetBegin=38 CharacterOffsetEnd=41 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=replace CharacterOffsetBegin=42 CharacterOffsetEnd=49 PartOfSpeech=VB Lemma=replace NamedEntityTag=O]
[Text=feature CharacterOffsetBegin=50 CharacterOffsetEnd=57 PartOfSpeech=NN Lemma=feature NamedEntityTag=O]
[Text='' CharacterOffsetBegin=57 CharacterOffsetEnd=58 PartOfSpeech='' Lemma='' NamedEntityTag=O]
[Text=or CharacterOffsetBegin=59 CharacterOffsetEnd=61 PartOfSpeech=CC Lemma=or NamedEntityTag=O]
[Text=please CharacterOffsetBegin=62 CharacterOffsetEnd=68 PartOfSpeech=VB Lemma=please NamedEntityTag=O]
[Text=give CharacterOffsetBegin=69 CharacterOffsetEnd=73 PartOfSpeech=VB Lemma=give NamedEntityTag=O]
[Text=your CharacterOffsetBegin=74 CharacterOffsetEnd=78 PartOfSpeech=PRP$ Lemma=you NamedEntityTag=O]
[Text=suggestion CharacterOffsetBegin=79 CharacterOffsetEnd=89 PartOfSpeech=NN Lemma=suggestion NamedEntityTag=O]
[Text=to CharacterOffsetBegin=90 CharacterOffsetEnd=92 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=this CharacterOffsetBegin=93 CharacterOffsetEnd=97 PartOfSpeech=DT Lemma=this NamedEntityTag=O]
(ROOT
  (SINV
    (VP (VBD Did)
      (SBAR
        (S
          (S
            (NP (PRP I))
            (VP (VBP miss)
              (S
                (NP (NN something))
                (ADJP (JJ related)
                  (S
                    (VP (TO to) (`` ``)
                      (VP (VB find)
                        (CC and)
                        (VB replace)
                        (NP (NN feature)))
                      ('' '')))))))
          (CC or)
          (S
            (INTJ (VB please))
            (VP (VB give)
              (NP (PRP$ your) (NN suggestion))
              (PP (TO to)))))))
    (NP (DT this))))

root(ROOT-0, Did-1)
nsubj(miss-3, I-2)
nsubj(give-15, I-2)
dep(Did-1, miss-3)
nsubj(related-5, something-4)
nsubj:xsubj(find-8, something-4)
nsubj:xsubj(replace-10, something-4)
xcomp(miss-3, related-5)
mark(find-8, to-6)
punct(find-8, ``-7)
xcomp(related-5, find-8)
cc(find-8, and-9)
xcomp(related-5, replace-10)
conj:and(find-8, replace-10)
dobj(find-8, feature-11)
punct(find-8, ''-12)
cc(miss-3, or-13)
discourse(give-15, please-14)
dep(Did-1, give-15)
conj:or(miss-3, give-15)
nmod:poss(suggestion-17, your-16)
dobj(give-15, suggestion-17)
nmod(give-15, to-18)
nsubj(Did-1, this-19)


==============Pipeline Pretty Print==============
Sentence #1 (20 tokens):
so, phpMyAdmin would help me a lot if I could just generate the SQL for each change BEFORE applying
[Text=so CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=RB Lemma=so NamedEntityTag=O]
[Text=, CharacterOffsetBegin=2 CharacterOffsetEnd=3 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=phpMyAdmin CharacterOffsetBegin=4 CharacterOffsetEnd=14 PartOfSpeech=NN Lemma=phpmyadmin NamedEntityTag=O]
[Text=would CharacterOffsetBegin=15 CharacterOffsetEnd=20 PartOfSpeech=MD Lemma=would NamedEntityTag=O]
[Text=help CharacterOffsetBegin=21 CharacterOffsetEnd=25 PartOfSpeech=VB Lemma=help NamedEntityTag=O]
[Text=me CharacterOffsetBegin=26 CharacterOffsetEnd=28 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=a CharacterOffsetBegin=29 CharacterOffsetEnd=30 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=lot CharacterOffsetBegin=31 CharacterOffsetEnd=34 PartOfSpeech=NN Lemma=lot NamedEntityTag=O]
[Text=if CharacterOffsetBegin=35 CharacterOffsetEnd=37 PartOfSpeech=IN Lemma=if NamedEntityTag=O]
[Text=I CharacterOffsetBegin=38 CharacterOffsetEnd=39 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=could CharacterOffsetBegin=40 CharacterOffsetEnd=45 PartOfSpeech=MD Lemma=could NamedEntityTag=O]
[Text=just CharacterOffsetBegin=46 CharacterOffsetEnd=50 PartOfSpeech=RB Lemma=just NamedEntityTag=O]
[Text=generate CharacterOffsetBegin=51 CharacterOffsetEnd=59 PartOfSpeech=VB Lemma=generate NamedEntityTag=O]
[Text=the CharacterOffsetBegin=60 CharacterOffsetEnd=63 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=SQL CharacterOffsetBegin=64 CharacterOffsetEnd=67 PartOfSpeech=NNP Lemma=SQL NamedEntityTag=O]
[Text=for CharacterOffsetBegin=68 CharacterOffsetEnd=71 PartOfSpeech=IN Lemma=for NamedEntityTag=O]
[Text=each CharacterOffsetBegin=72 CharacterOffsetEnd=76 PartOfSpeech=DT Lemma=each NamedEntityTag=O]
[Text=change CharacterOffsetBegin=77 CharacterOffsetEnd=83 PartOfSpeech=NN Lemma=change NamedEntityTag=O]
[Text=BEFORE CharacterOffsetBegin=84 CharacterOffsetEnd=90 PartOfSpeech=IN Lemma=before NamedEntityTag=O]
[Text=applying CharacterOffsetBegin=91 CharacterOffsetEnd=99 PartOfSpeech=VBG Lemma=apply NamedEntityTag=O]
(ROOT
  (S
    (ADVP (RB so))
    (, ,)
    (NP (NN phpMyAdmin))
    (VP (MD would)
      (VP (VB help)
        (NP (PRP me))
        (SBAR
          (NP (DT a) (NN lot))
          (IN if)
          (S
            (NP (PRP I))
            (VP (MD could)
              (ADVP (RB just))
              (VP (VB generate)
                (NP
                  (NP (DT the) (NNP SQL))
                  (PP (IN for)
                    (NP (DT each) (NN change))))
                (PP (IN BEFORE)
                  (S
                    (VP (VBG applying))))))))))))

root(ROOT-0, help-5)
advmod(help-5, so-1)
punct(help-5, ,-2)
nsubj(help-5, phpMyAdmin-3)
aux(help-5, would-4)
dobj(help-5, me-6)
det(lot-8, a-7)
dep(generate-13, lot-8)
mark(generate-13, if-9)
nsubj(generate-13, I-10)
aux(generate-13, could-11)
advmod(generate-13, just-12)
advcl:if(help-5, generate-13)
det(SQL-15, the-14)
dobj(generate-13, SQL-15)
case(change-18, for-16)
det(change-18, each-17)
nmod:for(SQL-15, change-18)
mark(applying-20, BEFORE-19)
advcl:before(generate-13, applying-20)

Coreference set:
	(1,10,[10,11]) -> (1,6,[6,7]), that is: "I" -> "me"

==============Pipeline Pretty Print==============
Sentence #1 (20 tokens):
so, phpMyAdmin would help me a lot if I could just generate the SQL for each change BEFORE applying
[Text=so CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=RB Lemma=so NamedEntityTag=O]
[Text=, CharacterOffsetBegin=2 CharacterOffsetEnd=3 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=phpMyAdmin CharacterOffsetBegin=4 CharacterOffsetEnd=14 PartOfSpeech=NN Lemma=phpmyadmin NamedEntityTag=O]
[Text=would CharacterOffsetBegin=15 CharacterOffsetEnd=20 PartOfSpeech=MD Lemma=would NamedEntityTag=O]
[Text=help CharacterOffsetBegin=21 CharacterOffsetEnd=25 PartOfSpeech=VB Lemma=help NamedEntityTag=O]
[Text=me CharacterOffsetBegin=26 CharacterOffsetEnd=28 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=a CharacterOffsetBegin=29 CharacterOffsetEnd=30 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=lot CharacterOffsetBegin=31 CharacterOffsetEnd=34 PartOfSpeech=NN Lemma=lot NamedEntityTag=O]
[Text=if CharacterOffsetBegin=35 CharacterOffsetEnd=37 PartOfSpeech=IN Lemma=if NamedEntityTag=O]
[Text=I CharacterOffsetBegin=38 CharacterOffsetEnd=39 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=could CharacterOffsetBegin=40 CharacterOffsetEnd=45 PartOfSpeech=MD Lemma=could NamedEntityTag=O]
[Text=just CharacterOffsetBegin=46 CharacterOffsetEnd=50 PartOfSpeech=RB Lemma=just NamedEntityTag=O]
[Text=generate CharacterOffsetBegin=51 CharacterOffsetEnd=59 PartOfSpeech=VB Lemma=generate NamedEntityTag=O]
[Text=the CharacterOffsetBegin=60 CharacterOffsetEnd=63 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=SQL CharacterOffsetBegin=64 CharacterOffsetEnd=67 PartOfSpeech=NNP Lemma=SQL NamedEntityTag=O]
[Text=for CharacterOffsetBegin=68 CharacterOffsetEnd=71 PartOfSpeech=IN Lemma=for NamedEntityTag=O]
[Text=each CharacterOffsetBegin=72 CharacterOffsetEnd=76 PartOfSpeech=DT Lemma=each NamedEntityTag=O]
[Text=change CharacterOffsetBegin=77 CharacterOffsetEnd=83 PartOfSpeech=NN Lemma=change NamedEntityTag=O]
[Text=BEFORE CharacterOffsetBegin=84 CharacterOffsetEnd=90 PartOfSpeech=IN Lemma=before NamedEntityTag=O]
[Text=applying CharacterOffsetBegin=91 CharacterOffsetEnd=99 PartOfSpeech=VBG Lemma=apply NamedEntityTag=O]
(ROOT
  (S
    (ADVP (RB so))
    (, ,)
    (NP (NN phpMyAdmin))
    (VP (MD would)
      (VP (VB help)
        (NP (PRP me))
        (SBAR
          (NP (DT a) (NN lot))
          (IN if)
          (S
            (NP (PRP I))
            (VP (MD could)
              (ADVP (RB just))
              (VP (VB generate)
                (NP
                  (NP (DT the) (NNP SQL))
                  (PP (IN for)
                    (NP (DT each) (NN change))))
                (PP (IN BEFORE)
                  (S
                    (VP (VBG applying))))))))))))

root(ROOT-0, help-5)
advmod(help-5, so-1)
punct(help-5, ,-2)
nsubj(help-5, phpMyAdmin-3)
aux(help-5, would-4)
dobj(help-5, me-6)
det(lot-8, a-7)
dep(generate-13, lot-8)
mark(generate-13, if-9)
nsubj(generate-13, I-10)
aux(generate-13, could-11)
advmod(generate-13, just-12)
advcl:if(help-5, generate-13)
det(SQL-15, the-14)
dobj(generate-13, SQL-15)
case(change-18, for-16)
det(change-18, each-17)
nmod:for(SQL-15, change-18)
mark(applying-20, BEFORE-19)
advcl:before(generate-13, applying-20)

Coreference set:
	(1,10,[10,11]) -> (1,6,[6,7]), that is: "I" -> "me"

==============Pipeline Pretty Print==============
Sentence #1 (20 tokens):
so, phpMyAdmin would help me a lot if I could just generate the SQL for each change BEFORE applying
[Text=so CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=RB Lemma=so NamedEntityTag=O]
[Text=, CharacterOffsetBegin=2 CharacterOffsetEnd=3 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=phpMyAdmin CharacterOffsetBegin=4 CharacterOffsetEnd=14 PartOfSpeech=NN Lemma=phpmyadmin NamedEntityTag=O]
[Text=would CharacterOffsetBegin=15 CharacterOffsetEnd=20 PartOfSpeech=MD Lemma=would NamedEntityTag=O]
[Text=help CharacterOffsetBegin=21 CharacterOffsetEnd=25 PartOfSpeech=VB Lemma=help NamedEntityTag=O]
[Text=me CharacterOffsetBegin=26 CharacterOffsetEnd=28 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=a CharacterOffsetBegin=29 CharacterOffsetEnd=30 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=lot CharacterOffsetBegin=31 CharacterOffsetEnd=34 PartOfSpeech=NN Lemma=lot NamedEntityTag=O]
[Text=if CharacterOffsetBegin=35 CharacterOffsetEnd=37 PartOfSpeech=IN Lemma=if NamedEntityTag=O]
[Text=I CharacterOffsetBegin=38 CharacterOffsetEnd=39 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=could CharacterOffsetBegin=40 CharacterOffsetEnd=45 PartOfSpeech=MD Lemma=could NamedEntityTag=O]
[Text=just CharacterOffsetBegin=46 CharacterOffsetEnd=50 PartOfSpeech=RB Lemma=just NamedEntityTag=O]
[Text=generate CharacterOffsetBegin=51 CharacterOffsetEnd=59 PartOfSpeech=VB Lemma=generate NamedEntityTag=O]
[Text=the CharacterOffsetBegin=60 CharacterOffsetEnd=63 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=SQL CharacterOffsetBegin=64 CharacterOffsetEnd=67 PartOfSpeech=NNP Lemma=SQL NamedEntityTag=O]
[Text=for CharacterOffsetBegin=68 CharacterOffsetEnd=71 PartOfSpeech=IN Lemma=for NamedEntityTag=O]
[Text=each CharacterOffsetBegin=72 CharacterOffsetEnd=76 PartOfSpeech=DT Lemma=each NamedEntityTag=O]
[Text=change CharacterOffsetBegin=77 CharacterOffsetEnd=83 PartOfSpeech=NN Lemma=change NamedEntityTag=O]
[Text=BEFORE CharacterOffsetBegin=84 CharacterOffsetEnd=90 PartOfSpeech=IN Lemma=before NamedEntityTag=O]
[Text=applying CharacterOffsetBegin=91 CharacterOffsetEnd=99 PartOfSpeech=VBG Lemma=apply NamedEntityTag=O]
(ROOT
  (S
    (ADVP (RB so))
    (, ,)
    (NP (NN phpMyAdmin))
    (VP (MD would)
      (VP (VB help)
        (NP (PRP me))
        (SBAR
          (NP (DT a) (NN lot))
          (IN if)
          (S
            (NP (PRP I))
            (VP (MD could)
              (ADVP (RB just))
              (VP (VB generate)
                (NP
                  (NP (DT the) (NNP SQL))
                  (PP (IN for)
                    (NP (DT each) (NN change))))
                (PP (IN BEFORE)
                  (S
                    (VP (VBG applying))))))))))))

root(ROOT-0, help-5)
advmod(help-5, so-1)
punct(help-5, ,-2)
nsubj(help-5, phpMyAdmin-3)
aux(help-5, would-4)
dobj(help-5, me-6)
det(lot-8, a-7)
dep(generate-13, lot-8)
mark(generate-13, if-9)
nsubj(generate-13, I-10)
aux(generate-13, could-11)
advmod(generate-13, just-12)
advcl:if(help-5, generate-13)
det(SQL-15, the-14)
dobj(generate-13, SQL-15)
case(change-18, for-16)
det(change-18, each-17)
nmod:for(SQL-15, change-18)
mark(applying-20, BEFORE-19)
advcl:before(generate-13, applying-20)

Coreference set:
	(1,10,[10,11]) -> (1,6,[6,7]), that is: "I" -> "me"

==============Pipeline Pretty Print==============
Sentence #1 (20 tokens):
so, phpMyAdmin would help me a lot if I could just generate the SQL for each change BEFORE applying
[Text=so CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=RB Lemma=so NamedEntityTag=O]
[Text=, CharacterOffsetBegin=2 CharacterOffsetEnd=3 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=phpMyAdmin CharacterOffsetBegin=4 CharacterOffsetEnd=14 PartOfSpeech=NN Lemma=phpmyadmin NamedEntityTag=O]
[Text=would CharacterOffsetBegin=15 CharacterOffsetEnd=20 PartOfSpeech=MD Lemma=would NamedEntityTag=O]
[Text=help CharacterOffsetBegin=21 CharacterOffsetEnd=25 PartOfSpeech=VB Lemma=help NamedEntityTag=O]
[Text=me CharacterOffsetBegin=26 CharacterOffsetEnd=28 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=a CharacterOffsetBegin=29 CharacterOffsetEnd=30 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=lot CharacterOffsetBegin=31 CharacterOffsetEnd=34 PartOfSpeech=NN Lemma=lot NamedEntityTag=O]
[Text=if CharacterOffsetBegin=35 CharacterOffsetEnd=37 PartOfSpeech=IN Lemma=if NamedEntityTag=O]
[Text=I CharacterOffsetBegin=38 CharacterOffsetEnd=39 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=could CharacterOffsetBegin=40 CharacterOffsetEnd=45 PartOfSpeech=MD Lemma=could NamedEntityTag=O]
[Text=just CharacterOffsetBegin=46 CharacterOffsetEnd=50 PartOfSpeech=RB Lemma=just NamedEntityTag=O]
[Text=generate CharacterOffsetBegin=51 CharacterOffsetEnd=59 PartOfSpeech=VB Lemma=generate NamedEntityTag=O]
[Text=the CharacterOffsetBegin=60 CharacterOffsetEnd=63 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=SQL CharacterOffsetBegin=64 CharacterOffsetEnd=67 PartOfSpeech=NNP Lemma=SQL NamedEntityTag=O]
[Text=for CharacterOffsetBegin=68 CharacterOffsetEnd=71 PartOfSpeech=IN Lemma=for NamedEntityTag=O]
[Text=each CharacterOffsetBegin=72 CharacterOffsetEnd=76 PartOfSpeech=DT Lemma=each NamedEntityTag=O]
[Text=change CharacterOffsetBegin=77 CharacterOffsetEnd=83 PartOfSpeech=NN Lemma=change NamedEntityTag=O]
[Text=BEFORE CharacterOffsetBegin=84 CharacterOffsetEnd=90 PartOfSpeech=IN Lemma=before NamedEntityTag=O]
[Text=applying CharacterOffsetBegin=91 CharacterOffsetEnd=99 PartOfSpeech=VBG Lemma=apply NamedEntityTag=O]
(ROOT
  (S
    (ADVP (RB so))
    (, ,)
    (NP (NN phpMyAdmin))
    (VP (MD would)
      (VP (VB help)
        (NP (PRP me))
        (SBAR
          (NP (DT a) (NN lot))
          (IN if)
          (S
            (NP (PRP I))
            (VP (MD could)
              (ADVP (RB just))
              (VP (VB generate)
                (NP
                  (NP (DT the) (NNP SQL))
                  (PP (IN for)
                    (NP (DT each) (NN change))))
                (PP (IN BEFORE)
                  (S
                    (VP (VBG applying))))))))))))

root(ROOT-0, help-5)
advmod(help-5, so-1)
punct(help-5, ,-2)
nsubj(help-5, phpMyAdmin-3)
aux(help-5, would-4)
dobj(help-5, me-6)
det(lot-8, a-7)
dep(generate-13, lot-8)
mark(generate-13, if-9)
nsubj(generate-13, I-10)
aux(generate-13, could-11)
advmod(generate-13, just-12)
advcl:if(help-5, generate-13)
det(SQL-15, the-14)
dobj(generate-13, SQL-15)
case(change-18, for-16)
det(change-18, each-17)
nmod:for(SQL-15, change-18)
mark(applying-20, BEFORE-19)
advcl:before(generate-13, applying-20)

Coreference set:
	(1,10,[10,11]) -> (1,6,[6,7]), that is: "I" -> "me"

==============Pipeline Pretty Print==============
Sentence #1 (33 tokens):
I'm opening this to see if there is any traction for this and, in the off chance that I have time, I might look into trying my hand at this
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text='m CharacterOffsetBegin=1 CharacterOffsetEnd=3 PartOfSpeech=VBP Lemma=be NamedEntityTag=O]
[Text=opening CharacterOffsetBegin=4 CharacterOffsetEnd=11 PartOfSpeech=VBG Lemma=open NamedEntityTag=O]
[Text=this CharacterOffsetBegin=12 CharacterOffsetEnd=16 PartOfSpeech=DT Lemma=this NamedEntityTag=O]
[Text=to CharacterOffsetBegin=17 CharacterOffsetEnd=19 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=see CharacterOffsetBegin=20 CharacterOffsetEnd=23 PartOfSpeech=VB Lemma=see NamedEntityTag=O]
[Text=if CharacterOffsetBegin=24 CharacterOffsetEnd=26 PartOfSpeech=IN Lemma=if NamedEntityTag=O]
[Text=there CharacterOffsetBegin=27 CharacterOffsetEnd=32 PartOfSpeech=EX Lemma=there NamedEntityTag=O]
[Text=is CharacterOffsetBegin=33 CharacterOffsetEnd=35 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O]
[Text=any CharacterOffsetBegin=36 CharacterOffsetEnd=39 PartOfSpeech=DT Lemma=any NamedEntityTag=O]
[Text=traction CharacterOffsetBegin=40 CharacterOffsetEnd=48 PartOfSpeech=NN Lemma=traction NamedEntityTag=O]
[Text=for CharacterOffsetBegin=49 CharacterOffsetEnd=52 PartOfSpeech=IN Lemma=for NamedEntityTag=O]
[Text=this CharacterOffsetBegin=53 CharacterOffsetEnd=57 PartOfSpeech=DT Lemma=this NamedEntityTag=O]
[Text=and CharacterOffsetBegin=58 CharacterOffsetEnd=61 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=, CharacterOffsetBegin=61 CharacterOffsetEnd=62 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=in CharacterOffsetBegin=63 CharacterOffsetEnd=65 PartOfSpeech=IN Lemma=in NamedEntityTag=O]
[Text=the CharacterOffsetBegin=66 CharacterOffsetEnd=69 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=off CharacterOffsetBegin=70 CharacterOffsetEnd=73 PartOfSpeech=JJ Lemma=off NamedEntityTag=O]
[Text=chance CharacterOffsetBegin=74 CharacterOffsetEnd=80 PartOfSpeech=NN Lemma=chance NamedEntityTag=O]
[Text=that CharacterOffsetBegin=81 CharacterOffsetEnd=85 PartOfSpeech=IN Lemma=that NamedEntityTag=O]
[Text=I CharacterOffsetBegin=86 CharacterOffsetEnd=87 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=have CharacterOffsetBegin=88 CharacterOffsetEnd=92 PartOfSpeech=VBP Lemma=have NamedEntityTag=O]
[Text=time CharacterOffsetBegin=93 CharacterOffsetEnd=97 PartOfSpeech=NN Lemma=time NamedEntityTag=O]
[Text=, CharacterOffsetBegin=97 CharacterOffsetEnd=98 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=I CharacterOffsetBegin=99 CharacterOffsetEnd=100 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=might CharacterOffsetBegin=101 CharacterOffsetEnd=106 PartOfSpeech=MD Lemma=might NamedEntityTag=O]
[Text=look CharacterOffsetBegin=107 CharacterOffsetEnd=111 PartOfSpeech=VB Lemma=look NamedEntityTag=O]
[Text=into CharacterOffsetBegin=112 CharacterOffsetEnd=116 PartOfSpeech=IN Lemma=into NamedEntityTag=O]
[Text=trying CharacterOffsetBegin=117 CharacterOffsetEnd=123 PartOfSpeech=VBG Lemma=try NamedEntityTag=O]
[Text=my CharacterOffsetBegin=124 CharacterOffsetEnd=126 PartOfSpeech=PRP$ Lemma=my NamedEntityTag=O]
[Text=hand CharacterOffsetBegin=127 CharacterOffsetEnd=131 PartOfSpeech=NN Lemma=hand NamedEntityTag=O]
[Text=at CharacterOffsetBegin=132 CharacterOffsetEnd=134 PartOfSpeech=IN Lemma=at NamedEntityTag=O]
[Text=this CharacterOffsetBegin=135 CharacterOffsetEnd=139 PartOfSpeech=DT Lemma=this NamedEntityTag=O]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (VP (VBG opening)
        (S
          (NP (DT this))
          (VP (TO to)
            (VP (VB see)
              (S
                (SBAR (IN if)
                  (S
                    (NP (EX there))
                    (VP (VBZ is)
                      (NP
                        (NP (DT any) (NN traction))
                        (PP (IN for)
                          (NP
                            (NP (DT this))
                            (CC and)
                            (, ,)
                            (PP (IN in)
                              (NP (DT the) (JJ off) (NN chance))))))
                      (SBAR (IN that)
                        (S
                          (NP (PRP I))
                          (VP (VBP have)
                            (NP (NN time))))))))
                (, ,)
                (NP (PRP I))
                (VP (MD might)
                  (VP (VB look)
                    (PP (IN into)
                      (S
                        (VP (VBG trying)
                          (NP (PRP$ my) (NN hand))
                          (PP (IN at)
                            (NP (DT this))))))))))))))))

root(ROOT-0, opening-3)
nsubj(opening-3, I-1)
aux(opening-3, 'm-2)
dobj(opening-3, this-4)
nsubj:xsubj(see-6, this-4)
mark(see-6, to-5)
xcomp(opening-3, see-6)
mark(is-9, if-7)
expl(is-9, there-8)
advcl:if(look-27, is-9)
det(traction-11, any-10)
nsubj(is-9, traction-11)
nsubj(is-9, traction-11')
conj:and(traction-11, traction-11')
case(this-13, for-12)
nmod:for(traction-11, this-13)
cc(traction-11, and-14)
punct(chance-19, ,-15)
case(chance-19, in-16)
det(chance-19, the-17)
amod(chance-19, off-18)
nmod:in(traction-11', chance-19)
mark(have-22, that-20)
nsubj(have-22, I-21)
ccomp(is-9, have-22)
dobj(have-22, time-23)
punct(look-27, ,-24)
nsubj(look-27, I-25)
aux(look-27, might-26)
ccomp(see-6, look-27)
mark(trying-29, into-28)
advcl:into(look-27, trying-29)
nmod:poss(hand-31, my-30)
dobj(trying-29, hand-31)
case(this-33, at-32)
nmod:at(trying-29, this-33)

Coreference set:
	(1,21,[21,22]) -> (1,1,[1,2]), that is: "I" -> "I"
	(1,25,[25,26]) -> (1,1,[1,2]), that is: "I" -> "I"
	(1,30,[30,31]) -> (1,1,[1,2]), that is: "my" -> "I"
Coreference set:
	(1,13,[13,14]) -> (1,4,[4,5]), that is: "this" -> "this"
	(1,33,[33,34]) -> (1,4,[4,5]), that is: "this" -> "this"

==============Pipeline Pretty Print==============
Sentence #1 (25 tokens):
As a newbie developer trial and error is sometimes necessary and dry running the code would be a great feature to have in that regard
[Text=As CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=IN Lemma=as NamedEntityTag=O]
[Text=a CharacterOffsetBegin=3 CharacterOffsetEnd=4 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=newbie CharacterOffsetBegin=5 CharacterOffsetEnd=11 PartOfSpeech=NN Lemma=newbie NamedEntityTag=O]
[Text=developer CharacterOffsetBegin=12 CharacterOffsetEnd=21 PartOfSpeech=NN Lemma=developer NamedEntityTag=O]
[Text=trial CharacterOffsetBegin=22 CharacterOffsetEnd=27 PartOfSpeech=NN Lemma=trial NamedEntityTag=O]
[Text=and CharacterOffsetBegin=28 CharacterOffsetEnd=31 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=error CharacterOffsetBegin=32 CharacterOffsetEnd=37 PartOfSpeech=NN Lemma=error NamedEntityTag=O]
[Text=is CharacterOffsetBegin=38 CharacterOffsetEnd=40 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O]
[Text=sometimes CharacterOffsetBegin=41 CharacterOffsetEnd=50 PartOfSpeech=RB Lemma=sometimes NamedEntityTag=O]
[Text=necessary CharacterOffsetBegin=51 CharacterOffsetEnd=60 PartOfSpeech=JJ Lemma=necessary NamedEntityTag=O]
[Text=and CharacterOffsetBegin=61 CharacterOffsetEnd=64 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=dry CharacterOffsetBegin=65 CharacterOffsetEnd=68 PartOfSpeech=JJ Lemma=dry NamedEntityTag=O]
[Text=running CharacterOffsetBegin=69 CharacterOffsetEnd=76 PartOfSpeech=VBG Lemma=run NamedEntityTag=O]
[Text=the CharacterOffsetBegin=77 CharacterOffsetEnd=80 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=code CharacterOffsetBegin=81 CharacterOffsetEnd=85 PartOfSpeech=NN Lemma=code NamedEntityTag=O]
[Text=would CharacterOffsetBegin=86 CharacterOffsetEnd=91 PartOfSpeech=MD Lemma=would NamedEntityTag=O]
[Text=be CharacterOffsetBegin=92 CharacterOffsetEnd=94 PartOfSpeech=VB Lemma=be NamedEntityTag=O]
[Text=a CharacterOffsetBegin=95 CharacterOffsetEnd=96 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=great CharacterOffsetBegin=97 CharacterOffsetEnd=102 PartOfSpeech=JJ Lemma=great NamedEntityTag=O]
[Text=feature CharacterOffsetBegin=103 CharacterOffsetEnd=110 PartOfSpeech=NN Lemma=feature NamedEntityTag=O]
[Text=to CharacterOffsetBegin=111 CharacterOffsetEnd=113 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=have CharacterOffsetBegin=114 CharacterOffsetEnd=118 PartOfSpeech=VB Lemma=have NamedEntityTag=O]
[Text=in CharacterOffsetBegin=119 CharacterOffsetEnd=121 PartOfSpeech=IN Lemma=in NamedEntityTag=O]
[Text=that CharacterOffsetBegin=122 CharacterOffsetEnd=126 PartOfSpeech=DT Lemma=that NamedEntityTag=O]
[Text=regard CharacterOffsetBegin=127 CharacterOffsetEnd=133 PartOfSpeech=NN Lemma=regard NamedEntityTag=O]
(ROOT
  (S
    (PP (IN As)
      (NP (DT a) (NN newbie) (NN developer)))
    (NP (NN trial)
      (CC and)
      (NN error))
    (VP (VBZ is)
      (ADVP (RB sometimes))
      (ADJP (JJ necessary)
        (CC and)
        (JJ dry))
      (S
        (VP (VBG running)
          (SBAR
            (S
              (NP (DT the) (NN code))
              (VP (MD would)
                (VP (VB be)
                  (NP (DT a) (JJ great) (NN feature)
                    (S
                      (VP (TO to)
                        (VP (VB have)
                          (PP (IN in)
                            (NP (DT that) (NN regard))))))))))))))))

root(ROOT-0, necessary-10)
case(developer-4, As-1)
det(developer-4, a-2)
compound(developer-4, newbie-3)
nmod:as(necessary-10, developer-4)
nsubj(necessary-10, trial-5)
nsubj(dry-12, trial-5)
cc(trial-5, and-6)
conj:and(trial-5, error-7)
nsubj(necessary-10, error-7)
cop(necessary-10, is-8)
advmod(necessary-10, sometimes-9)
cc(necessary-10, and-11)
conj:and(necessary-10, dry-12)
xcomp(necessary-10, running-13)
det(code-15, the-14)
nsubj(feature-20, code-15)
aux(feature-20, would-16)
cop(feature-20, be-17)
det(feature-20, a-18)
amod(feature-20, great-19)
ccomp(running-13, feature-20)
mark(have-22, to-21)
acl:to(feature-20, have-22)
case(regard-25, in-23)
det(regard-25, that-24)
nmod:in(have-22, regard-25)

Coreference set:
	(1,15,[14,16]) -> (1,20,[18,26]), that is: "the code" -> "a great feature to have in that regard"

==============Pipeline Pretty Print==============
Sentence #1 (25 tokens):
As a newbie developer trial and error is sometimes necessary and dry running the code would be a great feature to have in that regard
[Text=As CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=IN Lemma=as NamedEntityTag=O]
[Text=a CharacterOffsetBegin=3 CharacterOffsetEnd=4 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=newbie CharacterOffsetBegin=5 CharacterOffsetEnd=11 PartOfSpeech=NN Lemma=newbie NamedEntityTag=O]
[Text=developer CharacterOffsetBegin=12 CharacterOffsetEnd=21 PartOfSpeech=NN Lemma=developer NamedEntityTag=O]
[Text=trial CharacterOffsetBegin=22 CharacterOffsetEnd=27 PartOfSpeech=NN Lemma=trial NamedEntityTag=O]
[Text=and CharacterOffsetBegin=28 CharacterOffsetEnd=31 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=error CharacterOffsetBegin=32 CharacterOffsetEnd=37 PartOfSpeech=NN Lemma=error NamedEntityTag=O]
[Text=is CharacterOffsetBegin=38 CharacterOffsetEnd=40 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O]
[Text=sometimes CharacterOffsetBegin=41 CharacterOffsetEnd=50 PartOfSpeech=RB Lemma=sometimes NamedEntityTag=O]
[Text=necessary CharacterOffsetBegin=51 CharacterOffsetEnd=60 PartOfSpeech=JJ Lemma=necessary NamedEntityTag=O]
[Text=and CharacterOffsetBegin=61 CharacterOffsetEnd=64 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=dry CharacterOffsetBegin=65 CharacterOffsetEnd=68 PartOfSpeech=JJ Lemma=dry NamedEntityTag=O]
[Text=running CharacterOffsetBegin=69 CharacterOffsetEnd=76 PartOfSpeech=VBG Lemma=run NamedEntityTag=O]
[Text=the CharacterOffsetBegin=77 CharacterOffsetEnd=80 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=code CharacterOffsetBegin=81 CharacterOffsetEnd=85 PartOfSpeech=NN Lemma=code NamedEntityTag=O]
[Text=would CharacterOffsetBegin=86 CharacterOffsetEnd=91 PartOfSpeech=MD Lemma=would NamedEntityTag=O]
[Text=be CharacterOffsetBegin=92 CharacterOffsetEnd=94 PartOfSpeech=VB Lemma=be NamedEntityTag=O]
[Text=a CharacterOffsetBegin=95 CharacterOffsetEnd=96 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=great CharacterOffsetBegin=97 CharacterOffsetEnd=102 PartOfSpeech=JJ Lemma=great NamedEntityTag=O]
[Text=feature CharacterOffsetBegin=103 CharacterOffsetEnd=110 PartOfSpeech=NN Lemma=feature NamedEntityTag=O]
[Text=to CharacterOffsetBegin=111 CharacterOffsetEnd=113 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=have CharacterOffsetBegin=114 CharacterOffsetEnd=118 PartOfSpeech=VB Lemma=have NamedEntityTag=O]
[Text=in CharacterOffsetBegin=119 CharacterOffsetEnd=121 PartOfSpeech=IN Lemma=in NamedEntityTag=O]
[Text=that CharacterOffsetBegin=122 CharacterOffsetEnd=126 PartOfSpeech=DT Lemma=that NamedEntityTag=O]
[Text=regard CharacterOffsetBegin=127 CharacterOffsetEnd=133 PartOfSpeech=NN Lemma=regard NamedEntityTag=O]
(ROOT
  (S
    (PP (IN As)
      (NP (DT a) (NN newbie) (NN developer)))
    (NP (NN trial)
      (CC and)
      (NN error))
    (VP (VBZ is)
      (ADVP (RB sometimes))
      (ADJP (JJ necessary)
        (CC and)
        (JJ dry))
      (S
        (VP (VBG running)
          (SBAR
            (S
              (NP (DT the) (NN code))
              (VP (MD would)
                (VP (VB be)
                  (NP (DT a) (JJ great) (NN feature)
                    (S
                      (VP (TO to)
                        (VP (VB have)
                          (PP (IN in)
                            (NP (DT that) (NN regard))))))))))))))))

root(ROOT-0, necessary-10)
case(developer-4, As-1)
det(developer-4, a-2)
compound(developer-4, newbie-3)
nmod:as(necessary-10, developer-4)
nsubj(necessary-10, trial-5)
nsubj(dry-12, trial-5)
cc(trial-5, and-6)
conj:and(trial-5, error-7)
nsubj(necessary-10, error-7)
cop(necessary-10, is-8)
advmod(necessary-10, sometimes-9)
cc(necessary-10, and-11)
conj:and(necessary-10, dry-12)
xcomp(necessary-10, running-13)
det(code-15, the-14)
nsubj(feature-20, code-15)
aux(feature-20, would-16)
cop(feature-20, be-17)
det(feature-20, a-18)
amod(feature-20, great-19)
ccomp(running-13, feature-20)
mark(have-22, to-21)
acl:to(feature-20, have-22)
case(regard-25, in-23)
det(regard-25, that-24)
nmod:in(have-22, regard-25)

Coreference set:
	(1,15,[14,16]) -> (1,20,[18,26]), that is: "the code" -> "a great feature to have in that regard"

==============Pipeline Pretty Print==============
Sentence #1 (21 tokens):
A really useful feature would be a list where one can simply save SQL statements one often uses in a database
[Text=A CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=really CharacterOffsetBegin=2 CharacterOffsetEnd=8 PartOfSpeech=RB Lemma=really NamedEntityTag=O]
[Text=useful CharacterOffsetBegin=9 CharacterOffsetEnd=15 PartOfSpeech=JJ Lemma=useful NamedEntityTag=O]
[Text=feature CharacterOffsetBegin=16 CharacterOffsetEnd=23 PartOfSpeech=NN Lemma=feature NamedEntityTag=O]
[Text=would CharacterOffsetBegin=24 CharacterOffsetEnd=29 PartOfSpeech=MD Lemma=would NamedEntityTag=O]
[Text=be CharacterOffsetBegin=30 CharacterOffsetEnd=32 PartOfSpeech=VB Lemma=be NamedEntityTag=O]
[Text=a CharacterOffsetBegin=33 CharacterOffsetEnd=34 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=list CharacterOffsetBegin=35 CharacterOffsetEnd=39 PartOfSpeech=NN Lemma=list NamedEntityTag=O]
[Text=where CharacterOffsetBegin=40 CharacterOffsetEnd=45 PartOfSpeech=WRB Lemma=where NamedEntityTag=O]
[Text=one CharacterOffsetBegin=46 CharacterOffsetEnd=49 PartOfSpeech=PRP Lemma=one NamedEntityTag=O]
[Text=can CharacterOffsetBegin=50 CharacterOffsetEnd=53 PartOfSpeech=MD Lemma=can NamedEntityTag=O]
[Text=simply CharacterOffsetBegin=54 CharacterOffsetEnd=60 PartOfSpeech=RB Lemma=simply NamedEntityTag=O]
[Text=save CharacterOffsetBegin=61 CharacterOffsetEnd=65 PartOfSpeech=VB Lemma=save NamedEntityTag=O]
[Text=SQL CharacterOffsetBegin=66 CharacterOffsetEnd=69 PartOfSpeech=NNP Lemma=SQL NamedEntityTag=O]
[Text=statements CharacterOffsetBegin=70 CharacterOffsetEnd=80 PartOfSpeech=NNS Lemma=statement NamedEntityTag=O]
[Text=one CharacterOffsetBegin=81 CharacterOffsetEnd=84 PartOfSpeech=CD Lemma=one NamedEntityTag=NUMBER NormalizedNamedEntityTag=1.0]
[Text=often CharacterOffsetBegin=85 CharacterOffsetEnd=90 PartOfSpeech=RB Lemma=often NamedEntityTag=O]
[Text=uses CharacterOffsetBegin=91 CharacterOffsetEnd=95 PartOfSpeech=VBZ Lemma=use NamedEntityTag=O]
[Text=in CharacterOffsetBegin=96 CharacterOffsetEnd=98 PartOfSpeech=IN Lemma=in NamedEntityTag=O]
[Text=a CharacterOffsetBegin=99 CharacterOffsetEnd=100 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=database CharacterOffsetBegin=101 CharacterOffsetEnd=109 PartOfSpeech=NN Lemma=database NamedEntityTag=O]
(ROOT
  (S
    (NP (DT A)
      (ADJP (RB really) (JJ useful))
      (NN feature))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (DT a) (NN list))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP one))
              (VP (MD can)
                (ADVP (RB simply))
                (VP (VB save)
                  (SBAR
                    (S
                      (NP (NNP SQL) (NNS statements))
                      (ADVP
                        (NP (CD one))
                        (RB often))
                      (VP (VBZ uses)
                        (PP (IN in)
                          (NP (DT a) (NN database)))))))))))))))

root(ROOT-0, list-8)
det(feature-4, A-1)
advmod(useful-3, really-2)
amod(feature-4, useful-3)
nsubj(list-8, feature-4)
aux(list-8, would-5)
cop(list-8, be-6)
det(list-8, a-7)
advmod(save-13, where-9)
nsubj(save-13, one-10)
aux(save-13, can-11)
advmod(save-13, simply-12)
acl:relcl(list-8, save-13)
compound(statements-15, SQL-14)
nsubj(uses-18, statements-15)
nmod:npmod(often-17, one-16)
advmod(uses-18, often-17)
ccomp(save-13, uses-18)
case(database-21, in-19)
det(database-21, a-20)
nmod:in(uses-18, database-21)

Coreference set:
	(1,8,[7,22]) -> (1,4,[1,5]), that is: "a list where one can simply save SQL statements one often uses in a database" -> "A really useful feature"

==============Pipeline Pretty Print==============
Sentence #1 (22 tokens):
but there is no option to just browse by folder,which would be faster and more useful for some compilations.
[Text=but CharacterOffsetBegin=0 CharacterOffsetEnd=3 PartOfSpeech=CC Lemma=but NamedEntityTag=O]
[Text=there CharacterOffsetBegin=4 CharacterOffsetEnd=9 PartOfSpeech=EX Lemma=there NamedEntityTag=O]
[Text=is CharacterOffsetBegin=10 CharacterOffsetEnd=12 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O]
[Text=no CharacterOffsetBegin=13 CharacterOffsetEnd=15 PartOfSpeech=DT Lemma=no NamedEntityTag=O]
[Text=option CharacterOffsetBegin=16 CharacterOffsetEnd=22 PartOfSpeech=NN Lemma=option NamedEntityTag=O]
[Text=to CharacterOffsetBegin=23 CharacterOffsetEnd=25 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=just CharacterOffsetBegin=26 CharacterOffsetEnd=30 PartOfSpeech=RB Lemma=just NamedEntityTag=O]
[Text=browse CharacterOffsetBegin=31 CharacterOffsetEnd=37 PartOfSpeech=VB Lemma=browse NamedEntityTag=O]
[Text=by CharacterOffsetBegin=38 CharacterOffsetEnd=40 PartOfSpeech=IN Lemma=by NamedEntityTag=O]
[Text=folder CharacterOffsetBegin=41 CharacterOffsetEnd=47 PartOfSpeech=NN Lemma=folder NamedEntityTag=O]
[Text=, CharacterOffsetBegin=47 CharacterOffsetEnd=48 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=which CharacterOffsetBegin=48 CharacterOffsetEnd=53 PartOfSpeech=WDT Lemma=which NamedEntityTag=O]
[Text=would CharacterOffsetBegin=54 CharacterOffsetEnd=59 PartOfSpeech=MD Lemma=would NamedEntityTag=O]
[Text=be CharacterOffsetBegin=60 CharacterOffsetEnd=62 PartOfSpeech=VB Lemma=be NamedEntityTag=O]
[Text=faster CharacterOffsetBegin=63 CharacterOffsetEnd=69 PartOfSpeech=RBR Lemma=faster NamedEntityTag=O]
[Text=and CharacterOffsetBegin=70 CharacterOffsetEnd=73 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=more CharacterOffsetBegin=74 CharacterOffsetEnd=78 PartOfSpeech=RBR Lemma=more NamedEntityTag=O]
[Text=useful CharacterOffsetBegin=79 CharacterOffsetEnd=85 PartOfSpeech=JJ Lemma=useful NamedEntityTag=O]
[Text=for CharacterOffsetBegin=86 CharacterOffsetEnd=89 PartOfSpeech=IN Lemma=for NamedEntityTag=O]
[Text=some CharacterOffsetBegin=90 CharacterOffsetEnd=94 PartOfSpeech=DT Lemma=some NamedEntityTag=O]
[Text=compilations CharacterOffsetBegin=95 CharacterOffsetEnd=107 PartOfSpeech=NNS Lemma=compilation NamedEntityTag=O]
[Text=. CharacterOffsetBegin=107 CharacterOffsetEnd=108 PartOfSpeech=. Lemma=. NamedEntityTag=O]
(ROOT
  (S (CC but)
    (NP (EX there))
    (VP (VBZ is)
      (NP (DT no) (NN option)
        (S
          (VP (TO to)
            (VP
              (ADVP (RB just))
              (VB browse)
              (PP (IN by)
                (NP
                  (NP (NN folder))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (MD would)
                        (VP (VB be)
                          (ADJP
                            (ADVP (RBR faster)
                              (CC and)
                              (RBR more))
                            (JJ useful)
                            (PP (IN for)
                              (NP (DT some) (NNS compilations)))))))))))))))
    (. .)))

root(ROOT-0, is-3)
cc(is-3, but-1)
expl(is-3, there-2)
neg(option-5, no-4)
nsubj(is-3, option-5)
mark(browse-8, to-6)
advmod(browse-8, just-7)
acl:to(option-5, browse-8)
case(folder-10, by-9)
nmod:by(browse-8, folder-10)
nsubj(useful-18, folder-10)
punct(folder-10, ,-11)
ref(folder-10, which-12)
aux(useful-18, would-13)
cop(useful-18, be-14)
advmod(useful-18, faster-15)
cc(faster-15, and-16)
conj:and(faster-15, more-17)
advmod(useful-18, more-17)
acl:relcl(folder-10, useful-18)
case(compilations-21, for-19)
det(compilations-21, some-20)
nmod:for(useful-18, compilations-21)
punct(is-3, .-22)


==============Pipeline Pretty Print==============
Sentence #1 (22 tokens):
mpd does not accept a '-' character before the value,whereas Mopidy will set the volume to 0.
[Text=mpd CharacterOffsetBegin=0 CharacterOffsetEnd=3 PartOfSpeech=NN Lemma=mpd NamedEntityTag=O]
[Text=does CharacterOffsetBegin=4 CharacterOffsetEnd=8 PartOfSpeech=VBZ Lemma=do NamedEntityTag=O]
[Text=not CharacterOffsetBegin=9 CharacterOffsetEnd=12 PartOfSpeech=RB Lemma=not NamedEntityTag=O]
[Text=accept CharacterOffsetBegin=13 CharacterOffsetEnd=19 PartOfSpeech=VB Lemma=accept NamedEntityTag=O]
[Text=a CharacterOffsetBegin=20 CharacterOffsetEnd=21 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=' CharacterOffsetBegin=22 CharacterOffsetEnd=23 PartOfSpeech='' Lemma=' NamedEntityTag=O]
[Text=- CharacterOffsetBegin=23 CharacterOffsetEnd=24 PartOfSpeech=: Lemma=- NamedEntityTag=O]
[Text=' CharacterOffsetBegin=24 CharacterOffsetEnd=25 PartOfSpeech='' Lemma=' NamedEntityTag=O]
[Text=character CharacterOffsetBegin=26 CharacterOffsetEnd=35 PartOfSpeech=NN Lemma=character NamedEntityTag=O]
[Text=before CharacterOffsetBegin=36 CharacterOffsetEnd=42 PartOfSpeech=IN Lemma=before NamedEntityTag=O]
[Text=the CharacterOffsetBegin=43 CharacterOffsetEnd=46 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=value CharacterOffsetBegin=47 CharacterOffsetEnd=52 PartOfSpeech=NN Lemma=value NamedEntityTag=O]
[Text=, CharacterOffsetBegin=52 CharacterOffsetEnd=53 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=whereas CharacterOffsetBegin=53 CharacterOffsetEnd=60 PartOfSpeech=IN Lemma=whereas NamedEntityTag=O]
[Text=Mopidy CharacterOffsetBegin=61 CharacterOffsetEnd=67 PartOfSpeech=NNP Lemma=Mopidy NamedEntityTag=PERSON]
[Text=will CharacterOffsetBegin=68 CharacterOffsetEnd=72 PartOfSpeech=MD Lemma=will NamedEntityTag=O]
[Text=set CharacterOffsetBegin=73 CharacterOffsetEnd=76 PartOfSpeech=VB Lemma=set NamedEntityTag=O]
[Text=the CharacterOffsetBegin=77 CharacterOffsetEnd=80 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=volume CharacterOffsetBegin=81 CharacterOffsetEnd=87 PartOfSpeech=NN Lemma=volume NamedEntityTag=O]
[Text=to CharacterOffsetBegin=88 CharacterOffsetEnd=90 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=0 CharacterOffsetBegin=91 CharacterOffsetEnd=92 PartOfSpeech=CD Lemma=0 NamedEntityTag=NUMBER NormalizedNamedEntityTag=0.0]
[Text=. CharacterOffsetBegin=92 CharacterOffsetEnd=93 PartOfSpeech=. Lemma=. NamedEntityTag=O]
(ROOT
  (S
    (S
      (NP (NN mpd))
      (VP (VBZ does) (RB not)
        (VP (VB accept)
          (NP (DT a) ('' ')))))
    (: -) ('' ')
    (S
      (NP (NN character))
      (PP (IN before)
        (NP
          (NP (DT the) (NN value))
          (, ,)
          (SBAR (IN whereas)
            (S
              (NP (NNP Mopidy))
              (VP (MD will)
                (VP (VB set)
                  (NP (DT the) (NN volume))
                  (PP (TO to)
                    (NP (CD 0))))))))))
    (. .)))

root(ROOT-0, accept-4)
nsubj(accept-4, mpd-1)
aux(accept-4, does-2)
neg(accept-4, not-3)
dobj(accept-4, a-5)
punct(a-5, '-6)
punct(accept-4, --7)
punct(accept-4, '-8)
parataxis(accept-4, character-9)
case(value-12, before-10)
det(value-12, the-11)
dep(character-9, value-12)
punct(value-12, ,-13)
mark(set-17, whereas-14)
nsubj(set-17, Mopidy-15)
aux(set-17, will-16)
dep(value-12, set-17)
det(volume-19, the-18)
dobj(set-17, volume-19)
case(0-21, to-20)
nmod:to(set-17, 0-21)
punct(accept-4, .-22)


==============Pipeline Pretty Print==============
Sentence #1 (22 tokens, sentiment: Negative):
mpd does not accept a '-' character before the value,whereas Mopidy will set the volume to 0.
[Text=mpd CharacterOffsetBegin=0 CharacterOffsetEnd=3 PartOfSpeech=NN Lemma=mpd NamedEntityTag=O SentimentClass=Neutral]
[Text=does CharacterOffsetBegin=4 CharacterOffsetEnd=8 PartOfSpeech=VBZ Lemma=do NamedEntityTag=O SentimentClass=Neutral]
[Text=not CharacterOffsetBegin=9 CharacterOffsetEnd=12 PartOfSpeech=RB Lemma=not NamedEntityTag=O SentimentClass=Negative]
[Text=accept CharacterOffsetBegin=13 CharacterOffsetEnd=19 PartOfSpeech=VB Lemma=accept NamedEntityTag=O SentimentClass=Neutral]
[Text=a CharacterOffsetBegin=20 CharacterOffsetEnd=21 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=' CharacterOffsetBegin=22 CharacterOffsetEnd=23 PartOfSpeech='' Lemma=' NamedEntityTag=O SentimentClass=Neutral]
[Text=- CharacterOffsetBegin=23 CharacterOffsetEnd=24 PartOfSpeech=: Lemma=- NamedEntityTag=O SentimentClass=Neutral]
[Text=' CharacterOffsetBegin=24 CharacterOffsetEnd=25 PartOfSpeech='' Lemma=' NamedEntityTag=O SentimentClass=Neutral]
[Text=character CharacterOffsetBegin=26 CharacterOffsetEnd=35 PartOfSpeech=NN Lemma=character NamedEntityTag=O SentimentClass=Neutral]
[Text=before CharacterOffsetBegin=36 CharacterOffsetEnd=42 PartOfSpeech=IN Lemma=before NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=43 CharacterOffsetEnd=46 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=value CharacterOffsetBegin=47 CharacterOffsetEnd=52 PartOfSpeech=NN Lemma=value NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=52 CharacterOffsetEnd=53 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=whereas CharacterOffsetBegin=53 CharacterOffsetEnd=60 PartOfSpeech=IN Lemma=whereas NamedEntityTag=O SentimentClass=Neutral]
[Text=Mopidy CharacterOffsetBegin=61 CharacterOffsetEnd=67 PartOfSpeech=NNP Lemma=Mopidy NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=will CharacterOffsetBegin=68 CharacterOffsetEnd=72 PartOfSpeech=MD Lemma=will NamedEntityTag=O SentimentClass=Neutral]
[Text=set CharacterOffsetBegin=73 CharacterOffsetEnd=76 PartOfSpeech=VB Lemma=set NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=77 CharacterOffsetEnd=80 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=volume CharacterOffsetBegin=81 CharacterOffsetEnd=87 PartOfSpeech=NN Lemma=volume NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=88 CharacterOffsetEnd=90 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=0 CharacterOffsetBegin=91 CharacterOffsetEnd=92 PartOfSpeech=CD Lemma=0 NamedEntityTag=NUMBER NormalizedNamedEntityTag=0.0 SentimentClass=Neutral]
[Text=. CharacterOffsetBegin=92 CharacterOffsetEnd=93 PartOfSpeech=. Lemma=. NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (S
      (NP (NN mpd))
      (VP (VBZ does) (RB not)
        (VP (VB accept)
          (NP (DT a) ('' ')))))
    (: -) ('' ')
    (S
      (NP (NN character))
      (PP (IN before)
        (NP
          (NP (DT the) (NN value))
          (, ,)
          (SBAR (IN whereas)
            (S
              (NP (NNP Mopidy))
              (VP (MD will)
                (VP (VB set)
                  (NP (DT the) (NN volume))
                  (PP (TO to)
                    (NP (CD 0))))))))))
    (. .)))

root(ROOT-0, accept-4)
nsubj(accept-4, mpd-1)
aux(accept-4, does-2)
neg(accept-4, not-3)
dobj(accept-4, a-5)
punct(a-5, '-6)
punct(accept-4, --7)
punct(accept-4, '-8)
parataxis(accept-4, character-9)
case(value-12, before-10)
det(value-12, the-11)
dep(character-9, value-12)
punct(value-12, ,-13)
mark(set-17, whereas-14)
nsubj(set-17, Mopidy-15)
aux(set-17, will-16)
dep(value-12, set-17)
det(volume-19, the-18)
dobj(set-17, volume-19)
case(0-21, to-20)
nmod:to(set-17, 0-21)
punct(accept-4, .-22)


==============Pipeline Pretty Print==============
Sentence #1 (22 tokens, sentiment: Negative):
mpd does not accept a '-' character before the value,whereas Mopidy will set the volume to 0.
[Text=mpd CharacterOffsetBegin=0 CharacterOffsetEnd=3 PartOfSpeech=NN Lemma=mpd NamedEntityTag=O SentimentClass=Neutral]
[Text=does CharacterOffsetBegin=4 CharacterOffsetEnd=8 PartOfSpeech=VBZ Lemma=do NamedEntityTag=O SentimentClass=Neutral]
[Text=not CharacterOffsetBegin=9 CharacterOffsetEnd=12 PartOfSpeech=RB Lemma=not NamedEntityTag=O SentimentClass=Negative]
[Text=accept CharacterOffsetBegin=13 CharacterOffsetEnd=19 PartOfSpeech=VB Lemma=accept NamedEntityTag=O SentimentClass=Neutral]
[Text=a CharacterOffsetBegin=20 CharacterOffsetEnd=21 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=' CharacterOffsetBegin=22 CharacterOffsetEnd=23 PartOfSpeech='' Lemma=' NamedEntityTag=O SentimentClass=Neutral]
[Text=- CharacterOffsetBegin=23 CharacterOffsetEnd=24 PartOfSpeech=: Lemma=- NamedEntityTag=O SentimentClass=Neutral]
[Text=' CharacterOffsetBegin=24 CharacterOffsetEnd=25 PartOfSpeech='' Lemma=' NamedEntityTag=O SentimentClass=Neutral]
[Text=character CharacterOffsetBegin=26 CharacterOffsetEnd=35 PartOfSpeech=NN Lemma=character NamedEntityTag=O SentimentClass=Neutral]
[Text=before CharacterOffsetBegin=36 CharacterOffsetEnd=42 PartOfSpeech=IN Lemma=before NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=43 CharacterOffsetEnd=46 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=value CharacterOffsetBegin=47 CharacterOffsetEnd=52 PartOfSpeech=NN Lemma=value NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=52 CharacterOffsetEnd=53 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=whereas CharacterOffsetBegin=53 CharacterOffsetEnd=60 PartOfSpeech=IN Lemma=whereas NamedEntityTag=O SentimentClass=Neutral]
[Text=Mopidy CharacterOffsetBegin=61 CharacterOffsetEnd=67 PartOfSpeech=NNP Lemma=Mopidy NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=will CharacterOffsetBegin=68 CharacterOffsetEnd=72 PartOfSpeech=MD Lemma=will NamedEntityTag=O SentimentClass=Neutral]
[Text=set CharacterOffsetBegin=73 CharacterOffsetEnd=76 PartOfSpeech=VB Lemma=set NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=77 CharacterOffsetEnd=80 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=volume CharacterOffsetBegin=81 CharacterOffsetEnd=87 PartOfSpeech=NN Lemma=volume NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=88 CharacterOffsetEnd=90 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=0 CharacterOffsetBegin=91 CharacterOffsetEnd=92 PartOfSpeech=CD Lemma=0 NamedEntityTag=NUMBER NormalizedNamedEntityTag=0.0 SentimentClass=Neutral]
[Text=. CharacterOffsetBegin=92 CharacterOffsetEnd=93 PartOfSpeech=. Lemma=. NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (S
      (NP (NN mpd))
      (VP (VBZ does) (RB not)
        (VP (VB accept)
          (NP (DT a) ('' ')))))
    (: -) ('' ')
    (S
      (NP (NN character))
      (PP (IN before)
        (NP
          (NP (DT the) (NN value))
          (, ,)
          (SBAR (IN whereas)
            (S
              (NP (NNP Mopidy))
              (VP (MD will)
                (VP (VB set)
                  (NP (DT the) (NN volume))
                  (PP (TO to)
                    (NP (CD 0))))))))))
    (. .)))

root(ROOT-0, accept-4)
nsubj(accept-4, mpd-1)
aux(accept-4, does-2)
neg(accept-4, not-3)
dobj(accept-4, a-5)
punct(a-5, '-6)
punct(accept-4, --7)
punct(accept-4, '-8)
parataxis(accept-4, character-9)
case(value-12, before-10)
det(value-12, the-11)
dep(character-9, value-12)
punct(value-12, ,-13)
mark(set-17, whereas-14)
nsubj(set-17, Mopidy-15)
aux(set-17, will-16)
dep(value-12, set-17)
det(volume-19, the-18)
dobj(set-17, volume-19)
case(0-21, to-20)
nmod:to(set-17, 0-21)
punct(accept-4, .-22)


==============Pipeline Pretty Print==============
Sentence #1 (22 tokens, sentiment: Negative):
mpd does not accept a '-' character before the value,whereas Mopidy will set the volume to 0.
[Text=mpd CharacterOffsetBegin=0 CharacterOffsetEnd=3 PartOfSpeech=NN Lemma=mpd NamedEntityTag=O SentimentClass=Neutral]
[Text=does CharacterOffsetBegin=4 CharacterOffsetEnd=8 PartOfSpeech=VBZ Lemma=do NamedEntityTag=O SentimentClass=Neutral]
[Text=not CharacterOffsetBegin=9 CharacterOffsetEnd=12 PartOfSpeech=RB Lemma=not NamedEntityTag=O SentimentClass=Negative]
[Text=accept CharacterOffsetBegin=13 CharacterOffsetEnd=19 PartOfSpeech=VB Lemma=accept NamedEntityTag=O SentimentClass=Neutral]
[Text=a CharacterOffsetBegin=20 CharacterOffsetEnd=21 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=' CharacterOffsetBegin=22 CharacterOffsetEnd=23 PartOfSpeech='' Lemma=' NamedEntityTag=O SentimentClass=Neutral]
[Text=- CharacterOffsetBegin=23 CharacterOffsetEnd=24 PartOfSpeech=: Lemma=- NamedEntityTag=O SentimentClass=Neutral]
[Text=' CharacterOffsetBegin=24 CharacterOffsetEnd=25 PartOfSpeech='' Lemma=' NamedEntityTag=O SentimentClass=Neutral]
[Text=character CharacterOffsetBegin=26 CharacterOffsetEnd=35 PartOfSpeech=NN Lemma=character NamedEntityTag=O SentimentClass=Neutral]
[Text=before CharacterOffsetBegin=36 CharacterOffsetEnd=42 PartOfSpeech=IN Lemma=before NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=43 CharacterOffsetEnd=46 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=value CharacterOffsetBegin=47 CharacterOffsetEnd=52 PartOfSpeech=NN Lemma=value NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=52 CharacterOffsetEnd=53 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=whereas CharacterOffsetBegin=53 CharacterOffsetEnd=60 PartOfSpeech=IN Lemma=whereas NamedEntityTag=O SentimentClass=Neutral]
[Text=Mopidy CharacterOffsetBegin=61 CharacterOffsetEnd=67 PartOfSpeech=NNP Lemma=Mopidy NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=will CharacterOffsetBegin=68 CharacterOffsetEnd=72 PartOfSpeech=MD Lemma=will NamedEntityTag=O SentimentClass=Neutral]
[Text=set CharacterOffsetBegin=73 CharacterOffsetEnd=76 PartOfSpeech=VB Lemma=set NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=77 CharacterOffsetEnd=80 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=volume CharacterOffsetBegin=81 CharacterOffsetEnd=87 PartOfSpeech=NN Lemma=volume NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=88 CharacterOffsetEnd=90 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=0 CharacterOffsetBegin=91 CharacterOffsetEnd=92 PartOfSpeech=CD Lemma=0 NamedEntityTag=NUMBER NormalizedNamedEntityTag=0.0 SentimentClass=Neutral]
[Text=. CharacterOffsetBegin=92 CharacterOffsetEnd=93 PartOfSpeech=. Lemma=. NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (S
      (NP (NN mpd))
      (VP (VBZ does) (RB not)
        (VP (VB accept)
          (NP (DT a) ('' ')))))
    (: -) ('' ')
    (S
      (NP (NN character))
      (PP (IN before)
        (NP
          (NP (DT the) (NN value))
          (, ,)
          (SBAR (IN whereas)
            (S
              (NP (NNP Mopidy))
              (VP (MD will)
                (VP (VB set)
                  (NP (DT the) (NN volume))
                  (PP (TO to)
                    (NP (CD 0))))))))))
    (. .)))

root(ROOT-0, accept-4)
nsubj(accept-4, mpd-1)
aux(accept-4, does-2)
neg(accept-4, not-3)
dobj(accept-4, a-5)
punct(a-5, '-6)
punct(accept-4, --7)
punct(accept-4, '-8)
parataxis(accept-4, character-9)
case(value-12, before-10)
det(value-12, the-11)
dep(character-9, value-12)
punct(value-12, ,-13)
mark(set-17, whereas-14)
nsubj(set-17, Mopidy-15)
aux(set-17, will-16)
dep(value-12, set-17)
det(volume-19, the-18)
dobj(set-17, volume-19)
case(0-21, to-20)
nmod:to(set-17, 0-21)
punct(accept-4, .-22)


==============Pipeline Pretty Print==============
Sentence #1 (22 tokens, sentiment: Negative):
mpd does not accept a '-' character before the value,whereas Mopidy will set the volume to 0.
[Text=mpd CharacterOffsetBegin=0 CharacterOffsetEnd=3 PartOfSpeech=NN Lemma=mpd NamedEntityTag=O SentimentClass=Neutral]
[Text=does CharacterOffsetBegin=4 CharacterOffsetEnd=8 PartOfSpeech=VBZ Lemma=do NamedEntityTag=O SentimentClass=Neutral]
[Text=not CharacterOffsetBegin=9 CharacterOffsetEnd=12 PartOfSpeech=RB Lemma=not NamedEntityTag=O SentimentClass=Negative]
[Text=accept CharacterOffsetBegin=13 CharacterOffsetEnd=19 PartOfSpeech=VB Lemma=accept NamedEntityTag=O SentimentClass=Neutral]
[Text=a CharacterOffsetBegin=20 CharacterOffsetEnd=21 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=' CharacterOffsetBegin=22 CharacterOffsetEnd=23 PartOfSpeech='' Lemma=' NamedEntityTag=O SentimentClass=Neutral]
[Text=- CharacterOffsetBegin=23 CharacterOffsetEnd=24 PartOfSpeech=: Lemma=- NamedEntityTag=O SentimentClass=Neutral]
[Text=' CharacterOffsetBegin=24 CharacterOffsetEnd=25 PartOfSpeech='' Lemma=' NamedEntityTag=O SentimentClass=Neutral]
[Text=character CharacterOffsetBegin=26 CharacterOffsetEnd=35 PartOfSpeech=NN Lemma=character NamedEntityTag=O SentimentClass=Neutral]
[Text=before CharacterOffsetBegin=36 CharacterOffsetEnd=42 PartOfSpeech=IN Lemma=before NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=43 CharacterOffsetEnd=46 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=value CharacterOffsetBegin=47 CharacterOffsetEnd=52 PartOfSpeech=NN Lemma=value NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=52 CharacterOffsetEnd=53 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=whereas CharacterOffsetBegin=53 CharacterOffsetEnd=60 PartOfSpeech=IN Lemma=whereas NamedEntityTag=O SentimentClass=Neutral]
[Text=Mopidy CharacterOffsetBegin=61 CharacterOffsetEnd=67 PartOfSpeech=NNP Lemma=Mopidy NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=will CharacterOffsetBegin=68 CharacterOffsetEnd=72 PartOfSpeech=MD Lemma=will NamedEntityTag=O SentimentClass=Neutral]
[Text=set CharacterOffsetBegin=73 CharacterOffsetEnd=76 PartOfSpeech=VB Lemma=set NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=77 CharacterOffsetEnd=80 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=volume CharacterOffsetBegin=81 CharacterOffsetEnd=87 PartOfSpeech=NN Lemma=volume NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=88 CharacterOffsetEnd=90 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=0 CharacterOffsetBegin=91 CharacterOffsetEnd=92 PartOfSpeech=CD Lemma=0 NamedEntityTag=NUMBER NormalizedNamedEntityTag=0.0 SentimentClass=Neutral]
[Text=. CharacterOffsetBegin=92 CharacterOffsetEnd=93 PartOfSpeech=. Lemma=. NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (S
      (NP (NN mpd))
      (VP (VBZ does) (RB not)
        (VP (VB accept)
          (NP (DT a) ('' ')))))
    (: -) ('' ')
    (S
      (NP (NN character))
      (PP (IN before)
        (NP
          (NP (DT the) (NN value))
          (, ,)
          (SBAR (IN whereas)
            (S
              (NP (NNP Mopidy))
              (VP (MD will)
                (VP (VB set)
                  (NP (DT the) (NN volume))
                  (PP (TO to)
                    (NP (CD 0))))))))))
    (. .)))

root(ROOT-0, accept-4)
nsubj(accept-4, mpd-1)
aux(accept-4, does-2)
neg(accept-4, not-3)
dobj(accept-4, a-5)
punct(a-5, '-6)
punct(accept-4, --7)
punct(accept-4, '-8)
parataxis(accept-4, character-9)
case(value-12, before-10)
det(value-12, the-11)
dep(character-9, value-12)
punct(value-12, ,-13)
mark(set-17, whereas-14)
nsubj(set-17, Mopidy-15)
aux(set-17, will-16)
dep(value-12, set-17)
det(volume-19, the-18)
dobj(set-17, volume-19)
case(0-21, to-20)
nmod:to(set-17, 0-21)
punct(accept-4, .-22)


==============Pipeline Pretty Print==============
Sentence #1 (17 tokens, sentiment: Neutral):
I did not yet investigate how to implement this feature myself, but perhaps somebody else did
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=did CharacterOffsetBegin=2 CharacterOffsetEnd=5 PartOfSpeech=VBD Lemma=do NamedEntityTag=O SentimentClass=Neutral]
[Text=not CharacterOffsetBegin=6 CharacterOffsetEnd=9 PartOfSpeech=RB Lemma=not NamedEntityTag=O SentimentClass=Negative]
[Text=yet CharacterOffsetBegin=10 CharacterOffsetEnd=13 PartOfSpeech=RB Lemma=yet NamedEntityTag=O SentimentClass=Neutral]
[Text=investigate CharacterOffsetBegin=14 CharacterOffsetEnd=25 PartOfSpeech=VB Lemma=investigate NamedEntityTag=O SentimentClass=Neutral]
[Text=how CharacterOffsetBegin=26 CharacterOffsetEnd=29 PartOfSpeech=WRB Lemma=how NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=30 CharacterOffsetEnd=32 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=implement CharacterOffsetBegin=33 CharacterOffsetEnd=42 PartOfSpeech=VB Lemma=implement NamedEntityTag=O SentimentClass=Neutral]
[Text=this CharacterOffsetBegin=43 CharacterOffsetEnd=47 PartOfSpeech=DT Lemma=this NamedEntityTag=O SentimentClass=Neutral]
[Text=feature CharacterOffsetBegin=48 CharacterOffsetEnd=55 PartOfSpeech=NN Lemma=feature NamedEntityTag=O SentimentClass=Neutral]
[Text=myself CharacterOffsetBegin=56 CharacterOffsetEnd=62 PartOfSpeech=PRP Lemma=myself NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=62 CharacterOffsetEnd=63 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=but CharacterOffsetBegin=64 CharacterOffsetEnd=67 PartOfSpeech=CC Lemma=but NamedEntityTag=O SentimentClass=Neutral]
[Text=perhaps CharacterOffsetBegin=68 CharacterOffsetEnd=75 PartOfSpeech=RB Lemma=perhaps NamedEntityTag=O SentimentClass=Neutral]
[Text=somebody CharacterOffsetBegin=76 CharacterOffsetEnd=84 PartOfSpeech=NN Lemma=somebody NamedEntityTag=O SentimentClass=Neutral]
[Text=else CharacterOffsetBegin=85 CharacterOffsetEnd=89 PartOfSpeech=RB Lemma=else NamedEntityTag=O SentimentClass=Neutral]
[Text=did CharacterOffsetBegin=90 CharacterOffsetEnd=93 PartOfSpeech=VBD Lemma=do NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (FRAG
    (S
      (S
        (NP (PRP I))
        (VP (VBD did) (RB not)
          (ADVP (RB yet))
          (VP (VB investigate)
            (SBAR
              (WHADVP (WRB how))
              (S
                (VP (TO to)
                  (VP (VB implement)
                    (S
                      (NP (DT this) (NN feature))
                      (NP (PRP myself))))))))))
      (, ,)
      (CC but)
      (S
        (ADVP (RB perhaps))
        (NP (NN somebody) (RB else))
        (VP (VBD did))))))

root(ROOT-0, investigate-5)
nsubj(investigate-5, I-1)
aux(investigate-5, did-2)
neg(investigate-5, not-3)
advmod(investigate-5, yet-4)
advmod(implement-8, how-6)
mark(implement-8, to-7)
ccomp(investigate-5, implement-8)
det(feature-10, this-9)
nsubj(myself-11, feature-10)
xcomp(implement-8, myself-11)
punct(investigate-5, ,-12)
cc(investigate-5, but-13)
advmod(did-17, perhaps-14)
nsubj(did-17, somebody-15)
advmod(somebody-15, else-16)
conj:but(investigate-5, did-17)

Coreference set:
	(1,11,[11,12]) -> (1,1,[1,2]), that is: "myself" -> "I"

==============Pipeline Pretty Print==============
Sentence #1 (24 tokens, sentiment: Negative):
these are pretty much unusable without resorting to ugly hacks like creating a temporary Extension instance just to get access to the directory.
[Text=these CharacterOffsetBegin=0 CharacterOffsetEnd=5 PartOfSpeech=DT Lemma=these NamedEntityTag=O SentimentClass=Neutral]
[Text=are CharacterOffsetBegin=6 CharacterOffsetEnd=9 PartOfSpeech=VBP Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=pretty CharacterOffsetBegin=10 CharacterOffsetEnd=16 PartOfSpeech=RB Lemma=pretty NamedEntityTag=O SentimentClass=Very positive]
[Text=much CharacterOffsetBegin=17 CharacterOffsetEnd=21 PartOfSpeech=RB Lemma=much NamedEntityTag=O SentimentClass=Neutral]
[Text=unusable CharacterOffsetBegin=22 CharacterOffsetEnd=30 PartOfSpeech=JJ Lemma=unusable NamedEntityTag=O SentimentClass=Neutral]
[Text=without CharacterOffsetBegin=31 CharacterOffsetEnd=38 PartOfSpeech=IN Lemma=without NamedEntityTag=O SentimentClass=Neutral]
[Text=resorting CharacterOffsetBegin=39 CharacterOffsetEnd=48 PartOfSpeech=VBG Lemma=resort NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=49 CharacterOffsetEnd=51 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=ugly CharacterOffsetBegin=52 CharacterOffsetEnd=56 PartOfSpeech=JJ Lemma=ugly NamedEntityTag=O SentimentClass=Negative]
[Text=hacks CharacterOffsetBegin=57 CharacterOffsetEnd=62 PartOfSpeech=NNS Lemma=hack NamedEntityTag=O SentimentClass=Neutral]
[Text=like CharacterOffsetBegin=63 CharacterOffsetEnd=67 PartOfSpeech=IN Lemma=like NamedEntityTag=O SentimentClass=Neutral]
[Text=creating CharacterOffsetBegin=68 CharacterOffsetEnd=76 PartOfSpeech=VBG Lemma=create NamedEntityTag=O SentimentClass=Neutral]
[Text=a CharacterOffsetBegin=77 CharacterOffsetEnd=78 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=temporary CharacterOffsetBegin=79 CharacterOffsetEnd=88 PartOfSpeech=JJ Lemma=temporary NamedEntityTag=O SentimentClass=Neutral]
[Text=Extension CharacterOffsetBegin=89 CharacterOffsetEnd=98 PartOfSpeech=NNP Lemma=Extension NamedEntityTag=O SentimentClass=Neutral]
[Text=instance CharacterOffsetBegin=99 CharacterOffsetEnd=107 PartOfSpeech=NN Lemma=instance NamedEntityTag=O SentimentClass=Neutral]
[Text=just CharacterOffsetBegin=108 CharacterOffsetEnd=112 PartOfSpeech=RB Lemma=just NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=113 CharacterOffsetEnd=115 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=get CharacterOffsetBegin=116 CharacterOffsetEnd=119 PartOfSpeech=VB Lemma=get NamedEntityTag=O SentimentClass=Neutral]
[Text=access CharacterOffsetBegin=120 CharacterOffsetEnd=126 PartOfSpeech=NN Lemma=access NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=127 CharacterOffsetEnd=129 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=130 CharacterOffsetEnd=133 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=directory CharacterOffsetBegin=134 CharacterOffsetEnd=143 PartOfSpeech=NN Lemma=directory NamedEntityTag=O SentimentClass=Neutral]
[Text=. CharacterOffsetBegin=143 CharacterOffsetEnd=144 PartOfSpeech=. Lemma=. NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT these))
    (VP (VBP are)
      (ADJP
        (ADJP (RB pretty) (RB much) (JJ unusable))
        (PP (IN without)
          (S
            (VP (VBG resorting)
              (PP (TO to)
                (NP (JJ ugly) (NNS hacks)))
              (PP (IN like)
                (S
                  (VP (VBG creating)
                    (NP (DT a) (JJ temporary) (NNP Extension) (NN instance))
                    (S
                      (ADVP (RB just))
                      (VP (TO to)
                        (VP (VB get)
                          (NP (NN access))
                          (PP (TO to)
                            (NP (DT the) (NN directory))))))))))))))
    (. .)))

root(ROOT-0, unusable-5)
nsubj(unusable-5, these-1)
cop(unusable-5, are-2)
advmod(unusable-5, pretty-3)
advmod(unusable-5, much-4)
mark(resorting-7, without-6)
advcl:without(unusable-5, resorting-7)
case(hacks-10, to-8)
amod(hacks-10, ugly-9)
nmod:to(resorting-7, hacks-10)
mark(creating-12, like-11)
advcl:like(resorting-7, creating-12)
det(instance-16, a-13)
amod(instance-16, temporary-14)
compound(instance-16, Extension-15)
dobj(creating-12, instance-16)
advmod(get-19, just-17)
mark(get-19, to-18)
advcl:to(creating-12, get-19)
dobj(get-19, access-20)
case(directory-23, to-21)
det(directory-23, the-22)
nmod:to(get-19, directory-23)
punct(unusable-5, .-24)


==============Pipeline Pretty Print==============
Sentence #1 (6 tokens, sentiment: Very positive):
IT was very fantastic experience.
[Text=IT CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=was CharacterOffsetBegin=3 CharacterOffsetEnd=6 PartOfSpeech=VBD Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=very CharacterOffsetBegin=7 CharacterOffsetEnd=11 PartOfSpeech=RB Lemma=very NamedEntityTag=O SentimentClass=Neutral]
[Text=fantastic CharacterOffsetBegin=12 CharacterOffsetEnd=21 PartOfSpeech=JJ Lemma=fantastic NamedEntityTag=O SentimentClass=Positive]
[Text=experience CharacterOffsetBegin=22 CharacterOffsetEnd=32 PartOfSpeech=NN Lemma=experience NamedEntityTag=O SentimentClass=Neutral]
[Text=. CharacterOffsetBegin=32 CharacterOffsetEnd=33 PartOfSpeech=. Lemma=. NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP IT))
    (VP (VBD was)
      (NP
        (ADJP (RB very) (JJ fantastic))
        (NN experience)))
    (. .)))

root(ROOT-0, experience-5)
nsubj(experience-5, IT-1)
cop(experience-5, was-2)
advmod(fantastic-4, very-3)
amod(experience-5, fantastic-4)
punct(experience-5, .-6)

Coreference set:
	(1,1,[1,2]) -> (1,5,[3,6]), that is: "IT" -> "very fantastic experience"

==============Pipeline Pretty Print==============
Sentence #1 (3 tokens, sentiment: Neutral):
I like it
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=like CharacterOffsetBegin=2 CharacterOffsetEnd=6 PartOfSpeech=VBP Lemma=like NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=7 CharacterOffsetEnd=9 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP like)
      (NP (PRP it)))))

root(ROOT-0, like-2)
nsubj(like-2, I-1)
dobj(like-2, it-3)


==============Pipeline Pretty Print==============
Sentence #1 (5 tokens, sentiment: Neutral):
I used to like it
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=used CharacterOffsetBegin=2 CharacterOffsetEnd=6 PartOfSpeech=VBD Lemma=use NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=7 CharacterOffsetEnd=9 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=like CharacterOffsetBegin=10 CharacterOffsetEnd=14 PartOfSpeech=VB Lemma=like NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=15 CharacterOffsetEnd=17 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBD used)
      (S
        (VP (TO to)
          (VP (VB like)
            (NP (PRP it))))))))

root(ROOT-0, used-2)
nsubj(used-2, I-1)
nsubj:xsubj(like-4, I-1)
mark(like-4, to-3)
xcomp(used-2, like-4)
dobj(like-4, it-5)


==============Pipeline Pretty Print==============
Sentence #1 (24 tokens, sentiment: Negative):
these are pretty much unusable without resorting to ugly hacks like creating a temporary Extension instance just to get access to the directory.
[Text=these CharacterOffsetBegin=0 CharacterOffsetEnd=5 PartOfSpeech=DT Lemma=these NamedEntityTag=O SentimentClass=Neutral]
[Text=are CharacterOffsetBegin=6 CharacterOffsetEnd=9 PartOfSpeech=VBP Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=pretty CharacterOffsetBegin=10 CharacterOffsetEnd=16 PartOfSpeech=RB Lemma=pretty NamedEntityTag=O SentimentClass=Very positive]
[Text=much CharacterOffsetBegin=17 CharacterOffsetEnd=21 PartOfSpeech=RB Lemma=much NamedEntityTag=O SentimentClass=Neutral]
[Text=unusable CharacterOffsetBegin=22 CharacterOffsetEnd=30 PartOfSpeech=JJ Lemma=unusable NamedEntityTag=O SentimentClass=Neutral]
[Text=without CharacterOffsetBegin=31 CharacterOffsetEnd=38 PartOfSpeech=IN Lemma=without NamedEntityTag=O SentimentClass=Neutral]
[Text=resorting CharacterOffsetBegin=39 CharacterOffsetEnd=48 PartOfSpeech=VBG Lemma=resort NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=49 CharacterOffsetEnd=51 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=ugly CharacterOffsetBegin=52 CharacterOffsetEnd=56 PartOfSpeech=JJ Lemma=ugly NamedEntityTag=O SentimentClass=Negative]
[Text=hacks CharacterOffsetBegin=57 CharacterOffsetEnd=62 PartOfSpeech=NNS Lemma=hack NamedEntityTag=O SentimentClass=Neutral]
[Text=like CharacterOffsetBegin=63 CharacterOffsetEnd=67 PartOfSpeech=IN Lemma=like NamedEntityTag=O SentimentClass=Neutral]
[Text=creating CharacterOffsetBegin=68 CharacterOffsetEnd=76 PartOfSpeech=VBG Lemma=create NamedEntityTag=O SentimentClass=Neutral]
[Text=a CharacterOffsetBegin=77 CharacterOffsetEnd=78 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=temporary CharacterOffsetBegin=79 CharacterOffsetEnd=88 PartOfSpeech=JJ Lemma=temporary NamedEntityTag=O SentimentClass=Neutral]
[Text=Extension CharacterOffsetBegin=89 CharacterOffsetEnd=98 PartOfSpeech=NNP Lemma=Extension NamedEntityTag=O SentimentClass=Neutral]
[Text=instance CharacterOffsetBegin=99 CharacterOffsetEnd=107 PartOfSpeech=NN Lemma=instance NamedEntityTag=O SentimentClass=Neutral]
[Text=just CharacterOffsetBegin=108 CharacterOffsetEnd=112 PartOfSpeech=RB Lemma=just NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=113 CharacterOffsetEnd=115 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=get CharacterOffsetBegin=116 CharacterOffsetEnd=119 PartOfSpeech=VB Lemma=get NamedEntityTag=O SentimentClass=Neutral]
[Text=access CharacterOffsetBegin=120 CharacterOffsetEnd=126 PartOfSpeech=NN Lemma=access NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=127 CharacterOffsetEnd=129 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=130 CharacterOffsetEnd=133 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=directory CharacterOffsetBegin=134 CharacterOffsetEnd=143 PartOfSpeech=NN Lemma=directory NamedEntityTag=O SentimentClass=Neutral]
[Text=. CharacterOffsetBegin=143 CharacterOffsetEnd=144 PartOfSpeech=. Lemma=. NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT these))
    (VP (VBP are)
      (ADJP
        (ADJP (RB pretty) (RB much) (JJ unusable))
        (PP (IN without)
          (S
            (VP (VBG resorting)
              (PP (TO to)
                (NP (JJ ugly) (NNS hacks)))
              (PP (IN like)
                (S
                  (VP (VBG creating)
                    (NP (DT a) (JJ temporary) (NNP Extension) (NN instance))
                    (S
                      (ADVP (RB just))
                      (VP (TO to)
                        (VP (VB get)
                          (NP (NN access))
                          (PP (TO to)
                            (NP (DT the) (NN directory))))))))))))))
    (. .)))

root(ROOT-0, unusable-5)
nsubj(unusable-5, these-1)
cop(unusable-5, are-2)
advmod(unusable-5, pretty-3)
advmod(unusable-5, much-4)
mark(resorting-7, without-6)
advcl:without(unusable-5, resorting-7)
case(hacks-10, to-8)
amod(hacks-10, ugly-9)
nmod:to(resorting-7, hacks-10)
mark(creating-12, like-11)
advcl:like(resorting-7, creating-12)
det(instance-16, a-13)
amod(instance-16, temporary-14)
compound(instance-16, Extension-15)
dobj(creating-12, instance-16)
advmod(get-19, just-17)
mark(get-19, to-18)
advcl:to(creating-12, get-19)
dobj(get-19, access-20)
case(directory-23, to-21)
det(directory-23, the-22)
nmod:to(get-19, directory-23)
punct(unusable-5, .-24)


==============Pipeline Pretty Print==============
Sentence #1 (3 tokens, sentiment: Negative):
I hate it
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=hate CharacterOffsetBegin=2 CharacterOffsetEnd=6 PartOfSpeech=VBP Lemma=hate NamedEntityTag=O SentimentClass=Very negative]
[Text=it CharacterOffsetBegin=7 CharacterOffsetEnd=9 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP hate)
      (NP (PRP it)))))

root(ROOT-0, hate-2)
nsubj(hate-2, I-1)
dobj(hate-2, it-3)


==============Pipeline Pretty Print==============
Sentence #1 (5 tokens, sentiment: Negative):
I hate it very much
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=hate CharacterOffsetBegin=2 CharacterOffsetEnd=6 PartOfSpeech=VBP Lemma=hate NamedEntityTag=O SentimentClass=Very negative]
[Text=it CharacterOffsetBegin=7 CharacterOffsetEnd=9 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=very CharacterOffsetBegin=10 CharacterOffsetEnd=14 PartOfSpeech=RB Lemma=very NamedEntityTag=O SentimentClass=Neutral]
[Text=much CharacterOffsetBegin=15 CharacterOffsetEnd=19 PartOfSpeech=RB Lemma=much NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP hate)
      (NP (PRP it))
      (ADVP (RB very) (RB much)))))

root(ROOT-0, hate-2)
nsubj(hate-2, I-1)
dobj(hate-2, it-3)
advmod(much-5, very-4)
advmod(hate-2, much-5)


==============Pipeline Pretty Print==============
Sentence #1 (5 tokens, sentiment: Negative):
I hate it very much
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=hate CharacterOffsetBegin=2 CharacterOffsetEnd=6 PartOfSpeech=VBP Lemma=hate NamedEntityTag=O SentimentClass=Very negative]
[Text=it CharacterOffsetBegin=7 CharacterOffsetEnd=9 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=very CharacterOffsetBegin=10 CharacterOffsetEnd=14 PartOfSpeech=RB Lemma=very NamedEntityTag=O SentimentClass=Neutral]
[Text=much CharacterOffsetBegin=15 CharacterOffsetEnd=19 PartOfSpeech=RB Lemma=much NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP hate)
      (NP (PRP it))
      (ADVP (RB very) (RB much)))))

root(ROOT-0, hate-2)
nsubj(hate-2, I-1)
dobj(hate-2, it-3)
advmod(much-5, very-4)
advmod(hate-2, much-5)


==============Pipeline Pretty Print==============
Sentence #1 (5 tokens, sentiment: Negative):
I hate it very much
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=hate CharacterOffsetBegin=2 CharacterOffsetEnd=6 PartOfSpeech=VBP Lemma=hate NamedEntityTag=O SentimentClass=Very negative]
[Text=it CharacterOffsetBegin=7 CharacterOffsetEnd=9 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=very CharacterOffsetBegin=10 CharacterOffsetEnd=14 PartOfSpeech=RB Lemma=very NamedEntityTag=O SentimentClass=Neutral]
[Text=much CharacterOffsetBegin=15 CharacterOffsetEnd=19 PartOfSpeech=RB Lemma=much NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP hate)
      (NP (PRP it))
      (ADVP (RB very) (RB much)))))

root(ROOT-0, hate-2)
nsubj(hate-2, I-1)
dobj(hate-2, it-3)
advmod(much-5, very-4)
advmod(hate-2, much-5)


==============Pipeline Pretty Print==============
Sentence #1 (3 tokens, sentiment: Negative):
I hate it
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=hate CharacterOffsetBegin=2 CharacterOffsetEnd=6 PartOfSpeech=VBP Lemma=hate NamedEntityTag=O SentimentClass=Very negative]
[Text=it CharacterOffsetBegin=7 CharacterOffsetEnd=9 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP hate)
      (NP (PRP it)))))

root(ROOT-0, hate-2)
nsubj(hate-2, I-1)
dobj(hate-2, it-3)


==============Pipeline Pretty Print==============
Sentence #1 (5 tokens, sentiment: Positive):
I hate it pretty much
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=hate CharacterOffsetBegin=2 CharacterOffsetEnd=6 PartOfSpeech=VBP Lemma=hate NamedEntityTag=O SentimentClass=Very negative]
[Text=it CharacterOffsetBegin=7 CharacterOffsetEnd=9 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=pretty CharacterOffsetBegin=10 CharacterOffsetEnd=16 PartOfSpeech=RB Lemma=pretty NamedEntityTag=O SentimentClass=Very positive]
[Text=much CharacterOffsetBegin=17 CharacterOffsetEnd=21 PartOfSpeech=RB Lemma=much NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP hate)
      (NP (PRP it))
      (ADVP (RB pretty) (RB much)))))

root(ROOT-0, hate-2)
nsubj(hate-2, I-1)
dobj(hate-2, it-3)
advmod(much-5, pretty-4)
advmod(hate-2, much-5)


==============Pipeline Pretty Print==============
Sentence #1 (24 tokens, sentiment: Negative):
these are pretty much unusable without resorting to ugly hacks like creating a temporary Extension instance just to get access to the directory.
[Text=these CharacterOffsetBegin=0 CharacterOffsetEnd=5 PartOfSpeech=DT Lemma=these NamedEntityTag=O SentimentClass=Neutral]
[Text=are CharacterOffsetBegin=6 CharacterOffsetEnd=9 PartOfSpeech=VBP Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=pretty CharacterOffsetBegin=10 CharacterOffsetEnd=16 PartOfSpeech=RB Lemma=pretty NamedEntityTag=O SentimentClass=Very positive]
[Text=much CharacterOffsetBegin=17 CharacterOffsetEnd=21 PartOfSpeech=RB Lemma=much NamedEntityTag=O SentimentClass=Neutral]
[Text=unusable CharacterOffsetBegin=22 CharacterOffsetEnd=30 PartOfSpeech=JJ Lemma=unusable NamedEntityTag=O SentimentClass=Neutral]
[Text=without CharacterOffsetBegin=31 CharacterOffsetEnd=38 PartOfSpeech=IN Lemma=without NamedEntityTag=O SentimentClass=Neutral]
[Text=resorting CharacterOffsetBegin=39 CharacterOffsetEnd=48 PartOfSpeech=VBG Lemma=resort NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=49 CharacterOffsetEnd=51 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=ugly CharacterOffsetBegin=52 CharacterOffsetEnd=56 PartOfSpeech=JJ Lemma=ugly NamedEntityTag=O SentimentClass=Negative]
[Text=hacks CharacterOffsetBegin=57 CharacterOffsetEnd=62 PartOfSpeech=NNS Lemma=hack NamedEntityTag=O SentimentClass=Neutral]
[Text=like CharacterOffsetBegin=63 CharacterOffsetEnd=67 PartOfSpeech=IN Lemma=like NamedEntityTag=O SentimentClass=Neutral]
[Text=creating CharacterOffsetBegin=68 CharacterOffsetEnd=76 PartOfSpeech=VBG Lemma=create NamedEntityTag=O SentimentClass=Neutral]
[Text=a CharacterOffsetBegin=77 CharacterOffsetEnd=78 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=temporary CharacterOffsetBegin=79 CharacterOffsetEnd=88 PartOfSpeech=JJ Lemma=temporary NamedEntityTag=O SentimentClass=Neutral]
[Text=Extension CharacterOffsetBegin=89 CharacterOffsetEnd=98 PartOfSpeech=NNP Lemma=Extension NamedEntityTag=O SentimentClass=Neutral]
[Text=instance CharacterOffsetBegin=99 CharacterOffsetEnd=107 PartOfSpeech=NN Lemma=instance NamedEntityTag=O SentimentClass=Neutral]
[Text=just CharacterOffsetBegin=108 CharacterOffsetEnd=112 PartOfSpeech=RB Lemma=just NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=113 CharacterOffsetEnd=115 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=get CharacterOffsetBegin=116 CharacterOffsetEnd=119 PartOfSpeech=VB Lemma=get NamedEntityTag=O SentimentClass=Neutral]
[Text=access CharacterOffsetBegin=120 CharacterOffsetEnd=126 PartOfSpeech=NN Lemma=access NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=127 CharacterOffsetEnd=129 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=130 CharacterOffsetEnd=133 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=directory CharacterOffsetBegin=134 CharacterOffsetEnd=143 PartOfSpeech=NN Lemma=directory NamedEntityTag=O SentimentClass=Neutral]
[Text=. CharacterOffsetBegin=143 CharacterOffsetEnd=144 PartOfSpeech=. Lemma=. NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT these))
    (VP (VBP are)
      (ADJP
        (ADJP (RB pretty) (RB much) (JJ unusable))
        (PP (IN without)
          (S
            (VP (VBG resorting)
              (PP (TO to)
                (NP (JJ ugly) (NNS hacks)))
              (PP (IN like)
                (S
                  (VP (VBG creating)
                    (NP (DT a) (JJ temporary) (NNP Extension) (NN instance))
                    (S
                      (ADVP (RB just))
                      (VP (TO to)
                        (VP (VB get)
                          (NP (NN access))
                          (PP (TO to)
                            (NP (DT the) (NN directory))))))))))))))
    (. .)))

root(ROOT-0, unusable-5)
nsubj(unusable-5, these-1)
cop(unusable-5, are-2)
advmod(unusable-5, pretty-3)
advmod(unusable-5, much-4)
mark(resorting-7, without-6)
advcl:without(unusable-5, resorting-7)
case(hacks-10, to-8)
amod(hacks-10, ugly-9)
nmod:to(resorting-7, hacks-10)
mark(creating-12, like-11)
advcl:like(resorting-7, creating-12)
det(instance-16, a-13)
amod(instance-16, temporary-14)
compound(instance-16, Extension-15)
dobj(creating-12, instance-16)
advmod(get-19, just-17)
mark(get-19, to-18)
advcl:to(creating-12, get-19)
dobj(get-19, access-20)
case(directory-23, to-21)
det(directory-23, the-22)
nmod:to(get-19, directory-23)
punct(unusable-5, .-24)


==============Pipeline Pretty Print==============
Sentence #1 (24 tokens, sentiment: Negative):
these are pretty much unusable without resorting to ugly hacks like creating a temporary Extension instance just to get access to the directory.
[Text=these CharacterOffsetBegin=0 CharacterOffsetEnd=5 PartOfSpeech=DT Lemma=these NamedEntityTag=O SentimentClass=Neutral]
[Text=are CharacterOffsetBegin=6 CharacterOffsetEnd=9 PartOfSpeech=VBP Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=pretty CharacterOffsetBegin=10 CharacterOffsetEnd=16 PartOfSpeech=RB Lemma=pretty NamedEntityTag=O SentimentClass=Very positive]
[Text=much CharacterOffsetBegin=17 CharacterOffsetEnd=21 PartOfSpeech=RB Lemma=much NamedEntityTag=O SentimentClass=Neutral]
[Text=unusable CharacterOffsetBegin=22 CharacterOffsetEnd=30 PartOfSpeech=JJ Lemma=unusable NamedEntityTag=O SentimentClass=Neutral]
[Text=without CharacterOffsetBegin=31 CharacterOffsetEnd=38 PartOfSpeech=IN Lemma=without NamedEntityTag=O SentimentClass=Neutral]
[Text=resorting CharacterOffsetBegin=39 CharacterOffsetEnd=48 PartOfSpeech=VBG Lemma=resort NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=49 CharacterOffsetEnd=51 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=ugly CharacterOffsetBegin=52 CharacterOffsetEnd=56 PartOfSpeech=JJ Lemma=ugly NamedEntityTag=O SentimentClass=Negative]
[Text=hacks CharacterOffsetBegin=57 CharacterOffsetEnd=62 PartOfSpeech=NNS Lemma=hack NamedEntityTag=O SentimentClass=Neutral]
[Text=like CharacterOffsetBegin=63 CharacterOffsetEnd=67 PartOfSpeech=IN Lemma=like NamedEntityTag=O SentimentClass=Neutral]
[Text=creating CharacterOffsetBegin=68 CharacterOffsetEnd=76 PartOfSpeech=VBG Lemma=create NamedEntityTag=O SentimentClass=Neutral]
[Text=a CharacterOffsetBegin=77 CharacterOffsetEnd=78 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=temporary CharacterOffsetBegin=79 CharacterOffsetEnd=88 PartOfSpeech=JJ Lemma=temporary NamedEntityTag=O SentimentClass=Neutral]
[Text=Extension CharacterOffsetBegin=89 CharacterOffsetEnd=98 PartOfSpeech=NNP Lemma=Extension NamedEntityTag=O SentimentClass=Neutral]
[Text=instance CharacterOffsetBegin=99 CharacterOffsetEnd=107 PartOfSpeech=NN Lemma=instance NamedEntityTag=O SentimentClass=Neutral]
[Text=just CharacterOffsetBegin=108 CharacterOffsetEnd=112 PartOfSpeech=RB Lemma=just NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=113 CharacterOffsetEnd=115 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=get CharacterOffsetBegin=116 CharacterOffsetEnd=119 PartOfSpeech=VB Lemma=get NamedEntityTag=O SentimentClass=Neutral]
[Text=access CharacterOffsetBegin=120 CharacterOffsetEnd=126 PartOfSpeech=NN Lemma=access NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=127 CharacterOffsetEnd=129 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=130 CharacterOffsetEnd=133 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=directory CharacterOffsetBegin=134 CharacterOffsetEnd=143 PartOfSpeech=NN Lemma=directory NamedEntityTag=O SentimentClass=Neutral]
[Text=. CharacterOffsetBegin=143 CharacterOffsetEnd=144 PartOfSpeech=. Lemma=. NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT these))
    (VP (VBP are)
      (ADJP
        (ADJP (RB pretty) (RB much) (JJ unusable))
        (PP (IN without)
          (S
            (VP (VBG resorting)
              (PP (TO to)
                (NP (JJ ugly) (NNS hacks)))
              (PP (IN like)
                (S
                  (VP (VBG creating)
                    (NP (DT a) (JJ temporary) (NNP Extension) (NN instance))
                    (S
                      (ADVP (RB just))
                      (VP (TO to)
                        (VP (VB get)
                          (NP (NN access))
                          (PP (TO to)
                            (NP (DT the) (NN directory))))))))))))))
    (. .)))

root(ROOT-0, unusable-5)
nsubj(unusable-5, these-1)
cop(unusable-5, are-2)
advmod(unusable-5, pretty-3)
advmod(unusable-5, much-4)
mark(resorting-7, without-6)
advcl:without(unusable-5, resorting-7)
case(hacks-10, to-8)
amod(hacks-10, ugly-9)
nmod:to(resorting-7, hacks-10)
mark(creating-12, like-11)
advcl:like(resorting-7, creating-12)
det(instance-16, a-13)
amod(instance-16, temporary-14)
compound(instance-16, Extension-15)
dobj(creating-12, instance-16)
advmod(get-19, just-17)
mark(get-19, to-18)
advcl:to(creating-12, get-19)
dobj(get-19, access-20)
case(directory-23, to-21)
det(directory-23, the-22)
nmod:to(get-19, directory-23)
punct(unusable-5, .-24)


==============Pipeline Pretty Print==============
Sentence #1 (19 tokens, sentiment: Neutral):
(add an option to) show blob fields as hexadecimal values instead of as 'weird' characters
[Text=-LRB- CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=-LRB- Lemma=-lrb- NamedEntityTag=O SentimentClass=Neutral]
[Text=add CharacterOffsetBegin=1 CharacterOffsetEnd=4 PartOfSpeech=VB Lemma=add NamedEntityTag=O SentimentClass=Positive]
[Text=an CharacterOffsetBegin=5 CharacterOffsetEnd=7 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=option CharacterOffsetBegin=8 CharacterOffsetEnd=14 PartOfSpeech=NN Lemma=option NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=15 CharacterOffsetEnd=17 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=-RRB- CharacterOffsetBegin=17 CharacterOffsetEnd=18 PartOfSpeech=-RRB- Lemma=-rrb- NamedEntityTag=O SentimentClass=Neutral]
[Text=show CharacterOffsetBegin=19 CharacterOffsetEnd=23 PartOfSpeech=VBP Lemma=show NamedEntityTag=O SentimentClass=Neutral]
[Text=blob CharacterOffsetBegin=24 CharacterOffsetEnd=28 PartOfSpeech=NN Lemma=blob NamedEntityTag=O SentimentClass=Neutral]
[Text=fields CharacterOffsetBegin=29 CharacterOffsetEnd=35 PartOfSpeech=NNS Lemma=field NamedEntityTag=O SentimentClass=Neutral]
[Text=as CharacterOffsetBegin=36 CharacterOffsetEnd=38 PartOfSpeech=IN Lemma=as NamedEntityTag=O SentimentClass=Neutral]
[Text=hexadecimal CharacterOffsetBegin=39 CharacterOffsetEnd=50 PartOfSpeech=NN Lemma=hexadecimal NamedEntityTag=O SentimentClass=Neutral]
[Text=values CharacterOffsetBegin=51 CharacterOffsetEnd=57 PartOfSpeech=NNS Lemma=value NamedEntityTag=O SentimentClass=Neutral]
[Text=instead CharacterOffsetBegin=58 CharacterOffsetEnd=65 PartOfSpeech=RB Lemma=instead NamedEntityTag=O SentimentClass=Neutral]
[Text=of CharacterOffsetBegin=66 CharacterOffsetEnd=68 PartOfSpeech=IN Lemma=of NamedEntityTag=O SentimentClass=Neutral]
[Text=as CharacterOffsetBegin=69 CharacterOffsetEnd=71 PartOfSpeech=IN Lemma=as NamedEntityTag=O SentimentClass=Neutral]
[Text=` CharacterOffsetBegin=72 CharacterOffsetEnd=73 PartOfSpeech=`` Lemma=` NamedEntityTag=O SentimentClass=Neutral]
[Text=weird CharacterOffsetBegin=73 CharacterOffsetEnd=78 PartOfSpeech=JJ Lemma=weird NamedEntityTag=O SentimentClass=Negative]
[Text=' CharacterOffsetBegin=78 CharacterOffsetEnd=79 PartOfSpeech='' Lemma=' NamedEntityTag=O SentimentClass=Neutral]
[Text=characters CharacterOffsetBegin=80 CharacterOffsetEnd=90 PartOfSpeech=NNS Lemma=character NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (VP (-LRB- -LRB-) (VB add)
    (NP
      (NP
        (NP (DT an))
        (NP (NN option))
        (PP (TO to))
        (-RRB- -RRB-))
      (SBAR
        (S
          (VP (VBP show)
            (NP (NN blob) (NNS fields))
            (PP
              (PP (IN as)
                (NP (NN hexadecimal) (NNS values)))
              (CONJP (RB instead) (IN of))
              (PP (IN as) (`` `)
                (NP (JJ weird))))))))
    ('' ')
    (NP (NNS characters))))

root(ROOT-0, add-2)
punct(add-2, -LRB--1)
dobj(add-2, an-3)
dep(an-3, option-4)
acl(an-3, to-5)
punct(an-3, -RRB--6)
acl:relcl(an-3, show-7)
acl:relcl(an-3, show-7')
conj:negcc(show-7, show-7')
compound(fields-9, blob-8)
dobj(show-7, fields-9)
case(values-12, as-10)
compound(values-12, hexadecimal-11)
nmod:as(show-7, values-12)
cc(show-7, instead-13)
mwe(instead-13, of-14)
case(weird-17, as-15)
punct(weird-17, `-16)
nmod:as(show-7', weird-17)
punct(add-2, '-18)
dobj(add-2, characters-19)


==============Pipeline Pretty Print==============
Sentence #1 (19 tokens, sentiment: Neutral):
(add an option to) show blob fields as hexadecimal values instead of as 'weird' characters
[Text=-LRB- CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=-LRB- Lemma=-lrb- NamedEntityTag=O SentimentClass=Neutral]
[Text=add CharacterOffsetBegin=1 CharacterOffsetEnd=4 PartOfSpeech=VB Lemma=add NamedEntityTag=O SentimentClass=Positive]
[Text=an CharacterOffsetBegin=5 CharacterOffsetEnd=7 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=option CharacterOffsetBegin=8 CharacterOffsetEnd=14 PartOfSpeech=NN Lemma=option NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=15 CharacterOffsetEnd=17 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=-RRB- CharacterOffsetBegin=17 CharacterOffsetEnd=18 PartOfSpeech=-RRB- Lemma=-rrb- NamedEntityTag=O SentimentClass=Neutral]
[Text=show CharacterOffsetBegin=19 CharacterOffsetEnd=23 PartOfSpeech=VBP Lemma=show NamedEntityTag=O SentimentClass=Neutral]
[Text=blob CharacterOffsetBegin=24 CharacterOffsetEnd=28 PartOfSpeech=NN Lemma=blob NamedEntityTag=O SentimentClass=Neutral]
[Text=fields CharacterOffsetBegin=29 CharacterOffsetEnd=35 PartOfSpeech=NNS Lemma=field NamedEntityTag=O SentimentClass=Neutral]
[Text=as CharacterOffsetBegin=36 CharacterOffsetEnd=38 PartOfSpeech=IN Lemma=as NamedEntityTag=O SentimentClass=Neutral]
[Text=hexadecimal CharacterOffsetBegin=39 CharacterOffsetEnd=50 PartOfSpeech=NN Lemma=hexadecimal NamedEntityTag=O SentimentClass=Neutral]
[Text=values CharacterOffsetBegin=51 CharacterOffsetEnd=57 PartOfSpeech=NNS Lemma=value NamedEntityTag=O SentimentClass=Neutral]
[Text=instead CharacterOffsetBegin=58 CharacterOffsetEnd=65 PartOfSpeech=RB Lemma=instead NamedEntityTag=O SentimentClass=Neutral]
[Text=of CharacterOffsetBegin=66 CharacterOffsetEnd=68 PartOfSpeech=IN Lemma=of NamedEntityTag=O SentimentClass=Neutral]
[Text=as CharacterOffsetBegin=69 CharacterOffsetEnd=71 PartOfSpeech=IN Lemma=as NamedEntityTag=O SentimentClass=Neutral]
[Text=` CharacterOffsetBegin=72 CharacterOffsetEnd=73 PartOfSpeech=`` Lemma=` NamedEntityTag=O SentimentClass=Neutral]
[Text=weird CharacterOffsetBegin=73 CharacterOffsetEnd=78 PartOfSpeech=JJ Lemma=weird NamedEntityTag=O SentimentClass=Negative]
[Text=' CharacterOffsetBegin=78 CharacterOffsetEnd=79 PartOfSpeech='' Lemma=' NamedEntityTag=O SentimentClass=Neutral]
[Text=characters CharacterOffsetBegin=80 CharacterOffsetEnd=90 PartOfSpeech=NNS Lemma=character NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (VP (-LRB- -LRB-) (VB add)
    (NP
      (NP
        (NP (DT an))
        (NP (NN option))
        (PP (TO to))
        (-RRB- -RRB-))
      (SBAR
        (S
          (VP (VBP show)
            (NP (NN blob) (NNS fields))
            (PP
              (PP (IN as)
                (NP (NN hexadecimal) (NNS values)))
              (CONJP (RB instead) (IN of))
              (PP (IN as) (`` `)
                (NP (JJ weird))))))))
    ('' ')
    (NP (NNS characters))))

root(ROOT-0, add-2)
punct(add-2, -LRB--1)
dobj(add-2, an-3)
dep(an-3, option-4)
acl(an-3, to-5)
punct(an-3, -RRB--6)
acl:relcl(an-3, show-7)
acl:relcl(an-3, show-7')
conj:negcc(show-7, show-7')
compound(fields-9, blob-8)
dobj(show-7, fields-9)
case(values-12, as-10)
compound(values-12, hexadecimal-11)
nmod:as(show-7, values-12)
cc(show-7, instead-13)
mwe(instead-13, of-14)
case(weird-17, as-15)
punct(weird-17, `-16)
nmod:as(show-7', weird-17)
punct(add-2, '-18)
dobj(add-2, characters-19)


==============Pipeline Pretty Print==============
Sentence #1 (21 tokens, sentiment: Neutral):
(add an option to) can you show blob fields as hexadecimal values instead of as 'weird' characters
[Text=-LRB- CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=-LRB- Lemma=-lrb- NamedEntityTag=O SentimentClass=Neutral]
[Text=add CharacterOffsetBegin=1 CharacterOffsetEnd=4 PartOfSpeech=VB Lemma=add NamedEntityTag=O SentimentClass=Positive]
[Text=an CharacterOffsetBegin=5 CharacterOffsetEnd=7 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=option CharacterOffsetBegin=8 CharacterOffsetEnd=14 PartOfSpeech=NN Lemma=option NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=15 CharacterOffsetEnd=17 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=-RRB- CharacterOffsetBegin=17 CharacterOffsetEnd=18 PartOfSpeech=-RRB- Lemma=-rrb- NamedEntityTag=O SentimentClass=Neutral]
[Text=can CharacterOffsetBegin=19 CharacterOffsetEnd=22 PartOfSpeech=MD Lemma=can NamedEntityTag=O SentimentClass=Neutral]
[Text=you CharacterOffsetBegin=23 CharacterOffsetEnd=26 PartOfSpeech=PRP Lemma=you NamedEntityTag=O SentimentClass=Neutral]
[Text=show CharacterOffsetBegin=27 CharacterOffsetEnd=31 PartOfSpeech=VB Lemma=show NamedEntityTag=O SentimentClass=Neutral]
[Text=blob CharacterOffsetBegin=32 CharacterOffsetEnd=36 PartOfSpeech=NN Lemma=blob NamedEntityTag=O SentimentClass=Neutral]
[Text=fields CharacterOffsetBegin=37 CharacterOffsetEnd=43 PartOfSpeech=NNS Lemma=field NamedEntityTag=O SentimentClass=Neutral]
[Text=as CharacterOffsetBegin=44 CharacterOffsetEnd=46 PartOfSpeech=IN Lemma=as NamedEntityTag=O SentimentClass=Neutral]
[Text=hexadecimal CharacterOffsetBegin=47 CharacterOffsetEnd=58 PartOfSpeech=NN Lemma=hexadecimal NamedEntityTag=O SentimentClass=Neutral]
[Text=values CharacterOffsetBegin=59 CharacterOffsetEnd=65 PartOfSpeech=NNS Lemma=value NamedEntityTag=O SentimentClass=Neutral]
[Text=instead CharacterOffsetBegin=66 CharacterOffsetEnd=73 PartOfSpeech=RB Lemma=instead NamedEntityTag=O SentimentClass=Neutral]
[Text=of CharacterOffsetBegin=74 CharacterOffsetEnd=76 PartOfSpeech=IN Lemma=of NamedEntityTag=O SentimentClass=Neutral]
[Text=as CharacterOffsetBegin=77 CharacterOffsetEnd=79 PartOfSpeech=IN Lemma=as NamedEntityTag=O SentimentClass=Neutral]
[Text=` CharacterOffsetBegin=80 CharacterOffsetEnd=81 PartOfSpeech=`` Lemma=` NamedEntityTag=O SentimentClass=Neutral]
[Text=weird CharacterOffsetBegin=81 CharacterOffsetEnd=86 PartOfSpeech=JJ Lemma=weird NamedEntityTag=O SentimentClass=Negative]
[Text=' CharacterOffsetBegin=86 CharacterOffsetEnd=87 PartOfSpeech='' Lemma=' NamedEntityTag=O SentimentClass=Neutral]
[Text=characters CharacterOffsetBegin=88 CharacterOffsetEnd=98 PartOfSpeech=NNS Lemma=character NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (VP (-LRB- -LRB-) (VB add)
    (NP
      (NP
        (NP (DT an))
        (NP (NN option))
        (PP (TO to))
        (-RRB- -RRB-))
      (SBAR
        (S
          (VP (MD can)
            (NP (PRP you))
            (S
              (VP (VB show)
                (NP (NN blob) (NNS fields))
                (PP
                  (PP (IN as)
                    (NP (NN hexadecimal) (NNS values)))
                  (CONJP (RB instead) (IN of))
                  (PP (IN as) (`` `)
                    (NP (JJ weird))))))))))
    ('' ')
    (NP (NNS characters))))

root(ROOT-0, add-2)
punct(add-2, -LRB--1)
dobj(add-2, an-3)
dep(an-3, option-4)
acl(an-3, to-5)
punct(an-3, -RRB--6)
acl:relcl(an-3, can-7)
dobj(can-7, you-8)
dep(can-7, show-9)
dep(can-7, show-9')
conj:negcc(show-9, show-9')
compound(fields-11, blob-10)
dobj(show-9, fields-11)
case(values-14, as-12)
compound(values-14, hexadecimal-13)
nmod:as(show-9, values-14)
cc(show-9, instead-15)
mwe(instead-15, of-16)
case(weird-19, as-17)
punct(weird-19, `-18)
nmod:as(show-9', weird-19)
punct(add-2, '-20)
dobj(add-2, characters-21)


==============Pipeline Pretty Print==============
Sentence #1 (19 tokens, sentiment: Neutral):
(add an option to show blob fields as hexadecimal values instead of as 'weird' characters)
[Text=-LRB- CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=-LRB- Lemma=-lrb- NamedEntityTag=O SentimentClass=Neutral]
[Text=add CharacterOffsetBegin=1 CharacterOffsetEnd=4 PartOfSpeech=VB Lemma=add NamedEntityTag=O SentimentClass=Positive]
[Text=an CharacterOffsetBegin=5 CharacterOffsetEnd=7 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=option CharacterOffsetBegin=8 CharacterOffsetEnd=14 PartOfSpeech=NN Lemma=option NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=15 CharacterOffsetEnd=17 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=show CharacterOffsetBegin=18 CharacterOffsetEnd=22 PartOfSpeech=VB Lemma=show NamedEntityTag=O SentimentClass=Neutral]
[Text=blob CharacterOffsetBegin=23 CharacterOffsetEnd=27 PartOfSpeech=NN Lemma=blob NamedEntityTag=O SentimentClass=Neutral]
[Text=fields CharacterOffsetBegin=28 CharacterOffsetEnd=34 PartOfSpeech=NNS Lemma=field NamedEntityTag=O SentimentClass=Neutral]
[Text=as CharacterOffsetBegin=35 CharacterOffsetEnd=37 PartOfSpeech=IN Lemma=as NamedEntityTag=O SentimentClass=Neutral]
[Text=hexadecimal CharacterOffsetBegin=38 CharacterOffsetEnd=49 PartOfSpeech=NN Lemma=hexadecimal NamedEntityTag=O SentimentClass=Neutral]
[Text=values CharacterOffsetBegin=50 CharacterOffsetEnd=56 PartOfSpeech=NNS Lemma=value NamedEntityTag=O SentimentClass=Neutral]
[Text=instead CharacterOffsetBegin=57 CharacterOffsetEnd=64 PartOfSpeech=RB Lemma=instead NamedEntityTag=O SentimentClass=Neutral]
[Text=of CharacterOffsetBegin=65 CharacterOffsetEnd=67 PartOfSpeech=IN Lemma=of NamedEntityTag=O SentimentClass=Neutral]
[Text=as CharacterOffsetBegin=68 CharacterOffsetEnd=70 PartOfSpeech=IN Lemma=as NamedEntityTag=O SentimentClass=Neutral]
[Text=` CharacterOffsetBegin=71 CharacterOffsetEnd=72 PartOfSpeech=`` Lemma=` NamedEntityTag=O SentimentClass=Neutral]
[Text=weird CharacterOffsetBegin=72 CharacterOffsetEnd=77 PartOfSpeech=JJ Lemma=weird NamedEntityTag=O SentimentClass=Negative]
[Text=' CharacterOffsetBegin=77 CharacterOffsetEnd=78 PartOfSpeech='' Lemma=' NamedEntityTag=O SentimentClass=Neutral]
[Text=characters CharacterOffsetBegin=79 CharacterOffsetEnd=89 PartOfSpeech=NNS Lemma=character NamedEntityTag=O SentimentClass=Neutral]
[Text=-RRB- CharacterOffsetBegin=89 CharacterOffsetEnd=90 PartOfSpeech=-RRB- Lemma=-rrb- NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (PRN (-LRB- -LRB-)
    (S
      (VP (VB add)
        (NP (DT an) (NN option)
          (S
            (VP (TO to)
              (VP (VB show)
                (NP (NN blob) (NNS fields))
                (PP
                  (PP (IN as)
                    (NP (NN hexadecimal) (NNS values)))
                  (CONJP (RB instead) (IN of))
                  (PP (IN as)
                    (NP (`` `) (JJ weird) ('' ') (NNS characters))))))))))
    (-RRB- -RRB-)))

root(ROOT-0, add-2)
punct(add-2, -LRB--1)
det(option-4, an-3)
dobj(add-2, option-4)
mark(show-6, to-5)
acl:to(option-4, show-6)
acl:to(option-4, show-6')
conj:negcc(show-6, show-6')
compound(fields-8, blob-7)
dobj(show-6, fields-8)
case(values-11, as-9)
compound(values-11, hexadecimal-10)
nmod:as(show-6, values-11)
cc(show-6, instead-12)
mwe(instead-12, of-13)
case(characters-18, as-14)
punct(characters-18, `-15)
amod(characters-18, weird-16)
punct(characters-18, '-17)
nmod:as(show-6', characters-18)
punct(add-2, -RRB--19)


==============Pipeline Pretty Print==============
Sentence #1 (7 tokens, sentiment: Neutral):
Mopidy needs support combining multiple config files
[Text=Mopidy CharacterOffsetBegin=0 CharacterOffsetEnd=6 PartOfSpeech=NNP Lemma=Mopidy NamedEntityTag=O SentimentClass=Neutral]
[Text=needs CharacterOffsetBegin=7 CharacterOffsetEnd=12 PartOfSpeech=VBZ Lemma=need NamedEntityTag=O SentimentClass=Neutral]
[Text=support CharacterOffsetBegin=13 CharacterOffsetEnd=20 PartOfSpeech=NN Lemma=support NamedEntityTag=O SentimentClass=Neutral]
[Text=combining CharacterOffsetBegin=21 CharacterOffsetEnd=30 PartOfSpeech=VBG Lemma=combine NamedEntityTag=O SentimentClass=Neutral]
[Text=multiple CharacterOffsetBegin=31 CharacterOffsetEnd=39 PartOfSpeech=JJ Lemma=multiple NamedEntityTag=O SentimentClass=Neutral]
[Text=config CharacterOffsetBegin=40 CharacterOffsetEnd=46 PartOfSpeech=NN Lemma=config NamedEntityTag=O SentimentClass=Neutral]
[Text=files CharacterOffsetBegin=47 CharacterOffsetEnd=52 PartOfSpeech=NNS Lemma=file NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (NNP Mopidy))
    (VP (VBZ needs)
      (NP
        (NP (NN support))
        (VP (VBG combining)
          (NP (JJ multiple) (NN config) (NNS files)))))))

root(ROOT-0, needs-2)
nsubj(needs-2, Mopidy-1)
dobj(needs-2, support-3)
acl(support-3, combining-4)
amod(files-7, multiple-5)
compound(files-7, config-6)
dobj(combining-4, files-7)


==============Pipeline Pretty Print==============
Sentence #1 (7 tokens, sentiment: Neutral):
<SYS-NAME> needs support combining multiple config files
[Text=<SYS-NAME> CharacterOffsetBegin=0 CharacterOffsetEnd=10 PartOfSpeech=NN Lemma=<sys-name> NamedEntityTag=O SentimentClass=Neutral]
[Text=needs CharacterOffsetBegin=11 CharacterOffsetEnd=16 PartOfSpeech=VBZ Lemma=need NamedEntityTag=O SentimentClass=Neutral]
[Text=support CharacterOffsetBegin=17 CharacterOffsetEnd=24 PartOfSpeech=NN Lemma=support NamedEntityTag=O SentimentClass=Neutral]
[Text=combining CharacterOffsetBegin=25 CharacterOffsetEnd=34 PartOfSpeech=VBG Lemma=combine NamedEntityTag=O SentimentClass=Neutral]
[Text=multiple CharacterOffsetBegin=35 CharacterOffsetEnd=43 PartOfSpeech=JJ Lemma=multiple NamedEntityTag=O SentimentClass=Neutral]
[Text=config CharacterOffsetBegin=44 CharacterOffsetEnd=50 PartOfSpeech=NN Lemma=config NamedEntityTag=O SentimentClass=Neutral]
[Text=files CharacterOffsetBegin=51 CharacterOffsetEnd=56 PartOfSpeech=NNS Lemma=file NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (NN <SYS-NAME>))
    (VP (VBZ needs)
      (NP
        (NP (NN support))
        (VP (VBG combining)
          (NP (JJ multiple) (NN config) (NNS files)))))))

root(ROOT-0, needs-2)
nsubj(needs-2, <SYS-NAME>-1)
dobj(needs-2, support-3)
acl(support-3, combining-4)
amod(files-7, multiple-5)
compound(files-7, config-6)
dobj(combining-4, files-7)


==============Pipeline Pretty Print==============
Sentence #1 (7 tokens, sentiment: Neutral):
Mopidy needs support combining multiple config files
[Text=Mopidy CharacterOffsetBegin=0 CharacterOffsetEnd=6 PartOfSpeech=NNP Lemma=Mopidy NamedEntityTag=O SentimentClass=Neutral]
[Text=needs CharacterOffsetBegin=7 CharacterOffsetEnd=12 PartOfSpeech=VBZ Lemma=need NamedEntityTag=O SentimentClass=Neutral]
[Text=support CharacterOffsetBegin=13 CharacterOffsetEnd=20 PartOfSpeech=NN Lemma=support NamedEntityTag=O SentimentClass=Neutral]
[Text=combining CharacterOffsetBegin=21 CharacterOffsetEnd=30 PartOfSpeech=VBG Lemma=combine NamedEntityTag=O SentimentClass=Neutral]
[Text=multiple CharacterOffsetBegin=31 CharacterOffsetEnd=39 PartOfSpeech=JJ Lemma=multiple NamedEntityTag=O SentimentClass=Neutral]
[Text=config CharacterOffsetBegin=40 CharacterOffsetEnd=46 PartOfSpeech=NN Lemma=config NamedEntityTag=O SentimentClass=Neutral]
[Text=files CharacterOffsetBegin=47 CharacterOffsetEnd=52 PartOfSpeech=NNS Lemma=file NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (NNP Mopidy))
    (VP (VBZ needs)
      (NP
        (NP (NN support))
        (VP (VBG combining)
          (NP (JJ multiple) (NN config) (NNS files)))))))

root(ROOT-0, needs-2)
nsubj(needs-2, Mopidy-1)
dobj(needs-2, support-3)
acl(support-3, combining-4)
amod(files-7, multiple-5)
compound(files-7, config-6)
dobj(combining-4, files-7)


==============Pipeline Pretty Print==============
Sentence #1 (7 tokens, sentiment: Neutral):
Mopidy needs support combining multiple config files
[Text=Mopidy CharacterOffsetBegin=0 CharacterOffsetEnd=6 PartOfSpeech=NNP Lemma=Mopidy NamedEntityTag=O SentimentClass=Neutral]
[Text=needs CharacterOffsetBegin=7 CharacterOffsetEnd=12 PartOfSpeech=VBZ Lemma=need NamedEntityTag=O SentimentClass=Neutral]
[Text=support CharacterOffsetBegin=13 CharacterOffsetEnd=20 PartOfSpeech=NN Lemma=support NamedEntityTag=O SentimentClass=Neutral]
[Text=combining CharacterOffsetBegin=21 CharacterOffsetEnd=30 PartOfSpeech=VBG Lemma=combine NamedEntityTag=O SentimentClass=Neutral]
[Text=multiple CharacterOffsetBegin=31 CharacterOffsetEnd=39 PartOfSpeech=JJ Lemma=multiple NamedEntityTag=O SentimentClass=Neutral]
[Text=config CharacterOffsetBegin=40 CharacterOffsetEnd=46 PartOfSpeech=NN Lemma=config NamedEntityTag=O SentimentClass=Neutral]
[Text=files CharacterOffsetBegin=47 CharacterOffsetEnd=52 PartOfSpeech=NNS Lemma=file NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (NNP Mopidy))
    (VP (VBZ needs)
      (NP
        (NP (NN support))
        (VP (VBG combining)
          (NP (JJ multiple) (NN config) (NNS files)))))))

root(ROOT-0, needs-2)
nsubj(needs-2, Mopidy-1)
dobj(needs-2, support-3)
acl(support-3, combining-4)
amod(files-7, multiple-5)
compound(files-7, config-6)
dobj(combining-4, files-7)


==============Pipeline Pretty Print==============
Sentence #1 (7 tokens, sentiment: Neutral):
Mopidy needs support combining multiple config files
[Text=Mopidy CharacterOffsetBegin=0 CharacterOffsetEnd=6 PartOfSpeech=NNP Lemma=Mopidy NamedEntityTag=O SentimentClass=Neutral]
[Text=needs CharacterOffsetBegin=7 CharacterOffsetEnd=12 PartOfSpeech=VBZ Lemma=need NamedEntityTag=O SentimentClass=Neutral]
[Text=support CharacterOffsetBegin=13 CharacterOffsetEnd=20 PartOfSpeech=NN Lemma=support NamedEntityTag=O SentimentClass=Neutral]
[Text=combining CharacterOffsetBegin=21 CharacterOffsetEnd=30 PartOfSpeech=VBG Lemma=combine NamedEntityTag=O SentimentClass=Neutral]
[Text=multiple CharacterOffsetBegin=31 CharacterOffsetEnd=39 PartOfSpeech=JJ Lemma=multiple NamedEntityTag=O SentimentClass=Neutral]
[Text=config CharacterOffsetBegin=40 CharacterOffsetEnd=46 PartOfSpeech=NN Lemma=config NamedEntityTag=O SentimentClass=Neutral]
[Text=files CharacterOffsetBegin=47 CharacterOffsetEnd=52 PartOfSpeech=NNS Lemma=file NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (NNP Mopidy))
    (VP (VBZ needs)
      (NP
        (NP (NN support))
        (VP (VBG combining)
          (NP (JJ multiple) (NN config) (NNS files)))))))

root(ROOT-0, needs-2)
nsubj(needs-2, Mopidy-1)
dobj(needs-2, support-3)
acl(support-3, combining-4)
amod(files-7, multiple-5)
compound(files-7, config-6)
dobj(combining-4, files-7)


==============Pipeline Pretty Print==============
Sentence #1 (7 tokens, sentiment: Neutral):
Mopidy should support combining multiple config files
[Text=Mopidy CharacterOffsetBegin=0 CharacterOffsetEnd=6 PartOfSpeech=NNP Lemma=Mopidy NamedEntityTag=O SentimentClass=Neutral]
[Text=should CharacterOffsetBegin=7 CharacterOffsetEnd=13 PartOfSpeech=MD Lemma=should NamedEntityTag=O SentimentClass=Neutral]
[Text=support CharacterOffsetBegin=14 CharacterOffsetEnd=21 PartOfSpeech=VB Lemma=support NamedEntityTag=O SentimentClass=Neutral]
[Text=combining CharacterOffsetBegin=22 CharacterOffsetEnd=31 PartOfSpeech=VBG Lemma=combine NamedEntityTag=O SentimentClass=Neutral]
[Text=multiple CharacterOffsetBegin=32 CharacterOffsetEnd=40 PartOfSpeech=JJ Lemma=multiple NamedEntityTag=O SentimentClass=Neutral]
[Text=config CharacterOffsetBegin=41 CharacterOffsetEnd=47 PartOfSpeech=NN Lemma=config NamedEntityTag=O SentimentClass=Neutral]
[Text=files CharacterOffsetBegin=48 CharacterOffsetEnd=53 PartOfSpeech=NNS Lemma=file NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (NNP Mopidy))
    (VP (MD should)
      (VP (VB support)
        (S
          (VP (VBG combining)
            (NP (JJ multiple) (NN config) (NNS files))))))))

root(ROOT-0, support-3)
nsubj(support-3, Mopidy-1)
aux(support-3, should-2)
xcomp(support-3, combining-4)
amod(files-7, multiple-5)
compound(files-7, config-6)
dobj(combining-4, files-7)


==============Pipeline Pretty Print==============
Sentence #1 (7 tokens, sentiment: Neutral):
Mopidy should support combining multiple config files
[Text=Mopidy CharacterOffsetBegin=0 CharacterOffsetEnd=6 PartOfSpeech=NNP Lemma=Mopidy NamedEntityTag=O SentimentClass=Neutral]
[Text=should CharacterOffsetBegin=7 CharacterOffsetEnd=13 PartOfSpeech=MD Lemma=should NamedEntityTag=O SentimentClass=Neutral]
[Text=support CharacterOffsetBegin=14 CharacterOffsetEnd=21 PartOfSpeech=VB Lemma=support NamedEntityTag=O SentimentClass=Neutral]
[Text=combining CharacterOffsetBegin=22 CharacterOffsetEnd=31 PartOfSpeech=VBG Lemma=combine NamedEntityTag=O SentimentClass=Neutral]
[Text=multiple CharacterOffsetBegin=32 CharacterOffsetEnd=40 PartOfSpeech=JJ Lemma=multiple NamedEntityTag=O SentimentClass=Neutral]
[Text=config CharacterOffsetBegin=41 CharacterOffsetEnd=47 PartOfSpeech=NN Lemma=config NamedEntityTag=O SentimentClass=Neutral]
[Text=files CharacterOffsetBegin=48 CharacterOffsetEnd=53 PartOfSpeech=NNS Lemma=file NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (NNP Mopidy))
    (VP (MD should)
      (VP (VB support)
        (S
          (VP (VBG combining)
            (NP (JJ multiple) (NN config) (NNS files))))))))

root(ROOT-0, support-3)
nsubj(support-3, Mopidy-1)
aux(support-3, should-2)
xcomp(support-3, combining-4)
amod(files-7, multiple-5)
compound(files-7, config-6)
dobj(combining-4, files-7)


==============Pipeline Pretty Print==============
Sentence #1 (34 tokens, sentiment: Negative):
It would be really neat if we could auto-generate a playlist having all the tracks added within the last X days - and label this playlist "New music" or something like it
[Text=It CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=would CharacterOffsetBegin=3 CharacterOffsetEnd=8 PartOfSpeech=MD Lemma=would NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=9 CharacterOffsetEnd=11 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=really CharacterOffsetBegin=12 CharacterOffsetEnd=18 PartOfSpeech=RB Lemma=really NamedEntityTag=O SentimentClass=Neutral]
[Text=neat CharacterOffsetBegin=19 CharacterOffsetEnd=23 PartOfSpeech=JJ Lemma=neat NamedEntityTag=O SentimentClass=Positive]
[Text=if CharacterOffsetBegin=24 CharacterOffsetEnd=26 PartOfSpeech=IN Lemma=if NamedEntityTag=O SentimentClass=Neutral]
[Text=we CharacterOffsetBegin=27 CharacterOffsetEnd=29 PartOfSpeech=PRP Lemma=we NamedEntityTag=O SentimentClass=Neutral]
[Text=could CharacterOffsetBegin=30 CharacterOffsetEnd=35 PartOfSpeech=MD Lemma=could NamedEntityTag=O SentimentClass=Neutral]
[Text=auto-generate CharacterOffsetBegin=36 CharacterOffsetEnd=49 PartOfSpeech=VB Lemma=auto-generate NamedEntityTag=O SentimentClass=Neutral]
[Text=a CharacterOffsetBegin=50 CharacterOffsetEnd=51 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=playlist CharacterOffsetBegin=52 CharacterOffsetEnd=60 PartOfSpeech=NN Lemma=playlist NamedEntityTag=O SentimentClass=Neutral]
[Text=having CharacterOffsetBegin=61 CharacterOffsetEnd=67 PartOfSpeech=VBG Lemma=have NamedEntityTag=O SentimentClass=Neutral]
[Text=all CharacterOffsetBegin=68 CharacterOffsetEnd=71 PartOfSpeech=PDT Lemma=all NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=72 CharacterOffsetEnd=75 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=tracks CharacterOffsetBegin=76 CharacterOffsetEnd=82 PartOfSpeech=NNS Lemma=track NamedEntityTag=O SentimentClass=Neutral]
[Text=added CharacterOffsetBegin=83 CharacterOffsetEnd=88 PartOfSpeech=VBD Lemma=add NamedEntityTag=O SentimentClass=Neutral]
[Text=within CharacterOffsetBegin=89 CharacterOffsetEnd=95 PartOfSpeech=IN Lemma=within NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=96 CharacterOffsetEnd=99 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=last CharacterOffsetBegin=100 CharacterOffsetEnd=104 PartOfSpeech=JJ Lemma=last NamedEntityTag=O SentimentClass=Neutral]
[Text=X CharacterOffsetBegin=105 CharacterOffsetEnd=106 PartOfSpeech=NN Lemma=x NamedEntityTag=O SentimentClass=Neutral]
[Text=days CharacterOffsetBegin=107 CharacterOffsetEnd=111 PartOfSpeech=NNS Lemma=day NamedEntityTag=O SentimentClass=Neutral]
[Text=- CharacterOffsetBegin=112 CharacterOffsetEnd=113 PartOfSpeech=: Lemma=- NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=114 CharacterOffsetEnd=117 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=label CharacterOffsetBegin=118 CharacterOffsetEnd=123 PartOfSpeech=VB Lemma=label NamedEntityTag=O SentimentClass=Neutral]
[Text=this CharacterOffsetBegin=124 CharacterOffsetEnd=128 PartOfSpeech=DT Lemma=this NamedEntityTag=O SentimentClass=Neutral]
[Text=playlist CharacterOffsetBegin=129 CharacterOffsetEnd=137 PartOfSpeech=NN Lemma=playlist NamedEntityTag=O SentimentClass=Neutral]
[Text=`` CharacterOffsetBegin=138 CharacterOffsetEnd=139 PartOfSpeech=`` Lemma=`` NamedEntityTag=O SentimentClass=Neutral]
[Text=New CharacterOffsetBegin=139 CharacterOffsetEnd=142 PartOfSpeech=NNP Lemma=New NamedEntityTag=O SentimentClass=Positive]
[Text=music CharacterOffsetBegin=143 CharacterOffsetEnd=148 PartOfSpeech=NN Lemma=music NamedEntityTag=O SentimentClass=Neutral]
[Text='' CharacterOffsetBegin=148 CharacterOffsetEnd=149 PartOfSpeech='' Lemma='' NamedEntityTag=O SentimentClass=Neutral]
[Text=or CharacterOffsetBegin=150 CharacterOffsetEnd=152 PartOfSpeech=CC Lemma=or NamedEntityTag=O SentimentClass=Neutral]
[Text=something CharacterOffsetBegin=153 CharacterOffsetEnd=162 PartOfSpeech=NN Lemma=something NamedEntityTag=O SentimentClass=Neutral]
[Text=like CharacterOffsetBegin=163 CharacterOffsetEnd=167 PartOfSpeech=IN Lemma=like NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=168 CharacterOffsetEnd=170 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB be)
        (ADJP (RB really) (JJ neat))
        (SBAR (IN if)
          (S
            (NP (PRP we))
            (VP (MD could)
              (VP
                (VP (VB auto-generate)
                  (NP (DT a) (NN playlist))
                  (S
                    (VP (VBG having)
                      (S
                        (NP (PDT all) (DT the) (NNS tracks))
                        (VP (VBD added)
                          (PP (IN within)
                            (NP (DT the) (JJ last) (NN X) (NNS days))))))))
                (: -)
                (CC and)
                (VP
                  (VP (VB label)
                    (NP (DT this) (NN playlist) (`` ``) (NNP New) (NN music) ('' '')))
                  (CC or)
                  (VP
                    (NP (NN something))
                    (PP (IN like)
                      (NP (PRP it)))))))))))))

root(ROOT-0, neat-5)
nsubj(neat-5, It-1)
aux(neat-5, would-2)
cop(neat-5, be-3)
advmod(neat-5, really-4)
mark(auto-generate-9, if-6)
nsubj(auto-generate-9, we-7)
nsubj(label-24, we-7)
aux(auto-generate-9, could-8)
advcl:if(neat-5, auto-generate-9)
det(playlist-11, a-10)
dobj(auto-generate-9, playlist-11)
xcomp(auto-generate-9, having-12)
det:predet(tracks-15, all-13)
det(tracks-15, the-14)
nsubj(added-16, tracks-15)
ccomp(having-12, added-16)
case(days-21, within-17)
det(days-21, the-18)
amod(days-21, last-19)
compound(days-21, X-20)
nmod:within(added-16, days-21)
punct(auto-generate-9, --22)
cc(auto-generate-9, and-23)
advcl:if(neat-5, label-24)
conj:and(auto-generate-9, label-24)
det(music-29, this-25)
compound(music-29, playlist-26)
punct(music-29, ``-27)
compound(music-29, New-28)
dobj(label-24, music-29)
punct(music-29, ''-30)
cc(label-24, or-31)
conj:and(auto-generate-9, something-32)
conj:or(label-24, something-32)
case(it-34, like-33)
nmod:like(something-32, it-34)

Coreference set:
	(1,34,[34,35]) -> (1,11,[10,12]), that is: "it" -> "a playlist"

==============Pipeline Pretty Print==============
Sentence #1 (7 tokens, sentiment: Negative):
Expand broker support to include JMS 2.0
[Text=Expand CharacterOffsetBegin=0 CharacterOffsetEnd=6 PartOfSpeech=VB Lemma=expand NamedEntityTag=O SentimentClass=Neutral]
[Text=broker CharacterOffsetBegin=7 CharacterOffsetEnd=13 PartOfSpeech=NN Lemma=broker NamedEntityTag=O SentimentClass=Neutral]
[Text=support CharacterOffsetBegin=14 CharacterOffsetEnd=21 PartOfSpeech=NN Lemma=support NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=22 CharacterOffsetEnd=24 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=include CharacterOffsetBegin=25 CharacterOffsetEnd=32 PartOfSpeech=VB Lemma=include NamedEntityTag=O SentimentClass=Neutral]
[Text=JMS CharacterOffsetBegin=33 CharacterOffsetEnd=36 PartOfSpeech=NNP Lemma=JMS NamedEntityTag=ORGANIZATION SentimentClass=Neutral]
[Text=2.0 CharacterOffsetBegin=37 CharacterOffsetEnd=40 PartOfSpeech=CD Lemma=2.0 NamedEntityTag=NUMBER NormalizedNamedEntityTag=2.0 SentimentClass=Neutral]
(ROOT
  (S
    (VP (VB Expand)
      (S
        (NP (NN broker) (NN support))
        (VP (TO to)
          (VP (VB include)
            (NP (NNP JMS) (CD 2.0))))))))

root(ROOT-0, Expand-1)
compound(support-3, broker-2)
dobj(Expand-1, support-3)
nsubj:xsubj(include-5, support-3)
mark(include-5, to-4)
xcomp(Expand-1, include-5)
dobj(include-5, JMS-6)
nummod(JMS-6, 2.0-7)


==============Pipeline Pretty Print==============
Sentence #1 (7 tokens, sentiment: Neutral):
Expand broker support to include JMS 2
[Text=Expand CharacterOffsetBegin=0 CharacterOffsetEnd=6 PartOfSpeech=VB Lemma=expand NamedEntityTag=O SentimentClass=Neutral]
[Text=broker CharacterOffsetBegin=7 CharacterOffsetEnd=13 PartOfSpeech=NN Lemma=broker NamedEntityTag=O SentimentClass=Neutral]
[Text=support CharacterOffsetBegin=14 CharacterOffsetEnd=21 PartOfSpeech=NN Lemma=support NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=22 CharacterOffsetEnd=24 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=include CharacterOffsetBegin=25 CharacterOffsetEnd=32 PartOfSpeech=VB Lemma=include NamedEntityTag=O SentimentClass=Neutral]
[Text=JMS CharacterOffsetBegin=33 CharacterOffsetEnd=36 PartOfSpeech=NNP Lemma=JMS NamedEntityTag=ORGANIZATION SentimentClass=Neutral]
[Text=2 CharacterOffsetBegin=37 CharacterOffsetEnd=38 PartOfSpeech=CD Lemma=2 NamedEntityTag=NUMBER NormalizedNamedEntityTag=2.0 SentimentClass=Neutral]
(ROOT
  (S
    (VP (VB Expand)
      (S
        (NP (NN broker) (NN support))
        (VP (TO to)
          (VP (VB include)
            (NP (NNP JMS) (CD 2))))))))

root(ROOT-0, Expand-1)
compound(support-3, broker-2)
dobj(Expand-1, support-3)
nsubj:xsubj(include-5, support-3)
mark(include-5, to-4)
xcomp(Expand-1, include-5)
dobj(include-5, JMS-6)
nummod(JMS-6, 2-7)


==============Pipeline Pretty Print==============
Sentence #1 (8 tokens, sentiment: Neutral):
Expand broker support to include JMS 2.
[Text=Expand CharacterOffsetBegin=0 CharacterOffsetEnd=6 PartOfSpeech=VB Lemma=expand NamedEntityTag=O SentimentClass=Neutral]
[Text=broker CharacterOffsetBegin=7 CharacterOffsetEnd=13 PartOfSpeech=NN Lemma=broker NamedEntityTag=O SentimentClass=Neutral]
[Text=support CharacterOffsetBegin=14 CharacterOffsetEnd=21 PartOfSpeech=NN Lemma=support NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=22 CharacterOffsetEnd=24 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=include CharacterOffsetBegin=25 CharacterOffsetEnd=32 PartOfSpeech=VB Lemma=include NamedEntityTag=O SentimentClass=Neutral]
[Text=JMS CharacterOffsetBegin=33 CharacterOffsetEnd=36 PartOfSpeech=NNP Lemma=JMS NamedEntityTag=ORGANIZATION SentimentClass=Neutral]
[Text=2 CharacterOffsetBegin=37 CharacterOffsetEnd=38 PartOfSpeech=CD Lemma=2 NamedEntityTag=NUMBER NormalizedNamedEntityTag=2.0 SentimentClass=Neutral]
[Text=. CharacterOffsetBegin=38 CharacterOffsetEnd=39 PartOfSpeech=. Lemma=. NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (VP (VB Expand)
      (S
        (NP (NN broker) (NN support))
        (VP (TO to)
          (VP (VB include)
            (NP (NNP JMS) (CD 2))))))
    (. .)))

root(ROOT-0, Expand-1)
compound(support-3, broker-2)
dobj(Expand-1, support-3)
nsubj:xsubj(include-5, support-3)
mark(include-5, to-4)
xcomp(Expand-1, include-5)
dobj(include-5, JMS-6)
nummod(JMS-6, 2-7)
punct(Expand-1, .-8)


==============Pipeline Pretty Print==============
Sentence #1 (8 tokens, sentiment: Negative):
Expand broker to support to include JMS 2.0
[Text=Expand CharacterOffsetBegin=0 CharacterOffsetEnd=6 PartOfSpeech=VB Lemma=expand NamedEntityTag=O SentimentClass=Neutral]
[Text=broker CharacterOffsetBegin=7 CharacterOffsetEnd=13 PartOfSpeech=NN Lemma=broker NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=14 CharacterOffsetEnd=16 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=support CharacterOffsetBegin=17 CharacterOffsetEnd=24 PartOfSpeech=VB Lemma=support NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=25 CharacterOffsetEnd=27 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=include CharacterOffsetBegin=28 CharacterOffsetEnd=35 PartOfSpeech=VB Lemma=include NamedEntityTag=O SentimentClass=Neutral]
[Text=JMS CharacterOffsetBegin=36 CharacterOffsetEnd=39 PartOfSpeech=NNP Lemma=JMS NamedEntityTag=ORGANIZATION SentimentClass=Neutral]
[Text=2.0 CharacterOffsetBegin=40 CharacterOffsetEnd=43 PartOfSpeech=CD Lemma=2.0 NamedEntityTag=NUMBER NormalizedNamedEntityTag=2.0 SentimentClass=Neutral]
(ROOT
  (S
    (VP (VB Expand)
      (NP (NN broker))
      (S
        (VP (TO to)
          (VP (VB support)
            (S
              (VP (TO to)
                (VP (VB include)
                  (NP (NNP JMS) (CD 2.0)))))))))))

root(ROOT-0, Expand-1)
dobj(Expand-1, broker-2)
mark(support-4, to-3)
advcl:to(Expand-1, support-4)
mark(include-6, to-5)
xcomp(support-4, include-6)
dobj(include-6, JMS-7)
nummod(JMS-7, 2.0-8)


==============Pipeline Pretty Print==============
Sentence #1 (8 tokens, sentiment: Neutral):
Expand the broker support to include JMS 2.0
[Text=Expand CharacterOffsetBegin=0 CharacterOffsetEnd=6 PartOfSpeech=VB Lemma=expand NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=7 CharacterOffsetEnd=10 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=broker CharacterOffsetBegin=11 CharacterOffsetEnd=17 PartOfSpeech=NN Lemma=broker NamedEntityTag=O SentimentClass=Neutral]
[Text=support CharacterOffsetBegin=18 CharacterOffsetEnd=25 PartOfSpeech=NN Lemma=support NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=26 CharacterOffsetEnd=28 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=include CharacterOffsetBegin=29 CharacterOffsetEnd=36 PartOfSpeech=VB Lemma=include NamedEntityTag=O SentimentClass=Neutral]
[Text=JMS CharacterOffsetBegin=37 CharacterOffsetEnd=40 PartOfSpeech=NNP Lemma=JMS NamedEntityTag=ORGANIZATION SentimentClass=Neutral]
[Text=2.0 CharacterOffsetBegin=41 CharacterOffsetEnd=44 PartOfSpeech=CD Lemma=2.0 NamedEntityTag=NUMBER NormalizedNamedEntityTag=2.0 SentimentClass=Neutral]
(ROOT
  (S
    (VP (VB Expand)
      (S
        (NP (DT the) (NN broker) (NN support))
        (VP (TO to)
          (VP (VB include)
            (NP (NNP JMS) (CD 2.0))))))))

root(ROOT-0, Expand-1)
det(support-4, the-2)
compound(support-4, broker-3)
dobj(Expand-1, support-4)
nsubj:xsubj(include-6, support-4)
mark(include-6, to-5)
xcomp(Expand-1, include-6)
dobj(include-6, JMS-7)
nummod(JMS-7, 2.0-8)


==============Pipeline Pretty Print==============
Sentence #1 (21 tokens, sentiment: Negative):
It would be really neat if we could auto-generate a playlist having all the tracks added within the last X days
[Text=It CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=would CharacterOffsetBegin=3 CharacterOffsetEnd=8 PartOfSpeech=MD Lemma=would NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=9 CharacterOffsetEnd=11 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=really CharacterOffsetBegin=12 CharacterOffsetEnd=18 PartOfSpeech=RB Lemma=really NamedEntityTag=O SentimentClass=Neutral]
[Text=neat CharacterOffsetBegin=19 CharacterOffsetEnd=23 PartOfSpeech=JJ Lemma=neat NamedEntityTag=O SentimentClass=Positive]
[Text=if CharacterOffsetBegin=24 CharacterOffsetEnd=26 PartOfSpeech=IN Lemma=if NamedEntityTag=O SentimentClass=Neutral]
[Text=we CharacterOffsetBegin=27 CharacterOffsetEnd=29 PartOfSpeech=PRP Lemma=we NamedEntityTag=O SentimentClass=Neutral]
[Text=could CharacterOffsetBegin=30 CharacterOffsetEnd=35 PartOfSpeech=MD Lemma=could NamedEntityTag=O SentimentClass=Neutral]
[Text=auto-generate CharacterOffsetBegin=36 CharacterOffsetEnd=49 PartOfSpeech=VB Lemma=auto-generate NamedEntityTag=O SentimentClass=Neutral]
[Text=a CharacterOffsetBegin=50 CharacterOffsetEnd=51 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=playlist CharacterOffsetBegin=52 CharacterOffsetEnd=60 PartOfSpeech=NN Lemma=playlist NamedEntityTag=O SentimentClass=Neutral]
[Text=having CharacterOffsetBegin=61 CharacterOffsetEnd=67 PartOfSpeech=VBG Lemma=have NamedEntityTag=O SentimentClass=Neutral]
[Text=all CharacterOffsetBegin=68 CharacterOffsetEnd=71 PartOfSpeech=PDT Lemma=all NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=72 CharacterOffsetEnd=75 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=tracks CharacterOffsetBegin=76 CharacterOffsetEnd=82 PartOfSpeech=NNS Lemma=track NamedEntityTag=O SentimentClass=Neutral]
[Text=added CharacterOffsetBegin=83 CharacterOffsetEnd=88 PartOfSpeech=VBD Lemma=add NamedEntityTag=O SentimentClass=Neutral]
[Text=within CharacterOffsetBegin=89 CharacterOffsetEnd=95 PartOfSpeech=IN Lemma=within NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=96 CharacterOffsetEnd=99 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=last CharacterOffsetBegin=100 CharacterOffsetEnd=104 PartOfSpeech=JJ Lemma=last NamedEntityTag=O SentimentClass=Neutral]
[Text=X CharacterOffsetBegin=105 CharacterOffsetEnd=106 PartOfSpeech=NN Lemma=x NamedEntityTag=O SentimentClass=Neutral]
[Text=days CharacterOffsetBegin=107 CharacterOffsetEnd=111 PartOfSpeech=NNS Lemma=day NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB be)
        (ADJP (RB really) (JJ neat))
        (SBAR (IN if)
          (S
            (NP (PRP we))
            (VP (MD could)
              (VP (VB auto-generate)
                (NP (DT a) (NN playlist))
                (S
                  (VP (VBG having)
                    (S
                      (NP (PDT all) (DT the) (NNS tracks))
                      (VP (VBD added)
                        (PP (IN within)
                          (NP (DT the) (JJ last) (NN X) (NNS days)))))))))))))))

root(ROOT-0, neat-5)
nsubj(neat-5, It-1)
aux(neat-5, would-2)
cop(neat-5, be-3)
advmod(neat-5, really-4)
mark(auto-generate-9, if-6)
nsubj(auto-generate-9, we-7)
aux(auto-generate-9, could-8)
advcl:if(neat-5, auto-generate-9)
det(playlist-11, a-10)
dobj(auto-generate-9, playlist-11)
xcomp(auto-generate-9, having-12)
det:predet(tracks-15, all-13)
det(tracks-15, the-14)
nsubj(added-16, tracks-15)
ccomp(having-12, added-16)
case(days-21, within-17)
det(days-21, the-18)
amod(days-21, last-19)
compound(days-21, X-20)
nmod:within(added-16, days-21)


==============Pipeline Pretty Print==============
Sentence #1 (16 tokens, sentiment: Neutral):
I was able to verify that it parsed and set an option correctly in the debugger
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=was CharacterOffsetBegin=2 CharacterOffsetEnd=5 PartOfSpeech=VBD Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=able CharacterOffsetBegin=6 CharacterOffsetEnd=10 PartOfSpeech=JJ Lemma=able NamedEntityTag=O SentimentClass=Positive]
[Text=to CharacterOffsetBegin=11 CharacterOffsetEnd=13 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=verify CharacterOffsetBegin=14 CharacterOffsetEnd=20 PartOfSpeech=VB Lemma=verify NamedEntityTag=O SentimentClass=Neutral]
[Text=that CharacterOffsetBegin=21 CharacterOffsetEnd=25 PartOfSpeech=IN Lemma=that NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=26 CharacterOffsetEnd=28 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=parsed CharacterOffsetBegin=29 CharacterOffsetEnd=35 PartOfSpeech=VBD Lemma=parse NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=36 CharacterOffsetEnd=39 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=set CharacterOffsetBegin=40 CharacterOffsetEnd=43 PartOfSpeech=VBD Lemma=set NamedEntityTag=O SentimentClass=Neutral]
[Text=an CharacterOffsetBegin=44 CharacterOffsetEnd=46 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=option CharacterOffsetBegin=47 CharacterOffsetEnd=53 PartOfSpeech=NN Lemma=option NamedEntityTag=O SentimentClass=Neutral]
[Text=correctly CharacterOffsetBegin=54 CharacterOffsetEnd=63 PartOfSpeech=RB Lemma=correctly NamedEntityTag=O SentimentClass=Positive]
[Text=in CharacterOffsetBegin=64 CharacterOffsetEnd=66 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=67 CharacterOffsetEnd=70 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=debugger CharacterOffsetBegin=71 CharacterOffsetEnd=79 PartOfSpeech=NN Lemma=debugger NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP (VB verify)
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (VBD parsed)
                    (CC and)
                    (VBD set)
                    (NP (DT an) (NN option))
                    (ADVP (RB correctly))
                    (PP (IN in)
                      (NP (DT the) (NN debugger)))))))))))))

root(ROOT-0, able-3)
nsubj(able-3, I-1)
nsubj:xsubj(verify-5, I-1)
cop(able-3, was-2)
mark(verify-5, to-4)
xcomp(able-3, verify-5)
mark(parsed-8, that-6)
nsubj(parsed-8, it-7)
nsubj(set-10, it-7)
ccomp(verify-5, parsed-8)
cc(parsed-8, and-9)
ccomp(verify-5, set-10)
conj:and(parsed-8, set-10)
det(option-12, an-11)
dobj(parsed-8, option-12)
advmod(parsed-8, correctly-13)
case(debugger-16, in-14)
det(debugger-16, the-15)
nmod:in(parsed-8, debugger-16)


==============Pipeline Pretty Print==============
Sentence #1 (16 tokens, sentiment: Neutral):
I was able to verify that it parsed and set an option correctly in the debugger
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=was CharacterOffsetBegin=2 CharacterOffsetEnd=5 PartOfSpeech=VBD Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=able CharacterOffsetBegin=6 CharacterOffsetEnd=10 PartOfSpeech=JJ Lemma=able NamedEntityTag=O SentimentClass=Positive]
[Text=to CharacterOffsetBegin=11 CharacterOffsetEnd=13 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=verify CharacterOffsetBegin=14 CharacterOffsetEnd=20 PartOfSpeech=VB Lemma=verify NamedEntityTag=O SentimentClass=Neutral]
[Text=that CharacterOffsetBegin=21 CharacterOffsetEnd=25 PartOfSpeech=IN Lemma=that NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=26 CharacterOffsetEnd=28 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=parsed CharacterOffsetBegin=29 CharacterOffsetEnd=35 PartOfSpeech=VBD Lemma=parse NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=36 CharacterOffsetEnd=39 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=set CharacterOffsetBegin=40 CharacterOffsetEnd=43 PartOfSpeech=VBD Lemma=set NamedEntityTag=O SentimentClass=Neutral]
[Text=an CharacterOffsetBegin=44 CharacterOffsetEnd=46 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=option CharacterOffsetBegin=47 CharacterOffsetEnd=53 PartOfSpeech=NN Lemma=option NamedEntityTag=O SentimentClass=Neutral]
[Text=correctly CharacterOffsetBegin=54 CharacterOffsetEnd=63 PartOfSpeech=RB Lemma=correctly NamedEntityTag=O SentimentClass=Positive]
[Text=in CharacterOffsetBegin=64 CharacterOffsetEnd=66 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=67 CharacterOffsetEnd=70 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=debugger CharacterOffsetBegin=71 CharacterOffsetEnd=79 PartOfSpeech=NN Lemma=debugger NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP (VB verify)
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (VBD parsed)
                    (CC and)
                    (VBD set)
                    (NP (DT an) (NN option))
                    (ADVP (RB correctly))
                    (PP (IN in)
                      (NP (DT the) (NN debugger)))))))))))))

root(ROOT-0, able-3)
nsubj(able-3, I-1)
nsubj:xsubj(verify-5, I-1)
cop(able-3, was-2)
mark(verify-5, to-4)
xcomp(able-3, verify-5)
mark(parsed-8, that-6)
nsubj(parsed-8, it-7)
nsubj(set-10, it-7)
ccomp(verify-5, parsed-8)
cc(parsed-8, and-9)
ccomp(verify-5, set-10)
conj:and(parsed-8, set-10)
det(option-12, an-11)
dobj(parsed-8, option-12)
advmod(parsed-8, correctly-13)
case(debugger-16, in-14)
det(debugger-16, the-15)
nmod:in(parsed-8, debugger-16)


==============Pipeline Pretty Print==============
Sentence #1 (16 tokens, sentiment: Neutral):
I was able to verify that it parsed and set an option correctly in the debugger
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=was CharacterOffsetBegin=2 CharacterOffsetEnd=5 PartOfSpeech=VBD Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=able CharacterOffsetBegin=6 CharacterOffsetEnd=10 PartOfSpeech=JJ Lemma=able NamedEntityTag=O SentimentClass=Positive]
[Text=to CharacterOffsetBegin=11 CharacterOffsetEnd=13 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=verify CharacterOffsetBegin=14 CharacterOffsetEnd=20 PartOfSpeech=VB Lemma=verify NamedEntityTag=O SentimentClass=Neutral]
[Text=that CharacterOffsetBegin=21 CharacterOffsetEnd=25 PartOfSpeech=IN Lemma=that NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=26 CharacterOffsetEnd=28 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=parsed CharacterOffsetBegin=29 CharacterOffsetEnd=35 PartOfSpeech=VBD Lemma=parse NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=36 CharacterOffsetEnd=39 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=set CharacterOffsetBegin=40 CharacterOffsetEnd=43 PartOfSpeech=VBD Lemma=set NamedEntityTag=O SentimentClass=Neutral]
[Text=an CharacterOffsetBegin=44 CharacterOffsetEnd=46 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=option CharacterOffsetBegin=47 CharacterOffsetEnd=53 PartOfSpeech=NN Lemma=option NamedEntityTag=O SentimentClass=Neutral]
[Text=correctly CharacterOffsetBegin=54 CharacterOffsetEnd=63 PartOfSpeech=RB Lemma=correctly NamedEntityTag=O SentimentClass=Positive]
[Text=in CharacterOffsetBegin=64 CharacterOffsetEnd=66 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=67 CharacterOffsetEnd=70 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=debugger CharacterOffsetBegin=71 CharacterOffsetEnd=79 PartOfSpeech=NN Lemma=debugger NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP (VB verify)
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (VBD parsed)
                    (CC and)
                    (VBD set)
                    (NP (DT an) (NN option))
                    (ADVP (RB correctly))
                    (PP (IN in)
                      (NP (DT the) (NN debugger)))))))))))))

root(ROOT-0, able-3)
nsubj(able-3, I-1)
nsubj:xsubj(verify-5, I-1)
cop(able-3, was-2)
mark(verify-5, to-4)
xcomp(able-3, verify-5)
mark(parsed-8, that-6)
nsubj(parsed-8, it-7)
nsubj(set-10, it-7)
ccomp(verify-5, parsed-8)
cc(parsed-8, and-9)
ccomp(verify-5, set-10)
conj:and(parsed-8, set-10)
det(option-12, an-11)
dobj(parsed-8, option-12)
advmod(parsed-8, correctly-13)
case(debugger-16, in-14)
det(debugger-16, the-15)
nmod:in(parsed-8, debugger-16)


==============Pipeline Pretty Print==============
Sentence #1 (6 tokens, sentiment: Positive):
We greatly appreciate your comments!
[Text=We CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=PRP Lemma=we NamedEntityTag=O SentimentClass=Neutral]
[Text=greatly CharacterOffsetBegin=3 CharacterOffsetEnd=10 PartOfSpeech=RB Lemma=greatly NamedEntityTag=O SentimentClass=Positive]
[Text=appreciate CharacterOffsetBegin=11 CharacterOffsetEnd=21 PartOfSpeech=VB Lemma=appreciate NamedEntityTag=O SentimentClass=Positive]
[Text=your CharacterOffsetBegin=22 CharacterOffsetEnd=26 PartOfSpeech=PRP$ Lemma=you NamedEntityTag=O SentimentClass=Neutral]
[Text=comments CharacterOffsetBegin=27 CharacterOffsetEnd=35 PartOfSpeech=NNS Lemma=comment NamedEntityTag=O SentimentClass=Neutral]
[Text=! CharacterOffsetBegin=35 CharacterOffsetEnd=36 PartOfSpeech=. Lemma=! NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP We))
    (ADVP (RB greatly))
    (VP (VB appreciate)
      (NP (PRP$ your) (NNS comments)))
    (. !)))

root(ROOT-0, appreciate-3)
nsubj(appreciate-3, We-1)
advmod(appreciate-3, greatly-2)
nmod:poss(comments-5, your-4)
dobj(appreciate-3, comments-5)
punct(appreciate-3, !-6)


==============Pipeline Pretty Print==============
Sentence #1 (6 tokens, sentiment: Positive):
We greatly appreciate your comments!
[Text=We CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=PRP Lemma=we NamedEntityTag=O SentimentClass=Neutral]
[Text=greatly CharacterOffsetBegin=3 CharacterOffsetEnd=10 PartOfSpeech=RB Lemma=greatly NamedEntityTag=O SentimentClass=Positive]
[Text=appreciate CharacterOffsetBegin=11 CharacterOffsetEnd=21 PartOfSpeech=VB Lemma=appreciate NamedEntityTag=O SentimentClass=Positive]
[Text=your CharacterOffsetBegin=22 CharacterOffsetEnd=26 PartOfSpeech=PRP$ Lemma=you NamedEntityTag=O SentimentClass=Neutral]
[Text=comments CharacterOffsetBegin=27 CharacterOffsetEnd=35 PartOfSpeech=NNS Lemma=comment NamedEntityTag=O SentimentClass=Neutral]
[Text=! CharacterOffsetBegin=35 CharacterOffsetEnd=36 PartOfSpeech=. Lemma=! NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP We))
    (ADVP (RB greatly))
    (VP (VB appreciate)
      (NP (PRP$ your) (NNS comments)))
    (. !)))

root(ROOT-0, appreciate-3)
nsubj(appreciate-3, We-1)
advmod(appreciate-3, greatly-2)
nmod:poss(comments-5, your-4)
dobj(appreciate-3, comments-5)
punct(appreciate-3, !-6)


==============Pipeline Pretty Print==============
Sentence #1 (6 tokens, sentiment: Positive):
We greatly appreciate your comments!
[Text=We CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=PRP Lemma=we NamedEntityTag=O SentimentClass=Neutral]
[Text=greatly CharacterOffsetBegin=3 CharacterOffsetEnd=10 PartOfSpeech=RB Lemma=greatly NamedEntityTag=O SentimentClass=Positive]
[Text=appreciate CharacterOffsetBegin=11 CharacterOffsetEnd=21 PartOfSpeech=VB Lemma=appreciate NamedEntityTag=O SentimentClass=Positive]
[Text=your CharacterOffsetBegin=22 CharacterOffsetEnd=26 PartOfSpeech=PRP$ Lemma=you NamedEntityTag=O SentimentClass=Neutral]
[Text=comments CharacterOffsetBegin=27 CharacterOffsetEnd=35 PartOfSpeech=NNS Lemma=comment NamedEntityTag=O SentimentClass=Neutral]
[Text=! CharacterOffsetBegin=35 CharacterOffsetEnd=36 PartOfSpeech=. Lemma=! NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP We))
    (ADVP (RB greatly))
    (VP (VB appreciate)
      (NP (PRP$ your) (NNS comments)))
    (. !)))

root(ROOT-0, appreciate-3)
nsubj(appreciate-3, We-1)
advmod(appreciate-3, greatly-2)
nmod:poss(comments-5, your-4)
dobj(appreciate-3, comments-5)
punct(appreciate-3, !-6)


==============Pipeline Pretty Print==============
Sentence #1 (14 tokens, sentiment: Negative):
I have a bit of a wishlist item that I want to tentatively propose
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=have CharacterOffsetBegin=2 CharacterOffsetEnd=6 PartOfSpeech=VBP Lemma=have NamedEntityTag=O SentimentClass=Neutral]
[Text=a CharacterOffsetBegin=7 CharacterOffsetEnd=8 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=bit CharacterOffsetBegin=9 CharacterOffsetEnd=12 PartOfSpeech=NN Lemma=bit NamedEntityTag=O SentimentClass=Neutral]
[Text=of CharacterOffsetBegin=13 CharacterOffsetEnd=15 PartOfSpeech=IN Lemma=of NamedEntityTag=O SentimentClass=Neutral]
[Text=a CharacterOffsetBegin=16 CharacterOffsetEnd=17 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=wishlist CharacterOffsetBegin=18 CharacterOffsetEnd=26 PartOfSpeech=NN Lemma=wishlist NamedEntityTag=O SentimentClass=Neutral]
[Text=item CharacterOffsetBegin=27 CharacterOffsetEnd=31 PartOfSpeech=NN Lemma=item NamedEntityTag=O SentimentClass=Neutral]
[Text=that CharacterOffsetBegin=32 CharacterOffsetEnd=36 PartOfSpeech=IN Lemma=that NamedEntityTag=O SentimentClass=Neutral]
[Text=I CharacterOffsetBegin=37 CharacterOffsetEnd=38 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=want CharacterOffsetBegin=39 CharacterOffsetEnd=43 PartOfSpeech=VBP Lemma=want NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=44 CharacterOffsetEnd=46 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=tentatively CharacterOffsetBegin=47 CharacterOffsetEnd=58 PartOfSpeech=RB Lemma=tentatively NamedEntityTag=O SentimentClass=Neutral]
[Text=propose CharacterOffsetBegin=59 CharacterOffsetEnd=66 PartOfSpeech=VB Lemma=propose NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (DT a) (NN bit))
        (PP (IN of)
          (NP (DT a) (NN wishlist) (NN item))))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP
                  (ADVP (RB tentatively))
                  (VB propose))))))))))

root(ROOT-0, have-2)
nsubj(have-2, I-1)
det:qmod(item-8, a-3)
mwe(a-3, bit-4)
mwe(a-3, of-5)
det(item-8, a-6)
compound(item-8, wishlist-7)
dobj(have-2, item-8)
mark(want-11, that-9)
nsubj(want-11, I-10)
nsubj:xsubj(propose-14, I-10)
ccomp(have-2, want-11)
mark(propose-14, to-12)
advmod(propose-14, tentatively-13)
xcomp(want-11, propose-14)

Coreference set:
	(1,10,[10,11]) -> (1,1,[1,2]), that is: "I" -> "I"

==============Pipeline Pretty Print==============
Sentence #1 (14 tokens, sentiment: Negative):
I have a bit of a wishlist item that I want to tentatively propose
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=have CharacterOffsetBegin=2 CharacterOffsetEnd=6 PartOfSpeech=VBP Lemma=have NamedEntityTag=O SentimentClass=Neutral]
[Text=a CharacterOffsetBegin=7 CharacterOffsetEnd=8 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=bit CharacterOffsetBegin=9 CharacterOffsetEnd=12 PartOfSpeech=NN Lemma=bit NamedEntityTag=O SentimentClass=Neutral]
[Text=of CharacterOffsetBegin=13 CharacterOffsetEnd=15 PartOfSpeech=IN Lemma=of NamedEntityTag=O SentimentClass=Neutral]
[Text=a CharacterOffsetBegin=16 CharacterOffsetEnd=17 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=wishlist CharacterOffsetBegin=18 CharacterOffsetEnd=26 PartOfSpeech=NN Lemma=wishlist NamedEntityTag=O SentimentClass=Neutral]
[Text=item CharacterOffsetBegin=27 CharacterOffsetEnd=31 PartOfSpeech=NN Lemma=item NamedEntityTag=O SentimentClass=Neutral]
[Text=that CharacterOffsetBegin=32 CharacterOffsetEnd=36 PartOfSpeech=IN Lemma=that NamedEntityTag=O SentimentClass=Neutral]
[Text=I CharacterOffsetBegin=37 CharacterOffsetEnd=38 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=want CharacterOffsetBegin=39 CharacterOffsetEnd=43 PartOfSpeech=VBP Lemma=want NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=44 CharacterOffsetEnd=46 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=tentatively CharacterOffsetBegin=47 CharacterOffsetEnd=58 PartOfSpeech=RB Lemma=tentatively NamedEntityTag=O SentimentClass=Neutral]
[Text=propose CharacterOffsetBegin=59 CharacterOffsetEnd=66 PartOfSpeech=VB Lemma=propose NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (DT a) (NN bit))
        (PP (IN of)
          (NP (DT a) (NN wishlist) (NN item))))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP
                  (ADVP (RB tentatively))
                  (VB propose))))))))))

root(ROOT-0, have-2)
nsubj(have-2, I-1)
det:qmod(item-8, a-3)
mwe(a-3, bit-4)
mwe(a-3, of-5)
det(item-8, a-6)
compound(item-8, wishlist-7)
dobj(have-2, item-8)
mark(want-11, that-9)
nsubj(want-11, I-10)
nsubj:xsubj(propose-14, I-10)
ccomp(have-2, want-11)
mark(propose-14, to-12)
advmod(propose-14, tentatively-13)
xcomp(want-11, propose-14)

Coreference set:
	(1,10,[10,11]) -> (1,1,[1,2]), that is: "I" -> "I"

==============Pipeline Pretty Print==============
Sentence #1 (5 tokens, sentiment: Negative):
This is certainly too much
[Text=This CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=DT Lemma=this NamedEntityTag=O SentimentClass=Neutral]
[Text=is CharacterOffsetBegin=5 CharacterOffsetEnd=7 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=certainly CharacterOffsetBegin=8 CharacterOffsetEnd=17 PartOfSpeech=RB Lemma=certainly NamedEntityTag=O SentimentClass=Positive]
[Text=too CharacterOffsetBegin=18 CharacterOffsetEnd=21 PartOfSpeech=RB Lemma=too NamedEntityTag=O SentimentClass=Neutral]
[Text=much CharacterOffsetBegin=22 CharacterOffsetEnd=26 PartOfSpeech=JJ Lemma=much NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (ADVP (RB certainly))
      (ADJP (RB too) (JJ much)))))

root(ROOT-0, much-5)
nsubj(much-5, This-1)
cop(much-5, is-2)
advmod(much-5, certainly-3)
advmod(much-5, too-4)


==============Pipeline Pretty Print==============
Sentence #1 (5 tokens, sentiment: Negative):
This is certainly too much
[Text=This CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=DT Lemma=this NamedEntityTag=O SentimentClass=Neutral]
[Text=is CharacterOffsetBegin=5 CharacterOffsetEnd=7 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=certainly CharacterOffsetBegin=8 CharacterOffsetEnd=17 PartOfSpeech=RB Lemma=certainly NamedEntityTag=O SentimentClass=Positive]
[Text=too CharacterOffsetBegin=18 CharacterOffsetEnd=21 PartOfSpeech=RB Lemma=too NamedEntityTag=O SentimentClass=Neutral]
[Text=much CharacterOffsetBegin=22 CharacterOffsetEnd=26 PartOfSpeech=JJ Lemma=much NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (ADVP (RB certainly))
      (ADJP (RB too) (JJ much)))))

root(ROOT-0, much-5)
nsubj(much-5, This-1)
cop(much-5, is-2)
advmod(much-5, certainly-3)
advmod(much-5, too-4)


==============Pipeline Pretty Print==============
Sentence #1 (5 tokens, sentiment: Negative):
This is certainly too much
[Text=This CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=DT Lemma=this NamedEntityTag=O SentimentClass=Neutral]
[Text=is CharacterOffsetBegin=5 CharacterOffsetEnd=7 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=certainly CharacterOffsetBegin=8 CharacterOffsetEnd=17 PartOfSpeech=RB Lemma=certainly NamedEntityTag=O SentimentClass=Positive]
[Text=too CharacterOffsetBegin=18 CharacterOffsetEnd=21 PartOfSpeech=RB Lemma=too NamedEntityTag=O SentimentClass=Neutral]
[Text=much CharacterOffsetBegin=22 CharacterOffsetEnd=26 PartOfSpeech=JJ Lemma=much NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (ADVP (RB certainly))
      (ADJP (RB too) (JJ much)))))

root(ROOT-0, much-5)
nsubj(much-5, This-1)
cop(much-5, is-2)
advmod(much-5, certainly-3)
advmod(much-5, too-4)


==============Pipeline Pretty Print==============
Sentence #1 (5 tokens, sentiment: Negative):
This is certainly too much
[Text=This CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=DT Lemma=this NamedEntityTag=O SentimentClass=Neutral]
[Text=is CharacterOffsetBegin=5 CharacterOffsetEnd=7 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=certainly CharacterOffsetBegin=8 CharacterOffsetEnd=17 PartOfSpeech=RB Lemma=certainly NamedEntityTag=O SentimentClass=Positive]
[Text=too CharacterOffsetBegin=18 CharacterOffsetEnd=21 PartOfSpeech=RB Lemma=too NamedEntityTag=O SentimentClass=Neutral]
[Text=much CharacterOffsetBegin=22 CharacterOffsetEnd=26 PartOfSpeech=JJ Lemma=much NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (ADVP (RB certainly))
      (ADJP (RB too) (JJ much)))))

root(ROOT-0, much-5)
nsubj(much-5, This-1)
cop(much-5, is-2)
advmod(much-5, certainly-3)
advmod(much-5, too-4)


==============Pipeline Pretty Print==============
Sentence #1 (5 tokens, sentiment: Negative):
This is certainly too much
[Text=This CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=DT Lemma=this NamedEntityTag=O SentimentClass=Neutral]
[Text=is CharacterOffsetBegin=5 CharacterOffsetEnd=7 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=certainly CharacterOffsetBegin=8 CharacterOffsetEnd=17 PartOfSpeech=RB Lemma=certainly NamedEntityTag=O SentimentClass=Positive]
[Text=too CharacterOffsetBegin=18 CharacterOffsetEnd=21 PartOfSpeech=RB Lemma=too NamedEntityTag=O SentimentClass=Neutral]
[Text=much CharacterOffsetBegin=22 CharacterOffsetEnd=26 PartOfSpeech=JJ Lemma=much NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (ADVP (RB certainly))
      (ADJP (RB too) (JJ much)))))

root(ROOT-0, much-5)
nsubj(much-5, This-1)
cop(much-5, is-2)
advmod(much-5, certainly-3)
advmod(much-5, too-4)


==============Pipeline Pretty Print==============
Sentence #1 (10 tokens, sentiment: Negative):
I would like to propose a UI improvement using AJAX
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=would CharacterOffsetBegin=2 CharacterOffsetEnd=7 PartOfSpeech=MD Lemma=would NamedEntityTag=O SentimentClass=Neutral]
[Text=like CharacterOffsetBegin=8 CharacterOffsetEnd=12 PartOfSpeech=VB Lemma=like NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=13 CharacterOffsetEnd=15 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=propose CharacterOffsetBegin=16 CharacterOffsetEnd=23 PartOfSpeech=VB Lemma=propose NamedEntityTag=O SentimentClass=Neutral]
[Text=a CharacterOffsetBegin=24 CharacterOffsetEnd=25 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=UI CharacterOffsetBegin=26 CharacterOffsetEnd=28 PartOfSpeech=NN Lemma=ui NamedEntityTag=O SentimentClass=Neutral]
[Text=improvement CharacterOffsetBegin=29 CharacterOffsetEnd=40 PartOfSpeech=NN Lemma=improvement NamedEntityTag=O SentimentClass=Positive]
[Text=using CharacterOffsetBegin=41 CharacterOffsetEnd=46 PartOfSpeech=VBG Lemma=use NamedEntityTag=O SentimentClass=Neutral]
[Text=AJAX CharacterOffsetBegin=47 CharacterOffsetEnd=51 PartOfSpeech=NNP Lemma=AJAX NamedEntityTag=ORGANIZATION SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (VP (VB like)
        (S
          (VP (TO to)
            (VP (VB propose)
              (NP (DT a) (NN UI) (NN improvement))
              (S
                (VP (VBG using)
                  (NP (NNP AJAX)))))))))))

root(ROOT-0, like-3)
nsubj(like-3, I-1)
nsubj:xsubj(propose-5, I-1)
aux(like-3, would-2)
mark(propose-5, to-4)
xcomp(like-3, propose-5)
det(improvement-8, a-6)
compound(improvement-8, UI-7)
dobj(propose-5, improvement-8)
xcomp(propose-5, using-9)
dobj(using-9, AJAX-10)


==============Pipeline Pretty Print==============
Sentence #1 (5 tokens, sentiment: Negative):
This is certainly too much
[Text=This CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=DT Lemma=this NamedEntityTag=O SentimentClass=Neutral]
[Text=is CharacterOffsetBegin=5 CharacterOffsetEnd=7 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=certainly CharacterOffsetBegin=8 CharacterOffsetEnd=17 PartOfSpeech=RB Lemma=certainly NamedEntityTag=O SentimentClass=Positive]
[Text=too CharacterOffsetBegin=18 CharacterOffsetEnd=21 PartOfSpeech=RB Lemma=too NamedEntityTag=O SentimentClass=Neutral]
[Text=much CharacterOffsetBegin=22 CharacterOffsetEnd=26 PartOfSpeech=JJ Lemma=much NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (ADVP (RB certainly))
      (ADJP (RB too) (JJ much)))))

root(ROOT-0, much-5)
nsubj(much-5, This-1)
cop(much-5, is-2)
advmod(much-5, certainly-3)
advmod(much-5, too-4)


==============Pipeline Pretty Print==============
Sentence #1 (5 tokens, sentiment: Negative):
This is certainly too much
[Text=This CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=DT Lemma=this NamedEntityTag=O SentimentClass=Neutral]
[Text=is CharacterOffsetBegin=5 CharacterOffsetEnd=7 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=certainly CharacterOffsetBegin=8 CharacterOffsetEnd=17 PartOfSpeech=RB Lemma=certainly NamedEntityTag=O SentimentClass=Positive]
[Text=too CharacterOffsetBegin=18 CharacterOffsetEnd=21 PartOfSpeech=RB Lemma=too NamedEntityTag=O SentimentClass=Neutral]
[Text=much CharacterOffsetBegin=22 CharacterOffsetEnd=26 PartOfSpeech=JJ Lemma=much NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (ADVP (RB certainly))
      (ADJP (RB too) (JJ much)))))

root(ROOT-0, much-5)
nsubj(much-5, This-1)
cop(much-5, is-2)
advmod(much-5, certainly-3)
advmod(much-5, too-4)


==============Pipeline Pretty Print==============
Sentence #1 (2 tokens, sentiment: Neutral):
Lionel Fradin
[Text=Lionel CharacterOffsetBegin=0 CharacterOffsetEnd=6 PartOfSpeech=NNP Lemma=Lionel NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=Fradin CharacterOffsetBegin=7 CharacterOffsetEnd=13 PartOfSpeech=NNP Lemma=Fradin NamedEntityTag=PERSON SentimentClass=Neutral]
(ROOT
  (NP (NNP Lionel) (NNP Fradin)))

root(ROOT-0, Fradin-2)
compound(Fradin-2, Lionel-1)


==============Pipeline Pretty Print==============
Sentence #1 (2 tokens, sentiment: Neutral):
Lionel Fradin
[Text=Lionel CharacterOffsetBegin=0 CharacterOffsetEnd=6 PartOfSpeech=NNP Lemma=Lionel NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=Fradin CharacterOffsetBegin=7 CharacterOffsetEnd=13 PartOfSpeech=NNP Lemma=Fradin NamedEntityTag=PERSON SentimentClass=Neutral]
(ROOT
  (NP (NNP Lionel) (NNP Fradin)))

root(ROOT-0, Fradin-2)
compound(Fradin-2, Lionel-1)


==============Pipeline Pretty Print==============
Sentence #1 (5 tokens, sentiment: Negative):
Lionel Fradin, Isuru Madhushankha
[Text=Lionel CharacterOffsetBegin=0 CharacterOffsetEnd=6 PartOfSpeech=NNP Lemma=Lionel NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=Fradin CharacterOffsetBegin=7 CharacterOffsetEnd=13 PartOfSpeech=NNP Lemma=Fradin NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=13 CharacterOffsetEnd=14 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=Isuru CharacterOffsetBegin=15 CharacterOffsetEnd=20 PartOfSpeech=NNP Lemma=Isuru NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=Madhushankha CharacterOffsetBegin=21 CharacterOffsetEnd=33 PartOfSpeech=NNP Lemma=Madhushankha NamedEntityTag=PERSON SentimentClass=Neutral]
(ROOT
  (NP
    (NP (NNP Lionel) (NNP Fradin))
    (, ,)
    (NP (NNP Isuru) (NNP Madhushankha))))

root(ROOT-0, Fradin-2)
compound(Fradin-2, Lionel-1)
punct(Fradin-2, ,-3)
compound(Madhushankha-5, Isuru-4)
appos(Fradin-2, Madhushankha-5)


==============Pipeline Pretty Print==============
Sentence #1 (5 tokens, sentiment: Negative):
Lionel Fradin, Isuru Madhushankha
[Text=Lionel CharacterOffsetBegin=0 CharacterOffsetEnd=6 PartOfSpeech=NNP Lemma=Lionel NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=Fradin CharacterOffsetBegin=7 CharacterOffsetEnd=13 PartOfSpeech=NNP Lemma=Fradin NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=13 CharacterOffsetEnd=14 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=Isuru CharacterOffsetBegin=15 CharacterOffsetEnd=20 PartOfSpeech=NNP Lemma=Isuru NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=Madhushankha CharacterOffsetBegin=21 CharacterOffsetEnd=33 PartOfSpeech=NNP Lemma=Madhushankha NamedEntityTag=PERSON SentimentClass=Neutral]
(ROOT
  (NP
    (NP (NNP Lionel) (NNP Fradin))
    (, ,)
    (NP (NNP Isuru) (NNP Madhushankha))))

root(ROOT-0, Fradin-2)
compound(Fradin-2, Lionel-1)
punct(Fradin-2, ,-3)
compound(Madhushankha-5, Isuru-4)
appos(Fradin-2, Madhushankha-5)


==============Pipeline Pretty Print==============
Sentence #1 (5 tokens, sentiment: Negative):
Lionel Fradin, Isuru Madhushankha
[Text=Lionel CharacterOffsetBegin=0 CharacterOffsetEnd=6 PartOfSpeech=NNP Lemma=Lionel NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=Fradin CharacterOffsetBegin=7 CharacterOffsetEnd=13 PartOfSpeech=NNP Lemma=Fradin NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=13 CharacterOffsetEnd=14 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=Isuru CharacterOffsetBegin=15 CharacterOffsetEnd=20 PartOfSpeech=NNP Lemma=Isuru NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=Madhushankha CharacterOffsetBegin=21 CharacterOffsetEnd=33 PartOfSpeech=NNP Lemma=Madhushankha NamedEntityTag=PERSON SentimentClass=Neutral]
(ROOT
  (NP
    (NP (NNP Lionel) (NNP Fradin))
    (, ,)
    (NP (NNP Isuru) (NNP Madhushankha))))

root(ROOT-0, Fradin-2)
compound(Fradin-2, Lionel-1)
punct(Fradin-2, ,-3)
compound(Madhushankha-5, Isuru-4)
appos(Fradin-2, Madhushankha-5)


==============Pipeline Pretty Print==============
Sentence #1 (5 tokens, sentiment: Negative):
Lionel Fradin, Isuru Madhushankha
[Text=Lionel CharacterOffsetBegin=0 CharacterOffsetEnd=6 PartOfSpeech=NNP Lemma=Lionel NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=Fradin CharacterOffsetBegin=7 CharacterOffsetEnd=13 PartOfSpeech=NNP Lemma=Fradin NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=13 CharacterOffsetEnd=14 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=Isuru CharacterOffsetBegin=15 CharacterOffsetEnd=20 PartOfSpeech=NNP Lemma=Isuru NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=Madhushankha CharacterOffsetBegin=21 CharacterOffsetEnd=33 PartOfSpeech=NNP Lemma=Madhushankha NamedEntityTag=PERSON SentimentClass=Neutral]
(ROOT
  (NP
    (NP (NNP Lionel) (NNP Fradin))
    (, ,)
    (NP (NNP Isuru) (NNP Madhushankha))))

root(ROOT-0, Fradin-2)
compound(Fradin-2, Lionel-1)
punct(Fradin-2, ,-3)
compound(Madhushankha-5, Isuru-4)
appos(Fradin-2, Madhushankha-5)


==============Pipeline Pretty Print==============
Sentence #1 (5 tokens, sentiment: Negative):
Lionel Fradin is Isuru Madhushankha
[Text=Lionel CharacterOffsetBegin=0 CharacterOffsetEnd=6 PartOfSpeech=NNP Lemma=Lionel NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=Fradin CharacterOffsetBegin=7 CharacterOffsetEnd=13 PartOfSpeech=NNP Lemma=Fradin NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=is CharacterOffsetBegin=14 CharacterOffsetEnd=16 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=Isuru CharacterOffsetBegin=17 CharacterOffsetEnd=22 PartOfSpeech=NNP Lemma=Isuru NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=Madhushankha CharacterOffsetBegin=23 CharacterOffsetEnd=35 PartOfSpeech=NNP Lemma=Madhushankha NamedEntityTag=PERSON SentimentClass=Neutral]
(ROOT
  (S
    (NP (NNP Lionel) (NNP Fradin))
    (VP (VBZ is)
      (NP (NNP Isuru) (NNP Madhushankha)))))

root(ROOT-0, Madhushankha-5)
compound(Fradin-2, Lionel-1)
nsubj(Madhushankha-5, Fradin-2)
cop(Madhushankha-5, is-3)
compound(Madhushankha-5, Isuru-4)

Coreference set:
	(1,5,[4,6]) -> (1,2,[1,3]), that is: "Isuru Madhushankha" -> "Lionel Fradin"

==============Pipeline Pretty Print==============
Sentence #1 (8 tokens, sentiment: Neutral):
Lionel Fradin has a friend named Isuru Madhushankha
[Text=Lionel CharacterOffsetBegin=0 CharacterOffsetEnd=6 PartOfSpeech=NNP Lemma=Lionel NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=Fradin CharacterOffsetBegin=7 CharacterOffsetEnd=13 PartOfSpeech=NNP Lemma=Fradin NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=has CharacterOffsetBegin=14 CharacterOffsetEnd=17 PartOfSpeech=VBZ Lemma=have NamedEntityTag=O SentimentClass=Neutral]
[Text=a CharacterOffsetBegin=18 CharacterOffsetEnd=19 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=friend CharacterOffsetBegin=20 CharacterOffsetEnd=26 PartOfSpeech=NN Lemma=friend NamedEntityTag=O SentimentClass=Positive]
[Text=named CharacterOffsetBegin=27 CharacterOffsetEnd=32 PartOfSpeech=VBN Lemma=name NamedEntityTag=O SentimentClass=Neutral]
[Text=Isuru CharacterOffsetBegin=33 CharacterOffsetEnd=38 PartOfSpeech=NNP Lemma=Isuru NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=Madhushankha CharacterOffsetBegin=39 CharacterOffsetEnd=51 PartOfSpeech=NNP Lemma=Madhushankha NamedEntityTag=PERSON SentimentClass=Neutral]
(ROOT
  (S
    (NP (NNP Lionel) (NNP Fradin))
    (VP (VBZ has)
      (NP
        (NP (DT a) (NN friend))
        (VP (VBN named)
          (NP (NNP Isuru) (NNP Madhushankha)))))))

root(ROOT-0, has-3)
compound(Fradin-2, Lionel-1)
nsubj(has-3, Fradin-2)
det(friend-5, a-4)
dobj(has-3, friend-5)
acl(friend-5, named-6)
compound(Madhushankha-8, Isuru-7)
dobj(named-6, Madhushankha-8)


==============Pipeline Pretty Print==============
Sentence #1 (2 tokens, sentiment: Neutral):
Lionel Fradin
[Text=Lionel CharacterOffsetBegin=0 CharacterOffsetEnd=6 PartOfSpeech=NNP Lemma=Lionel NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=Fradin CharacterOffsetBegin=7 CharacterOffsetEnd=13 PartOfSpeech=NNP Lemma=Fradin NamedEntityTag=PERSON SentimentClass=Neutral]
(ROOT
  (NP (NNP Lionel) (NNP Fradin)))

root(ROOT-0, Fradin-2)
compound(Fradin-2, Lionel-1)


==============Pipeline Pretty Print==============
Sentence #1 (28 tokens, sentiment: Negative):
It would be useful adding an icon next to column names in the left tree to add it's name into the sql editor at the right pane
[Text=It CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=would CharacterOffsetBegin=3 CharacterOffsetEnd=8 PartOfSpeech=MD Lemma=would NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=9 CharacterOffsetEnd=11 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=useful CharacterOffsetBegin=12 CharacterOffsetEnd=18 PartOfSpeech=JJ Lemma=useful NamedEntityTag=O SentimentClass=Neutral]
[Text=adding CharacterOffsetBegin=19 CharacterOffsetEnd=25 PartOfSpeech=VBG Lemma=add NamedEntityTag=O SentimentClass=Positive]
[Text=an CharacterOffsetBegin=26 CharacterOffsetEnd=28 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=icon CharacterOffsetBegin=29 CharacterOffsetEnd=33 PartOfSpeech=NN Lemma=icon NamedEntityTag=O SentimentClass=Neutral]
[Text=next CharacterOffsetBegin=34 CharacterOffsetEnd=38 PartOfSpeech=JJ Lemma=next NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=39 CharacterOffsetEnd=41 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=column CharacterOffsetBegin=42 CharacterOffsetEnd=48 PartOfSpeech=NN Lemma=column NamedEntityTag=O SentimentClass=Neutral]
[Text=names CharacterOffsetBegin=49 CharacterOffsetEnd=54 PartOfSpeech=NNS Lemma=name NamedEntityTag=O SentimentClass=Neutral]
[Text=in CharacterOffsetBegin=55 CharacterOffsetEnd=57 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=58 CharacterOffsetEnd=61 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=left CharacterOffsetBegin=62 CharacterOffsetEnd=66 PartOfSpeech=JJ Lemma=left NamedEntityTag=O SentimentClass=Neutral]
[Text=tree CharacterOffsetBegin=67 CharacterOffsetEnd=71 PartOfSpeech=NN Lemma=tree NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=72 CharacterOffsetEnd=74 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=add CharacterOffsetBegin=75 CharacterOffsetEnd=78 PartOfSpeech=VB Lemma=add NamedEntityTag=O SentimentClass=Positive]
[Text=it CharacterOffsetBegin=79 CharacterOffsetEnd=81 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text='s CharacterOffsetBegin=81 CharacterOffsetEnd=83 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=name CharacterOffsetBegin=84 CharacterOffsetEnd=88 PartOfSpeech=NN Lemma=name NamedEntityTag=O SentimentClass=Neutral]
[Text=into CharacterOffsetBegin=89 CharacterOffsetEnd=93 PartOfSpeech=IN Lemma=into NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=94 CharacterOffsetEnd=97 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=sql CharacterOffsetBegin=98 CharacterOffsetEnd=101 PartOfSpeech=NN Lemma=sql NamedEntityTag=O SentimentClass=Neutral]
[Text=editor CharacterOffsetBegin=102 CharacterOffsetEnd=108 PartOfSpeech=NN Lemma=editor NamedEntityTag=O SentimentClass=Neutral]
[Text=at CharacterOffsetBegin=109 CharacterOffsetEnd=111 PartOfSpeech=IN Lemma=at NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=112 CharacterOffsetEnd=115 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=right CharacterOffsetBegin=116 CharacterOffsetEnd=121 PartOfSpeech=JJ Lemma=right NamedEntityTag=O SentimentClass=Positive]
[Text=pane CharacterOffsetBegin=122 CharacterOffsetEnd=126 PartOfSpeech=NN Lemma=pane NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ useful))
        (S
          (VP (VBG adding)
            (NP (DT an) (NN icon))
            (ADVP (JJ next)
              (PP (TO to)
                (NP
                  (NP (NN column) (NNS names))
                  (PP (IN in)
                    (NP (DT the) (JJ left) (NN tree)
                      (S
                        (VP (TO to)
                          (VP (VB add)
                            (SBAR
                              (S
                                (NP (PRP it))
                                (VP (VBZ 's)
                                  (NP (NN name))
                                  (PP (IN into)
                                    (NP (DT the) (NN sql) (NN editor)))
                                  (PP (IN at)
                                    (NP (DT the) (JJ right) (NN pane))))))))))))))))))))

root(ROOT-0, useful-4)
nsubj(useful-4, It-1)
aux(useful-4, would-2)
cop(useful-4, be-3)
xcomp(useful-4, adding-5)
det(icon-7, an-6)
dobj(adding-5, icon-7)
case(names-11, next-8)
mwe(next-8, to-9)
compound(names-11, column-10)
nmod:next_to(adding-5, names-11)
case(tree-15, in-12)
det(tree-15, the-13)
amod(tree-15, left-14)
nmod:in(names-11, tree-15)
mark(add-17, to-16)
acl:to(tree-15, add-17)
nsubj(name-20, it-18)
cop(name-20, 's-19)
ccomp(add-17, name-20)
case(editor-24, into-21)
det(editor-24, the-22)
compound(editor-24, sql-23)
nmod:into(name-20, editor-24)
case(pane-28, at-25)
det(pane-28, the-26)
amod(pane-28, right-27)
nmod:at(name-20, pane-28)

Coreference set:
	(1,18,[18,19]) -> (1,7,[6,8]), that is: "it" -> "an icon"

==============Pipeline Pretty Print==============
Sentence #1 (28 tokens, sentiment: Negative):
It would be useful adding an icon next to column names in the left tree to add it's name into the sql editor at the right pane
[Text=It CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=would CharacterOffsetBegin=3 CharacterOffsetEnd=8 PartOfSpeech=MD Lemma=would NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=9 CharacterOffsetEnd=11 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=useful CharacterOffsetBegin=12 CharacterOffsetEnd=18 PartOfSpeech=JJ Lemma=useful NamedEntityTag=O SentimentClass=Neutral]
[Text=adding CharacterOffsetBegin=19 CharacterOffsetEnd=25 PartOfSpeech=VBG Lemma=add NamedEntityTag=O SentimentClass=Positive]
[Text=an CharacterOffsetBegin=26 CharacterOffsetEnd=28 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=icon CharacterOffsetBegin=29 CharacterOffsetEnd=33 PartOfSpeech=NN Lemma=icon NamedEntityTag=O SentimentClass=Neutral]
[Text=next CharacterOffsetBegin=34 CharacterOffsetEnd=38 PartOfSpeech=JJ Lemma=next NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=39 CharacterOffsetEnd=41 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=column CharacterOffsetBegin=42 CharacterOffsetEnd=48 PartOfSpeech=NN Lemma=column NamedEntityTag=O SentimentClass=Neutral]
[Text=names CharacterOffsetBegin=49 CharacterOffsetEnd=54 PartOfSpeech=NNS Lemma=name NamedEntityTag=O SentimentClass=Neutral]
[Text=in CharacterOffsetBegin=55 CharacterOffsetEnd=57 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=58 CharacterOffsetEnd=61 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=left CharacterOffsetBegin=62 CharacterOffsetEnd=66 PartOfSpeech=JJ Lemma=left NamedEntityTag=O SentimentClass=Neutral]
[Text=tree CharacterOffsetBegin=67 CharacterOffsetEnd=71 PartOfSpeech=NN Lemma=tree NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=72 CharacterOffsetEnd=74 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=add CharacterOffsetBegin=75 CharacterOffsetEnd=78 PartOfSpeech=VB Lemma=add NamedEntityTag=O SentimentClass=Positive]
[Text=it CharacterOffsetBegin=79 CharacterOffsetEnd=81 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text='s CharacterOffsetBegin=81 CharacterOffsetEnd=83 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=name CharacterOffsetBegin=84 CharacterOffsetEnd=88 PartOfSpeech=NN Lemma=name NamedEntityTag=O SentimentClass=Neutral]
[Text=into CharacterOffsetBegin=89 CharacterOffsetEnd=93 PartOfSpeech=IN Lemma=into NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=94 CharacterOffsetEnd=97 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=sql CharacterOffsetBegin=98 CharacterOffsetEnd=101 PartOfSpeech=NN Lemma=sql NamedEntityTag=O SentimentClass=Neutral]
[Text=editor CharacterOffsetBegin=102 CharacterOffsetEnd=108 PartOfSpeech=NN Lemma=editor NamedEntityTag=O SentimentClass=Neutral]
[Text=at CharacterOffsetBegin=109 CharacterOffsetEnd=111 PartOfSpeech=IN Lemma=at NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=112 CharacterOffsetEnd=115 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=right CharacterOffsetBegin=116 CharacterOffsetEnd=121 PartOfSpeech=JJ Lemma=right NamedEntityTag=O SentimentClass=Positive]
[Text=pane CharacterOffsetBegin=122 CharacterOffsetEnd=126 PartOfSpeech=NN Lemma=pane NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ useful))
        (S
          (VP (VBG adding)
            (NP (DT an) (NN icon))
            (ADVP (JJ next)
              (PP (TO to)
                (NP
                  (NP (NN column) (NNS names))
                  (PP (IN in)
                    (NP (DT the) (JJ left) (NN tree)
                      (S
                        (VP (TO to)
                          (VP (VB add)
                            (SBAR
                              (S
                                (NP (PRP it))
                                (VP (VBZ 's)
                                  (NP (NN name))
                                  (PP (IN into)
                                    (NP (DT the) (NN sql) (NN editor)))
                                  (PP (IN at)
                                    (NP (DT the) (JJ right) (NN pane))))))))))))))))))))

root(ROOT-0, useful-4)
nsubj(useful-4, It-1)
aux(useful-4, would-2)
cop(useful-4, be-3)
xcomp(useful-4, adding-5)
det(icon-7, an-6)
dobj(adding-5, icon-7)
case(names-11, next-8)
mwe(next-8, to-9)
compound(names-11, column-10)
nmod:next_to(adding-5, names-11)
case(tree-15, in-12)
det(tree-15, the-13)
amod(tree-15, left-14)
nmod:in(names-11, tree-15)
mark(add-17, to-16)
acl:to(tree-15, add-17)
nsubj(name-20, it-18)
cop(name-20, 's-19)
ccomp(add-17, name-20)
case(editor-24, into-21)
det(editor-24, the-22)
compound(editor-24, sql-23)
nmod:into(name-20, editor-24)
case(pane-28, at-25)
det(pane-28, the-26)
amod(pane-28, right-27)
nmod:at(name-20, pane-28)

Coreference set:
	(1,18,[18,19]) -> (1,7,[6,8]), that is: "it" -> "an icon"

==============Pipeline Pretty Print==============
Sentence #1 (23 tokens, sentiment: Negative):
In particular, I would like to be able to globally remove the DELETE button from the SQL tab when exploring a table
[Text=In CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=particular CharacterOffsetBegin=3 CharacterOffsetEnd=13 PartOfSpeech=JJ Lemma=particular NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=13 CharacterOffsetEnd=14 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=I CharacterOffsetBegin=15 CharacterOffsetEnd=16 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=would CharacterOffsetBegin=17 CharacterOffsetEnd=22 PartOfSpeech=MD Lemma=would NamedEntityTag=O SentimentClass=Neutral]
[Text=like CharacterOffsetBegin=23 CharacterOffsetEnd=27 PartOfSpeech=VB Lemma=like NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=28 CharacterOffsetEnd=30 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=31 CharacterOffsetEnd=33 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=able CharacterOffsetBegin=34 CharacterOffsetEnd=38 PartOfSpeech=JJ Lemma=able NamedEntityTag=O SentimentClass=Positive]
[Text=to CharacterOffsetBegin=39 CharacterOffsetEnd=41 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=globally CharacterOffsetBegin=42 CharacterOffsetEnd=50 PartOfSpeech=RB Lemma=globally NamedEntityTag=O SentimentClass=Neutral]
[Text=remove CharacterOffsetBegin=51 CharacterOffsetEnd=57 PartOfSpeech=VB Lemma=remove NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=58 CharacterOffsetEnd=61 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=DELETE CharacterOffsetBegin=62 CharacterOffsetEnd=68 PartOfSpeech=NNP Lemma=DELETE NamedEntityTag=O SentimentClass=Neutral]
[Text=button CharacterOffsetBegin=69 CharacterOffsetEnd=75 PartOfSpeech=NN Lemma=button NamedEntityTag=O SentimentClass=Neutral]
[Text=from CharacterOffsetBegin=76 CharacterOffsetEnd=80 PartOfSpeech=IN Lemma=from NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=81 CharacterOffsetEnd=84 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=SQL CharacterOffsetBegin=85 CharacterOffsetEnd=88 PartOfSpeech=NNP Lemma=SQL NamedEntityTag=O SentimentClass=Neutral]
[Text=tab CharacterOffsetBegin=89 CharacterOffsetEnd=92 PartOfSpeech=NN Lemma=tab NamedEntityTag=O SentimentClass=Neutral]
[Text=when CharacterOffsetBegin=93 CharacterOffsetEnd=97 PartOfSpeech=WRB Lemma=when NamedEntityTag=O SentimentClass=Neutral]
[Text=exploring CharacterOffsetBegin=98 CharacterOffsetEnd=107 PartOfSpeech=VBG Lemma=explore NamedEntityTag=O SentimentClass=Neutral]
[Text=a CharacterOffsetBegin=108 CharacterOffsetEnd=109 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=table CharacterOffsetBegin=110 CharacterOffsetEnd=115 PartOfSpeech=NN Lemma=table NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (PP (IN In)
      (ADJP (JJ particular)))
    (, ,)
    (NP (PRP I))
    (VP (MD would)
      (VP (VB like)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ able)
                (S
                  (VP (TO to)
                    (VP
                      (ADVP (RB globally))
                      (VB remove)
                      (NP (DT the) (NNP DELETE) (NN button))
                      (PP (IN from)
                        (NP (DT the) (NNP SQL) (NN tab)))))))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (VP (VBG exploring)
                    (NP (DT a) (NN table))))))))))))

root(ROOT-0, like-6)
case(particular-2, In-1)
advcl:in(like-6, particular-2)
punct(like-6, ,-3)
nsubj(like-6, I-4)
nsubj:xsubj(able-9, I-4)
aux(like-6, would-5)
mark(able-9, to-7)
cop(able-9, be-8)
xcomp(like-6, able-9)
mark(remove-12, to-10)
advmod(remove-12, globally-11)
xcomp(able-9, remove-12)
det(button-15, the-13)
compound(button-15, DELETE-14)
dobj(remove-12, button-15)
case(tab-19, from-16)
det(tab-19, the-17)
compound(tab-19, SQL-18)
nmod:from(remove-12, tab-19)
advmod(exploring-21, when-20)
advcl(able-9, exploring-21)
det(table-23, a-22)
dobj(exploring-21, table-23)


==============Pipeline Pretty Print==============
Sentence #1 (15 tokens, sentiment: Neutral):
I would appreciate a feature that allows to control some User Interface functionality from phpMyAdmin
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=would CharacterOffsetBegin=2 CharacterOffsetEnd=7 PartOfSpeech=MD Lemma=would NamedEntityTag=O SentimentClass=Neutral]
[Text=appreciate CharacterOffsetBegin=8 CharacterOffsetEnd=18 PartOfSpeech=VB Lemma=appreciate NamedEntityTag=O SentimentClass=Positive]
[Text=a CharacterOffsetBegin=19 CharacterOffsetEnd=20 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=feature CharacterOffsetBegin=21 CharacterOffsetEnd=28 PartOfSpeech=NN Lemma=feature NamedEntityTag=O SentimentClass=Neutral]
[Text=that CharacterOffsetBegin=29 CharacterOffsetEnd=33 PartOfSpeech=WDT Lemma=that NamedEntityTag=O SentimentClass=Neutral]
[Text=allows CharacterOffsetBegin=34 CharacterOffsetEnd=40 PartOfSpeech=VBZ Lemma=allow NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=41 CharacterOffsetEnd=43 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=control CharacterOffsetBegin=44 CharacterOffsetEnd=51 PartOfSpeech=VB Lemma=control NamedEntityTag=O SentimentClass=Neutral]
[Text=some CharacterOffsetBegin=52 CharacterOffsetEnd=56 PartOfSpeech=DT Lemma=some NamedEntityTag=O SentimentClass=Neutral]
[Text=User CharacterOffsetBegin=57 CharacterOffsetEnd=61 PartOfSpeech=NN Lemma=user NamedEntityTag=O SentimentClass=Neutral]
[Text=Interface CharacterOffsetBegin=62 CharacterOffsetEnd=71 PartOfSpeech=NNP Lemma=Interface NamedEntityTag=O SentimentClass=Neutral]
[Text=functionality CharacterOffsetBegin=72 CharacterOffsetEnd=85 PartOfSpeech=NN Lemma=functionality NamedEntityTag=O SentimentClass=Neutral]
[Text=from CharacterOffsetBegin=86 CharacterOffsetEnd=90 PartOfSpeech=IN Lemma=from NamedEntityTag=O SentimentClass=Neutral]
[Text=phpMyAdmin CharacterOffsetBegin=91 CharacterOffsetEnd=101 PartOfSpeech=NN Lemma=phpmyadmin NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (VP (VB appreciate)
        (NP
          (NP (DT a) (NN feature))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ allows)
                (S
                  (VP (TO to)
                    (VP (VB control)
                      (NP (DT some) (NN User) (NNP Interface) (NN functionality))
                      (PP (IN from)
                        (NP (NN phpMyAdmin))))))))))))))

root(ROOT-0, appreciate-3)
nsubj(appreciate-3, I-1)
aux(appreciate-3, would-2)
det(feature-5, a-4)
dobj(appreciate-3, feature-5)
nsubj(allows-7, feature-5)
nsubj:xsubj(control-9, feature-5)
ref(feature-5, that-6)
acl:relcl(feature-5, allows-7)
mark(control-9, to-8)
xcomp(allows-7, control-9)
det(functionality-13, some-10)
compound(functionality-13, User-11)
compound(functionality-13, Interface-12)
dobj(control-9, functionality-13)
case(phpMyAdmin-15, from-14)
nmod:from(control-9, phpMyAdmin-15)


==============Pipeline Pretty Print==============
Sentence #1 (15 tokens, sentiment: Neutral):
I would appreciate a feature that allows to control some User Interface functionality from phpMyAdmin
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=would CharacterOffsetBegin=2 CharacterOffsetEnd=7 PartOfSpeech=MD Lemma=would NamedEntityTag=O SentimentClass=Neutral]
[Text=appreciate CharacterOffsetBegin=8 CharacterOffsetEnd=18 PartOfSpeech=VB Lemma=appreciate NamedEntityTag=O SentimentClass=Positive]
[Text=a CharacterOffsetBegin=19 CharacterOffsetEnd=20 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=feature CharacterOffsetBegin=21 CharacterOffsetEnd=28 PartOfSpeech=NN Lemma=feature NamedEntityTag=O SentimentClass=Neutral]
[Text=that CharacterOffsetBegin=29 CharacterOffsetEnd=33 PartOfSpeech=WDT Lemma=that NamedEntityTag=O SentimentClass=Neutral]
[Text=allows CharacterOffsetBegin=34 CharacterOffsetEnd=40 PartOfSpeech=VBZ Lemma=allow NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=41 CharacterOffsetEnd=43 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=control CharacterOffsetBegin=44 CharacterOffsetEnd=51 PartOfSpeech=VB Lemma=control NamedEntityTag=O SentimentClass=Neutral]
[Text=some CharacterOffsetBegin=52 CharacterOffsetEnd=56 PartOfSpeech=DT Lemma=some NamedEntityTag=O SentimentClass=Neutral]
[Text=User CharacterOffsetBegin=57 CharacterOffsetEnd=61 PartOfSpeech=NN Lemma=user NamedEntityTag=O SentimentClass=Neutral]
[Text=Interface CharacterOffsetBegin=62 CharacterOffsetEnd=71 PartOfSpeech=NNP Lemma=Interface NamedEntityTag=O SentimentClass=Neutral]
[Text=functionality CharacterOffsetBegin=72 CharacterOffsetEnd=85 PartOfSpeech=NN Lemma=functionality NamedEntityTag=O SentimentClass=Neutral]
[Text=from CharacterOffsetBegin=86 CharacterOffsetEnd=90 PartOfSpeech=IN Lemma=from NamedEntityTag=O SentimentClass=Neutral]
[Text=phpMyAdmin CharacterOffsetBegin=91 CharacterOffsetEnd=101 PartOfSpeech=NN Lemma=phpmyadmin NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (VP (VB appreciate)
        (NP
          (NP (DT a) (NN feature))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ allows)
                (S
                  (VP (TO to)
                    (VP (VB control)
                      (NP (DT some) (NN User) (NNP Interface) (NN functionality))
                      (PP (IN from)
                        (NP (NN phpMyAdmin))))))))))))))

root(ROOT-0, appreciate-3)
nsubj(appreciate-3, I-1)
aux(appreciate-3, would-2)
det(feature-5, a-4)
dobj(appreciate-3, feature-5)
nsubj(allows-7, feature-5)
nsubj:xsubj(control-9, feature-5)
ref(feature-5, that-6)
acl:relcl(feature-5, allows-7)
mark(control-9, to-8)
xcomp(allows-7, control-9)
det(functionality-13, some-10)
compound(functionality-13, User-11)
compound(functionality-13, Interface-12)
dobj(control-9, functionality-13)
case(phpMyAdmin-15, from-14)
nmod:from(control-9, phpMyAdmin-15)


==============Pipeline Pretty Print==============
Sentence #1 (2 tokens, sentiment: Neutral):
Isuru Madhushankha
[Text=Isuru CharacterOffsetBegin=0 CharacterOffsetEnd=5 PartOfSpeech=NNP Lemma=Isuru NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=Madhushankha CharacterOffsetBegin=6 CharacterOffsetEnd=18 PartOfSpeech=NNP Lemma=Madhushankha NamedEntityTag=PERSON SentimentClass=Neutral]
(ROOT
  (NP (NNP Isuru) (NNP Madhushankha)))

root(ROOT-0, Madhushankha-2)
compound(Madhushankha-2, Isuru-1)


==============Pipeline Pretty Print==============
Sentence #1 (2 tokens, sentiment: Neutral):
Isuru Madhushankha
[Text=Isuru CharacterOffsetBegin=0 CharacterOffsetEnd=5 PartOfSpeech=NNP Lemma=Isuru NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=Madhushankha CharacterOffsetBegin=6 CharacterOffsetEnd=18 PartOfSpeech=NNP Lemma=Madhushankha NamedEntityTag=PERSON SentimentClass=Neutral]
(ROOT
  (NP (NNP Isuru) (NNP Madhushankha)))

root(ROOT-0, Madhushankha-2)
compound(Madhushankha-2, Isuru-1)


==============Pipeline Pretty Print==============
Sentence #1 (2 tokens, sentiment: Neutral):
Isuru Madhushankha
[Text=Isuru CharacterOffsetBegin=0 CharacterOffsetEnd=5 PartOfSpeech=NNP Lemma=Isuru NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=Madhushankha CharacterOffsetBegin=6 CharacterOffsetEnd=18 PartOfSpeech=NNP Lemma=Madhushankha NamedEntityTag=PERSON SentimentClass=Neutral]
(ROOT
  (NP (NNP Isuru) (NNP Madhushankha)))

root(ROOT-0, Madhushankha-2)
compound(Madhushankha-2, Isuru-1)


==============Pipeline Pretty Print==============
Sentence #1 (5 tokens, sentiment: Neutral):
Mik you had a document
[Text=Mik CharacterOffsetBegin=0 CharacterOffsetEnd=3 PartOfSpeech=NNP Lemma=Mik NamedEntityTag=PERSON SentimentClass=Neutral]
[Text=you CharacterOffsetBegin=4 CharacterOffsetEnd=7 PartOfSpeech=PRP Lemma=you NamedEntityTag=O SentimentClass=Neutral]
[Text=had CharacterOffsetBegin=8 CharacterOffsetEnd=11 PartOfSpeech=VBD Lemma=have NamedEntityTag=O SentimentClass=Neutral]
[Text=a CharacterOffsetBegin=12 CharacterOffsetEnd=13 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=document CharacterOffsetBegin=14 CharacterOffsetEnd=22 PartOfSpeech=NN Lemma=document NamedEntityTag=O SentimentClass=Positive]
(ROOT
  (FRAG
    (NP
      (NP (NNP Mik))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBD had)
            (NP (DT a) (NN document))))))))

root(ROOT-0, Mik-1)
nsubj(had-3, you-2)
acl:relcl(Mik-1, had-3)
det(document-5, a-4)
dobj(had-3, document-5)


==============Pipeline Pretty Print==============
Sentence #1 (2 tokens, sentiment: Positive):
Good Luck
[Text=Good CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=JJ Lemma=good NamedEntityTag=O SentimentClass=Positive]
[Text=Luck CharacterOffsetBegin=5 CharacterOffsetEnd=9 PartOfSpeech=NNP Lemma=Luck NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (NP (JJ Good) (NNP Luck)))

root(ROOT-0, Luck-2)
amod(Luck-2, Good-1)


==============Pipeline Pretty Print==============
Sentence #1 (13 tokens, sentiment: Neutral):
This should be possible for <ant> as well and allow simplify forked testing
[Text=This CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=DT Lemma=this NamedEntityTag=O SentimentClass=Neutral]
[Text=should CharacterOffsetBegin=5 CharacterOffsetEnd=11 PartOfSpeech=MD Lemma=should NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=12 CharacterOffsetEnd=14 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=possible CharacterOffsetBegin=15 CharacterOffsetEnd=23 PartOfSpeech=JJ Lemma=possible NamedEntityTag=O SentimentClass=Neutral]
[Text=for CharacterOffsetBegin=24 CharacterOffsetEnd=27 PartOfSpeech=IN Lemma=for NamedEntityTag=O SentimentClass=Neutral]
[Text=<ant> CharacterOffsetBegin=28 CharacterOffsetEnd=33 PartOfSpeech=NN Lemma=<ant> NamedEntityTag=O SentimentClass=Neutral]
[Text=as CharacterOffsetBegin=34 CharacterOffsetEnd=36 PartOfSpeech=RB Lemma=as NamedEntityTag=O SentimentClass=Neutral]
[Text=well CharacterOffsetBegin=37 CharacterOffsetEnd=41 PartOfSpeech=RB Lemma=well NamedEntityTag=O SentimentClass=Positive]
[Text=and CharacterOffsetBegin=42 CharacterOffsetEnd=45 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=allow CharacterOffsetBegin=46 CharacterOffsetEnd=51 PartOfSpeech=VB Lemma=allow NamedEntityTag=O SentimentClass=Neutral]
[Text=simplify CharacterOffsetBegin=52 CharacterOffsetEnd=60 PartOfSpeech=VB Lemma=simplify NamedEntityTag=O SentimentClass=Neutral]
[Text=forked CharacterOffsetBegin=61 CharacterOffsetEnd=67 PartOfSpeech=VBN Lemma=fork NamedEntityTag=O SentimentClass=Neutral]
[Text=testing CharacterOffsetBegin=68 CharacterOffsetEnd=75 PartOfSpeech=NN Lemma=testing NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT This))
    (VP (MD should)
      (VP
        (VP (VB be)
          (ADJP (JJ possible)
            (PP (IN for)
              (NP (NN <ant>))))
          (ADVP (RB as) (RB well)))
        (CC and)
        (VP (VB allow)
          (S
            (VP (VB simplify)
              (VP (VBN forked)
                (NP (NN testing))))))))))

root(ROOT-0, possible-4)
nsubj(possible-4, This-1)
nsubj(allow-10, This-1)
aux(possible-4, should-2)
cop(possible-4, be-3)
case(<ant>-6, for-5)
nmod:for(possible-4, <ant>-6)
advmod(possible-4, as-7)
mwe(as-7, well-8)
cc(possible-4, and-9)
conj:and(possible-4, allow-10)
ccomp(allow-10, simplify-11)
dep(simplify-11, forked-12)
dobj(forked-12, testing-13)


==============Pipeline Pretty Print==============
Sentence #1 (13 tokens, sentiment: Neutral):
This should be possible for <ant> as well and allow simplify forked testing
[Text=This CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=DT Lemma=this NamedEntityTag=O SentimentClass=Neutral]
[Text=should CharacterOffsetBegin=5 CharacterOffsetEnd=11 PartOfSpeech=MD Lemma=should NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=12 CharacterOffsetEnd=14 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=possible CharacterOffsetBegin=15 CharacterOffsetEnd=23 PartOfSpeech=JJ Lemma=possible NamedEntityTag=O SentimentClass=Neutral]
[Text=for CharacterOffsetBegin=24 CharacterOffsetEnd=27 PartOfSpeech=IN Lemma=for NamedEntityTag=O SentimentClass=Neutral]
[Text=<ant> CharacterOffsetBegin=28 CharacterOffsetEnd=33 PartOfSpeech=NN Lemma=<ant> NamedEntityTag=O SentimentClass=Neutral]
[Text=as CharacterOffsetBegin=34 CharacterOffsetEnd=36 PartOfSpeech=RB Lemma=as NamedEntityTag=O SentimentClass=Neutral]
[Text=well CharacterOffsetBegin=37 CharacterOffsetEnd=41 PartOfSpeech=RB Lemma=well NamedEntityTag=O SentimentClass=Positive]
[Text=and CharacterOffsetBegin=42 CharacterOffsetEnd=45 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=allow CharacterOffsetBegin=46 CharacterOffsetEnd=51 PartOfSpeech=VB Lemma=allow NamedEntityTag=O SentimentClass=Neutral]
[Text=simplify CharacterOffsetBegin=52 CharacterOffsetEnd=60 PartOfSpeech=VB Lemma=simplify NamedEntityTag=O SentimentClass=Neutral]
[Text=forked CharacterOffsetBegin=61 CharacterOffsetEnd=67 PartOfSpeech=VBN Lemma=fork NamedEntityTag=O SentimentClass=Neutral]
[Text=testing CharacterOffsetBegin=68 CharacterOffsetEnd=75 PartOfSpeech=NN Lemma=testing NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT This))
    (VP (MD should)
      (VP
        (VP (VB be)
          (ADJP (JJ possible)
            (PP (IN for)
              (NP (NN <ant>))))
          (ADVP (RB as) (RB well)))
        (CC and)
        (VP (VB allow)
          (S
            (VP (VB simplify)
              (VP (VBN forked)
                (NP (NN testing))))))))))

root(ROOT-0, possible-4)
nsubj(possible-4, This-1)
nsubj(allow-10, This-1)
aux(possible-4, should-2)
cop(possible-4, be-3)
case(<ant>-6, for-5)
nmod:for(possible-4, <ant>-6)
advmod(possible-4, as-7)
mwe(as-7, well-8)
cc(possible-4, and-9)
conj:and(possible-4, allow-10)
ccomp(allow-10, simplify-11)
dep(simplify-11, forked-12)
dobj(forked-12, testing-13)


==============Pipeline Pretty Print==============
Sentence #1 (13 tokens, sentiment: Neutral):
This should be possible for <ant> as well and allow simplify forked testing
[Text=This CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=DT Lemma=this NamedEntityTag=O SentimentClass=Neutral]
[Text=should CharacterOffsetBegin=5 CharacterOffsetEnd=11 PartOfSpeech=MD Lemma=should NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=12 CharacterOffsetEnd=14 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=possible CharacterOffsetBegin=15 CharacterOffsetEnd=23 PartOfSpeech=JJ Lemma=possible NamedEntityTag=O SentimentClass=Neutral]
[Text=for CharacterOffsetBegin=24 CharacterOffsetEnd=27 PartOfSpeech=IN Lemma=for NamedEntityTag=O SentimentClass=Neutral]
[Text=<ant> CharacterOffsetBegin=28 CharacterOffsetEnd=33 PartOfSpeech=NN Lemma=<ant> NamedEntityTag=O SentimentClass=Neutral]
[Text=as CharacterOffsetBegin=34 CharacterOffsetEnd=36 PartOfSpeech=RB Lemma=as NamedEntityTag=O SentimentClass=Neutral]
[Text=well CharacterOffsetBegin=37 CharacterOffsetEnd=41 PartOfSpeech=RB Lemma=well NamedEntityTag=O SentimentClass=Positive]
[Text=and CharacterOffsetBegin=42 CharacterOffsetEnd=45 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=allow CharacterOffsetBegin=46 CharacterOffsetEnd=51 PartOfSpeech=VB Lemma=allow NamedEntityTag=O SentimentClass=Neutral]
[Text=simplify CharacterOffsetBegin=52 CharacterOffsetEnd=60 PartOfSpeech=VB Lemma=simplify NamedEntityTag=O SentimentClass=Neutral]
[Text=forked CharacterOffsetBegin=61 CharacterOffsetEnd=67 PartOfSpeech=VBN Lemma=fork NamedEntityTag=O SentimentClass=Neutral]
[Text=testing CharacterOffsetBegin=68 CharacterOffsetEnd=75 PartOfSpeech=NN Lemma=testing NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT This))
    (VP (MD should)
      (VP
        (VP (VB be)
          (ADJP (JJ possible)
            (PP (IN for)
              (NP (NN <ant>))))
          (ADVP (RB as) (RB well)))
        (CC and)
        (VP (VB allow)
          (S
            (VP (VB simplify)
              (VP (VBN forked)
                (NP (NN testing))))))))))

root(ROOT-0, possible-4)
nsubj(possible-4, This-1)
nsubj(allow-10, This-1)
aux(possible-4, should-2)
cop(possible-4, be-3)
case(<ant>-6, for-5)
nmod:for(possible-4, <ant>-6)
advmod(possible-4, as-7)
mwe(as-7, well-8)
cc(possible-4, and-9)
conj:and(possible-4, allow-10)
ccomp(allow-10, simplify-11)
dep(simplify-11, forked-12)
dobj(forked-12, testing-13)


==============Pipeline Pretty Print==============
Sentence #1 (29 tokens, sentiment: Negative):
It would really speed up the development and avoid error entries if such an XML schema was made available in the distribution, or better on a web server
[Text=It CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=would CharacterOffsetBegin=3 CharacterOffsetEnd=8 PartOfSpeech=MD Lemma=would NamedEntityTag=O SentimentClass=Neutral]
[Text=really CharacterOffsetBegin=9 CharacterOffsetEnd=15 PartOfSpeech=RB Lemma=really NamedEntityTag=O SentimentClass=Neutral]
[Text=speed CharacterOffsetBegin=16 CharacterOffsetEnd=21 PartOfSpeech=VB Lemma=speed NamedEntityTag=O SentimentClass=Neutral]
[Text=up CharacterOffsetBegin=22 CharacterOffsetEnd=24 PartOfSpeech=RP Lemma=up NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=25 CharacterOffsetEnd=28 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=development CharacterOffsetBegin=29 CharacterOffsetEnd=40 PartOfSpeech=NN Lemma=development NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=41 CharacterOffsetEnd=44 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=avoid CharacterOffsetBegin=45 CharacterOffsetEnd=50 PartOfSpeech=VB Lemma=avoid NamedEntityTag=O SentimentClass=Negative]
[Text=error CharacterOffsetBegin=51 CharacterOffsetEnd=56 PartOfSpeech=NN Lemma=error NamedEntityTag=O SentimentClass=Negative]
[Text=entries CharacterOffsetBegin=57 CharacterOffsetEnd=64 PartOfSpeech=NNS Lemma=entry NamedEntityTag=O SentimentClass=Neutral]
[Text=if CharacterOffsetBegin=65 CharacterOffsetEnd=67 PartOfSpeech=IN Lemma=if NamedEntityTag=O SentimentClass=Neutral]
[Text=such CharacterOffsetBegin=68 CharacterOffsetEnd=72 PartOfSpeech=PDT Lemma=such NamedEntityTag=O SentimentClass=Neutral]
[Text=an CharacterOffsetBegin=73 CharacterOffsetEnd=75 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=XML CharacterOffsetBegin=76 CharacterOffsetEnd=79 PartOfSpeech=NN Lemma=xml NamedEntityTag=O SentimentClass=Neutral]
[Text=schema CharacterOffsetBegin=80 CharacterOffsetEnd=86 PartOfSpeech=NN Lemma=schema NamedEntityTag=O SentimentClass=Neutral]
[Text=was CharacterOffsetBegin=87 CharacterOffsetEnd=90 PartOfSpeech=VBD Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=made CharacterOffsetBegin=91 CharacterOffsetEnd=95 PartOfSpeech=VBN Lemma=make NamedEntityTag=O SentimentClass=Neutral]
[Text=available CharacterOffsetBegin=96 CharacterOffsetEnd=105 PartOfSpeech=JJ Lemma=available NamedEntityTag=O SentimentClass=Positive]
[Text=in CharacterOffsetBegin=106 CharacterOffsetEnd=108 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=109 CharacterOffsetEnd=112 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=distribution CharacterOffsetBegin=113 CharacterOffsetEnd=125 PartOfSpeech=NN Lemma=distribution NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=125 CharacterOffsetEnd=126 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=or CharacterOffsetBegin=127 CharacterOffsetEnd=129 PartOfSpeech=CC Lemma=or NamedEntityTag=O SentimentClass=Neutral]
[Text=better CharacterOffsetBegin=130 CharacterOffsetEnd=136 PartOfSpeech=JJR Lemma=better NamedEntityTag=O SentimentClass=Very positive]
[Text=on CharacterOffsetBegin=137 CharacterOffsetEnd=139 PartOfSpeech=IN Lemma=on NamedEntityTag=O SentimentClass=Neutral]
[Text=a CharacterOffsetBegin=140 CharacterOffsetEnd=141 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=web CharacterOffsetBegin=142 CharacterOffsetEnd=145 PartOfSpeech=NN Lemma=web NamedEntityTag=O SentimentClass=Neutral]
[Text=server CharacterOffsetBegin=146 CharacterOffsetEnd=152 PartOfSpeech=NN Lemma=server NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (ADVP (RB really))
      (VP
        (VP (VB speed)
          (PRT (RP up))
          (NP (DT the) (NN development)))
        (CC and)
        (VP (VB avoid)
          (NP (NN error) (NNS entries))
          (SBAR (IN if)
            (S
              (NP (PDT such) (DT an) (NN XML) (NN schema))
              (VP (VBD was)
                (VP (VBN made)
                  (ADJP
                    (ADJP (JJ available)
                      (PP (IN in)
                        (NP (DT the) (NN distribution))))
                    (, ,)
                    (CC or)
                    (ADJP (JJR better)))
                  (PP (IN on)
                    (NP (DT a) (NN web) (NN server))))))))))))

root(ROOT-0, speed-4)
nsubj(speed-4, It-1)
nsubj(avoid-9, It-1)
aux(speed-4, would-2)
advmod(speed-4, really-3)
compound:prt(speed-4, up-5)
det(development-7, the-6)
dobj(speed-4, development-7)
cc(speed-4, and-8)
conj:and(speed-4, avoid-9)
compound(entries-11, error-10)
dobj(avoid-9, entries-11)
mark(made-18, if-12)
det:predet(schema-16, such-13)
det(schema-16, an-14)
compound(schema-16, XML-15)
nsubjpass(made-18, schema-16)
auxpass(made-18, was-17)
advcl:if(avoid-9, made-18)
xcomp(made-18, available-19)
case(distribution-22, in-20)
det(distribution-22, the-21)
nmod:in(available-19, distribution-22)
punct(available-19, ,-23)
cc(available-19, or-24)
xcomp(made-18, better-25)
conj:or(available-19, better-25)
case(server-29, on-26)
det(server-29, a-27)
compound(server-29, web-28)
nmod:on(made-18, server-29)


==============Pipeline Pretty Print==============
Sentence #1 (29 tokens, sentiment: Negative):
It would really speed up the development and avoid error entries if such an XML schema was made available in the distribution, or better on a web server
[Text=It CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=would CharacterOffsetBegin=3 CharacterOffsetEnd=8 PartOfSpeech=MD Lemma=would NamedEntityTag=O SentimentClass=Neutral]
[Text=really CharacterOffsetBegin=9 CharacterOffsetEnd=15 PartOfSpeech=RB Lemma=really NamedEntityTag=O SentimentClass=Neutral]
[Text=speed CharacterOffsetBegin=16 CharacterOffsetEnd=21 PartOfSpeech=VB Lemma=speed NamedEntityTag=O SentimentClass=Neutral]
[Text=up CharacterOffsetBegin=22 CharacterOffsetEnd=24 PartOfSpeech=RP Lemma=up NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=25 CharacterOffsetEnd=28 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=development CharacterOffsetBegin=29 CharacterOffsetEnd=40 PartOfSpeech=NN Lemma=development NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=41 CharacterOffsetEnd=44 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=avoid CharacterOffsetBegin=45 CharacterOffsetEnd=50 PartOfSpeech=VB Lemma=avoid NamedEntityTag=O SentimentClass=Negative]
[Text=error CharacterOffsetBegin=51 CharacterOffsetEnd=56 PartOfSpeech=NN Lemma=error NamedEntityTag=O SentimentClass=Negative]
[Text=entries CharacterOffsetBegin=57 CharacterOffsetEnd=64 PartOfSpeech=NNS Lemma=entry NamedEntityTag=O SentimentClass=Neutral]
[Text=if CharacterOffsetBegin=65 CharacterOffsetEnd=67 PartOfSpeech=IN Lemma=if NamedEntityTag=O SentimentClass=Neutral]
[Text=such CharacterOffsetBegin=68 CharacterOffsetEnd=72 PartOfSpeech=PDT Lemma=such NamedEntityTag=O SentimentClass=Neutral]
[Text=an CharacterOffsetBegin=73 CharacterOffsetEnd=75 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=XML CharacterOffsetBegin=76 CharacterOffsetEnd=79 PartOfSpeech=NN Lemma=xml NamedEntityTag=O SentimentClass=Neutral]
[Text=schema CharacterOffsetBegin=80 CharacterOffsetEnd=86 PartOfSpeech=NN Lemma=schema NamedEntityTag=O SentimentClass=Neutral]
[Text=was CharacterOffsetBegin=87 CharacterOffsetEnd=90 PartOfSpeech=VBD Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=made CharacterOffsetBegin=91 CharacterOffsetEnd=95 PartOfSpeech=VBN Lemma=make NamedEntityTag=O SentimentClass=Neutral]
[Text=available CharacterOffsetBegin=96 CharacterOffsetEnd=105 PartOfSpeech=JJ Lemma=available NamedEntityTag=O SentimentClass=Positive]
[Text=in CharacterOffsetBegin=106 CharacterOffsetEnd=108 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=109 CharacterOffsetEnd=112 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=distribution CharacterOffsetBegin=113 CharacterOffsetEnd=125 PartOfSpeech=NN Lemma=distribution NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=125 CharacterOffsetEnd=126 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=or CharacterOffsetBegin=127 CharacterOffsetEnd=129 PartOfSpeech=CC Lemma=or NamedEntityTag=O SentimentClass=Neutral]
[Text=better CharacterOffsetBegin=130 CharacterOffsetEnd=136 PartOfSpeech=JJR Lemma=better NamedEntityTag=O SentimentClass=Very positive]
[Text=on CharacterOffsetBegin=137 CharacterOffsetEnd=139 PartOfSpeech=IN Lemma=on NamedEntityTag=O SentimentClass=Neutral]
[Text=a CharacterOffsetBegin=140 CharacterOffsetEnd=141 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=web CharacterOffsetBegin=142 CharacterOffsetEnd=145 PartOfSpeech=NN Lemma=web NamedEntityTag=O SentimentClass=Neutral]
[Text=server CharacterOffsetBegin=146 CharacterOffsetEnd=152 PartOfSpeech=NN Lemma=server NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (ADVP (RB really))
      (VP
        (VP (VB speed)
          (PRT (RP up))
          (NP (DT the) (NN development)))
        (CC and)
        (VP (VB avoid)
          (NP (NN error) (NNS entries))
          (SBAR (IN if)
            (S
              (NP (PDT such) (DT an) (NN XML) (NN schema))
              (VP (VBD was)
                (VP (VBN made)
                  (ADJP
                    (ADJP (JJ available)
                      (PP (IN in)
                        (NP (DT the) (NN distribution))))
                    (, ,)
                    (CC or)
                    (ADJP (JJR better)))
                  (PP (IN on)
                    (NP (DT a) (NN web) (NN server))))))))))))

root(ROOT-0, speed-4)
nsubj(speed-4, It-1)
nsubj(avoid-9, It-1)
aux(speed-4, would-2)
advmod(speed-4, really-3)
compound:prt(speed-4, up-5)
det(development-7, the-6)
dobj(speed-4, development-7)
cc(speed-4, and-8)
conj:and(speed-4, avoid-9)
compound(entries-11, error-10)
dobj(avoid-9, entries-11)
mark(made-18, if-12)
det:predet(schema-16, such-13)
det(schema-16, an-14)
compound(schema-16, XML-15)
nsubjpass(made-18, schema-16)
auxpass(made-18, was-17)
advcl:if(avoid-9, made-18)
xcomp(made-18, available-19)
case(distribution-22, in-20)
det(distribution-22, the-21)
nmod:in(available-19, distribution-22)
punct(available-19, ,-23)
cc(available-19, or-24)
xcomp(made-18, better-25)
conj:or(available-19, better-25)
case(server-29, on-26)
det(server-29, a-27)
compound(server-29, web-28)
nmod:on(made-18, server-29)


==============Pipeline Pretty Print==============
Sentence #1 (17 tokens, sentiment: Negative):
an alternate that might make sense is to have our code actively register listeners against core instead
[Text=an CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=alternate CharacterOffsetBegin=3 CharacterOffsetEnd=12 PartOfSpeech=NN Lemma=alternate NamedEntityTag=O SentimentClass=Neutral]
[Text=that CharacterOffsetBegin=13 CharacterOffsetEnd=17 PartOfSpeech=WDT Lemma=that NamedEntityTag=O SentimentClass=Neutral]
[Text=might CharacterOffsetBegin=18 CharacterOffsetEnd=23 PartOfSpeech=MD Lemma=might NamedEntityTag=O SentimentClass=Neutral]
[Text=make CharacterOffsetBegin=24 CharacterOffsetEnd=28 PartOfSpeech=VB Lemma=make NamedEntityTag=O SentimentClass=Neutral]
[Text=sense CharacterOffsetBegin=29 CharacterOffsetEnd=34 PartOfSpeech=NN Lemma=sense NamedEntityTag=O SentimentClass=Neutral]
[Text=is CharacterOffsetBegin=35 CharacterOffsetEnd=37 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=38 CharacterOffsetEnd=40 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=have CharacterOffsetBegin=41 CharacterOffsetEnd=45 PartOfSpeech=VB Lemma=have NamedEntityTag=O SentimentClass=Neutral]
[Text=our CharacterOffsetBegin=46 CharacterOffsetEnd=49 PartOfSpeech=PRP$ Lemma=we NamedEntityTag=O SentimentClass=Neutral]
[Text=code CharacterOffsetBegin=50 CharacterOffsetEnd=54 PartOfSpeech=NN Lemma=code NamedEntityTag=O SentimentClass=Neutral]
[Text=actively CharacterOffsetBegin=55 CharacterOffsetEnd=63 PartOfSpeech=RB Lemma=actively NamedEntityTag=O SentimentClass=Neutral]
[Text=register CharacterOffsetBegin=64 CharacterOffsetEnd=72 PartOfSpeech=VBP Lemma=register NamedEntityTag=O SentimentClass=Neutral]
[Text=listeners CharacterOffsetBegin=73 CharacterOffsetEnd=82 PartOfSpeech=NNS Lemma=listener NamedEntityTag=O SentimentClass=Neutral]
[Text=against CharacterOffsetBegin=83 CharacterOffsetEnd=90 PartOfSpeech=IN Lemma=against NamedEntityTag=O SentimentClass=Neutral]
[Text=core CharacterOffsetBegin=91 CharacterOffsetEnd=95 PartOfSpeech=NN Lemma=core NamedEntityTag=O SentimentClass=Neutral]
[Text=instead CharacterOffsetBegin=96 CharacterOffsetEnd=103 PartOfSpeech=RB Lemma=instead NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP
      (NP (DT an) (NN alternate))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (MD might)
            (VP (VB make)
              (NP (NN sense)))))))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB have)
            (S
              (NP (PRP$ our) (NN code))
              (ADVP (RB actively))
              (VP (VBP register)
                (NP
                  (NP (NNS listeners))
                  (PP (IN against)
                    (NP (NN core))))
                (ADVP (RB instead))))))))))

root(ROOT-0, is-7)
det(alternate-2, an-1)
nsubj(make-5, alternate-2)
nsubj(is-7, alternate-2)
nsubj:xsubj(have-9, alternate-2)
ref(alternate-2, that-3)
aux(make-5, might-4)
acl:relcl(alternate-2, make-5)
dobj(make-5, sense-6)
mark(have-9, to-8)
xcomp(is-7, have-9)
nmod:poss(code-11, our-10)
nsubj(register-13, code-11)
advmod(register-13, actively-12)
ccomp(have-9, register-13)
dobj(register-13, listeners-14)
case(core-16, against-15)
nmod:against(listeners-14, core-16)
advmod(register-13, instead-17)


==============Pipeline Pretty Print==============
Sentence #1 (7 tokens, sentiment: Positive):
This should be easily possible using cookies
[Text=This CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=DT Lemma=this NamedEntityTag=O SentimentClass=Neutral]
[Text=should CharacterOffsetBegin=5 CharacterOffsetEnd=11 PartOfSpeech=MD Lemma=should NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=12 CharacterOffsetEnd=14 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=easily CharacterOffsetBegin=15 CharacterOffsetEnd=21 PartOfSpeech=RB Lemma=easily NamedEntityTag=O SentimentClass=Positive]
[Text=possible CharacterOffsetBegin=22 CharacterOffsetEnd=30 PartOfSpeech=JJ Lemma=possible NamedEntityTag=O SentimentClass=Neutral]
[Text=using CharacterOffsetBegin=31 CharacterOffsetEnd=36 PartOfSpeech=VBG Lemma=use NamedEntityTag=O SentimentClass=Neutral]
[Text=cookies CharacterOffsetBegin=37 CharacterOffsetEnd=44 PartOfSpeech=NNS Lemma=cookie NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT This))
    (VP (MD should)
      (VP (VB be)
        (ADJP (RB easily) (JJ possible))
        (S
          (VP (VBG using)
            (NP (NNS cookies))))))))

root(ROOT-0, possible-5)
nsubj(possible-5, This-1)
aux(possible-5, should-2)
cop(possible-5, be-3)
advmod(possible-5, easily-4)
xcomp(possible-5, using-6)
dobj(using-6, cookies-7)


==============Pipeline Pretty Print==============
Sentence #1 (7 tokens, sentiment: Positive):
This should be easily possible using cookies
[Text=This CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=DT Lemma=this NamedEntityTag=O SentimentClass=Neutral]
[Text=should CharacterOffsetBegin=5 CharacterOffsetEnd=11 PartOfSpeech=MD Lemma=should NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=12 CharacterOffsetEnd=14 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=easily CharacterOffsetBegin=15 CharacterOffsetEnd=21 PartOfSpeech=RB Lemma=easily NamedEntityTag=O SentimentClass=Positive]
[Text=possible CharacterOffsetBegin=22 CharacterOffsetEnd=30 PartOfSpeech=JJ Lemma=possible NamedEntityTag=O SentimentClass=Neutral]
[Text=using CharacterOffsetBegin=31 CharacterOffsetEnd=36 PartOfSpeech=VBG Lemma=use NamedEntityTag=O SentimentClass=Neutral]
[Text=cookies CharacterOffsetBegin=37 CharacterOffsetEnd=44 PartOfSpeech=NNS Lemma=cookie NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT This))
    (VP (MD should)
      (VP (VB be)
        (ADJP (RB easily) (JJ possible))
        (S
          (VP (VBG using)
            (NP (NNS cookies))))))))

root(ROOT-0, possible-5)
nsubj(possible-5, This-1)
aux(possible-5, should-2)
cop(possible-5, be-3)
advmod(possible-5, easily-4)
xcomp(possible-5, using-6)
dobj(using-6, cookies-7)


==============Pipeline Pretty Print==============
Sentence #1 (21 tokens, sentiment: Negative):
It should now be possible for AJDT to work more closely with it and get features like eager parsing to work
[Text=It CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=should CharacterOffsetBegin=3 CharacterOffsetEnd=9 PartOfSpeech=MD Lemma=should NamedEntityTag=O SentimentClass=Neutral]
[Text=now CharacterOffsetBegin=10 CharacterOffsetEnd=13 PartOfSpeech=RB Lemma=now NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=14 CharacterOffsetEnd=16 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=possible CharacterOffsetBegin=17 CharacterOffsetEnd=25 PartOfSpeech=JJ Lemma=possible NamedEntityTag=O SentimentClass=Neutral]
[Text=for CharacterOffsetBegin=26 CharacterOffsetEnd=29 PartOfSpeech=IN Lemma=for NamedEntityTag=O SentimentClass=Neutral]
[Text=AJDT CharacterOffsetBegin=30 CharacterOffsetEnd=34 PartOfSpeech=NNP Lemma=AJDT NamedEntityTag=ORGANIZATION SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=35 CharacterOffsetEnd=37 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=work CharacterOffsetBegin=38 CharacterOffsetEnd=42 PartOfSpeech=VB Lemma=work NamedEntityTag=O SentimentClass=Neutral]
[Text=more CharacterOffsetBegin=43 CharacterOffsetEnd=47 PartOfSpeech=RBR Lemma=more NamedEntityTag=O SentimentClass=Neutral]
[Text=closely CharacterOffsetBegin=48 CharacterOffsetEnd=55 PartOfSpeech=RB Lemma=closely NamedEntityTag=O SentimentClass=Neutral]
[Text=with CharacterOffsetBegin=56 CharacterOffsetEnd=60 PartOfSpeech=IN Lemma=with NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=61 CharacterOffsetEnd=63 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=64 CharacterOffsetEnd=67 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=get CharacterOffsetBegin=68 CharacterOffsetEnd=71 PartOfSpeech=VB Lemma=get NamedEntityTag=O SentimentClass=Neutral]
[Text=features CharacterOffsetBegin=72 CharacterOffsetEnd=80 PartOfSpeech=NNS Lemma=feature NamedEntityTag=O SentimentClass=Neutral]
[Text=like CharacterOffsetBegin=81 CharacterOffsetEnd=85 PartOfSpeech=IN Lemma=like NamedEntityTag=O SentimentClass=Neutral]
[Text=eager CharacterOffsetBegin=86 CharacterOffsetEnd=91 PartOfSpeech=JJ Lemma=eager NamedEntityTag=O SentimentClass=Neutral]
[Text=parsing CharacterOffsetBegin=92 CharacterOffsetEnd=99 PartOfSpeech=NN Lemma=parsing NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=100 CharacterOffsetEnd=102 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=work CharacterOffsetBegin=103 CharacterOffsetEnd=107 PartOfSpeech=VB Lemma=work NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP It))
    (VP (MD should)
      (ADVP (RB now))
      (VP (VB be)
        (ADJP (JJ possible)
          (PP (IN for)
            (NP (NNP AJDT))))
        (S
          (VP (TO to)
            (VP
              (VP (VB work)
                (ADVP (RBR more) (RB closely))
                (PP (IN with)
                  (NP (PRP it))))
              (CC and)
              (VP (VB get)
                (NP
                  (NP (NNS features))
                  (PP (IN like)
                    (NP (JJ eager) (NN parsing))))
                (S
                  (VP (TO to)
                    (VP (VB work))))))))))))

root(ROOT-0, possible-5)
nsubj(possible-5, It-1)
nsubj:xsubj(work-9, It-1)
nsubj:xsubj(get-15, It-1)
aux(possible-5, should-2)
advmod(possible-5, now-3)
cop(possible-5, be-4)
case(AJDT-7, for-6)
nmod:for(possible-5, AJDT-7)
mark(work-9, to-8)
xcomp(possible-5, work-9)
advmod(closely-11, more-10)
advmod(work-9, closely-11)
case(it-13, with-12)
nmod:with(work-9, it-13)
cc(work-9, and-14)
xcomp(possible-5, get-15)
conj:and(work-9, get-15)
dobj(get-15, features-16)
case(parsing-19, like-17)
amod(parsing-19, eager-18)
nmod:like(features-16, parsing-19)
mark(work-21, to-20)
advcl:to(get-15, work-21)

Coreference set:
	(1,13,[13,14]) -> (1,7,[7,8]), that is: "it" -> "AJDT"

==============Pipeline Pretty Print==============
Sentence #1 (21 tokens, sentiment: Negative):
It should now be possible for AJDT to work more closely with it and get features like eager parsing to work
[Text=It CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=should CharacterOffsetBegin=3 CharacterOffsetEnd=9 PartOfSpeech=MD Lemma=should NamedEntityTag=O SentimentClass=Neutral]
[Text=now CharacterOffsetBegin=10 CharacterOffsetEnd=13 PartOfSpeech=RB Lemma=now NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=14 CharacterOffsetEnd=16 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=possible CharacterOffsetBegin=17 CharacterOffsetEnd=25 PartOfSpeech=JJ Lemma=possible NamedEntityTag=O SentimentClass=Neutral]
[Text=for CharacterOffsetBegin=26 CharacterOffsetEnd=29 PartOfSpeech=IN Lemma=for NamedEntityTag=O SentimentClass=Neutral]
[Text=AJDT CharacterOffsetBegin=30 CharacterOffsetEnd=34 PartOfSpeech=NNP Lemma=AJDT NamedEntityTag=ORGANIZATION SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=35 CharacterOffsetEnd=37 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=work CharacterOffsetBegin=38 CharacterOffsetEnd=42 PartOfSpeech=VB Lemma=work NamedEntityTag=O SentimentClass=Neutral]
[Text=more CharacterOffsetBegin=43 CharacterOffsetEnd=47 PartOfSpeech=RBR Lemma=more NamedEntityTag=O SentimentClass=Neutral]
[Text=closely CharacterOffsetBegin=48 CharacterOffsetEnd=55 PartOfSpeech=RB Lemma=closely NamedEntityTag=O SentimentClass=Neutral]
[Text=with CharacterOffsetBegin=56 CharacterOffsetEnd=60 PartOfSpeech=IN Lemma=with NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=61 CharacterOffsetEnd=63 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=64 CharacterOffsetEnd=67 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=get CharacterOffsetBegin=68 CharacterOffsetEnd=71 PartOfSpeech=VB Lemma=get NamedEntityTag=O SentimentClass=Neutral]
[Text=features CharacterOffsetBegin=72 CharacterOffsetEnd=80 PartOfSpeech=NNS Lemma=feature NamedEntityTag=O SentimentClass=Neutral]
[Text=like CharacterOffsetBegin=81 CharacterOffsetEnd=85 PartOfSpeech=IN Lemma=like NamedEntityTag=O SentimentClass=Neutral]
[Text=eager CharacterOffsetBegin=86 CharacterOffsetEnd=91 PartOfSpeech=JJ Lemma=eager NamedEntityTag=O SentimentClass=Neutral]
[Text=parsing CharacterOffsetBegin=92 CharacterOffsetEnd=99 PartOfSpeech=NN Lemma=parsing NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=100 CharacterOffsetEnd=102 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=work CharacterOffsetBegin=103 CharacterOffsetEnd=107 PartOfSpeech=VB Lemma=work NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP It))
    (VP (MD should)
      (ADVP (RB now))
      (VP (VB be)
        (ADJP (JJ possible)
          (PP (IN for)
            (NP (NNP AJDT))))
        (S
          (VP (TO to)
            (VP
              (VP (VB work)
                (ADVP (RBR more) (RB closely))
                (PP (IN with)
                  (NP (PRP it))))
              (CC and)
              (VP (VB get)
                (NP
                  (NP (NNS features))
                  (PP (IN like)
                    (NP (JJ eager) (NN parsing))))
                (S
                  (VP (TO to)
                    (VP (VB work))))))))))))

root(ROOT-0, possible-5)
nsubj(possible-5, It-1)
nsubj:xsubj(work-9, It-1)
nsubj:xsubj(get-15, It-1)
aux(possible-5, should-2)
advmod(possible-5, now-3)
cop(possible-5, be-4)
case(AJDT-7, for-6)
nmod:for(possible-5, AJDT-7)
mark(work-9, to-8)
xcomp(possible-5, work-9)
advmod(closely-11, more-10)
advmod(work-9, closely-11)
case(it-13, with-12)
nmod:with(work-9, it-13)
cc(work-9, and-14)
xcomp(possible-5, get-15)
conj:and(work-9, get-15)
dobj(get-15, features-16)
case(parsing-19, like-17)
amod(parsing-19, eager-18)
nmod:like(features-16, parsing-19)
mark(work-21, to-20)
advcl:to(get-15, work-21)

Coreference set:
	(1,13,[13,14]) -> (1,7,[7,8]), that is: "it" -> "AJDT"

==============Pipeline Pretty Print==============
Sentence #1 (10 tokens, sentiment: Neutral):
Make auto fill to finish table names or column.
[Text=Make CharacterOffsetBegin=0 CharacterOffsetEnd=4 PartOfSpeech=VB Lemma=make NamedEntityTag=O SentimentClass=Neutral]
[Text=auto CharacterOffsetBegin=5 CharacterOffsetEnd=9 PartOfSpeech=NN Lemma=auto NamedEntityTag=O SentimentClass=Neutral]
[Text=fill CharacterOffsetBegin=10 CharacterOffsetEnd=14 PartOfSpeech=NN Lemma=fill NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=15 CharacterOffsetEnd=17 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=finish CharacterOffsetBegin=18 CharacterOffsetEnd=24 PartOfSpeech=VB Lemma=finish NamedEntityTag=O SentimentClass=Neutral]
[Text=table CharacterOffsetBegin=25 CharacterOffsetEnd=30 PartOfSpeech=NN Lemma=table NamedEntityTag=O SentimentClass=Neutral]
[Text=names CharacterOffsetBegin=31 CharacterOffsetEnd=36 PartOfSpeech=NNS Lemma=name NamedEntityTag=O SentimentClass=Neutral]
[Text=or CharacterOffsetBegin=37 CharacterOffsetEnd=39 PartOfSpeech=CC Lemma=or NamedEntityTag=O SentimentClass=Neutral]
[Text=column CharacterOffsetBegin=40 CharacterOffsetEnd=46 PartOfSpeech=NN Lemma=column NamedEntityTag=O SentimentClass=Neutral]
[Text=. CharacterOffsetBegin=46 CharacterOffsetEnd=47 PartOfSpeech=. Lemma=. NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (VP (VB Make)
      (S
        (NP (NN auto) (NN fill))
        (VP (TO to)
          (VP (VB finish)
            (NP
              (NP (NN table) (NNS names))
              (CC or)
              (NP (NN column)))))))
    (. .)))

root(ROOT-0, Make-1)
compound(fill-3, auto-2)
dobj(Make-1, fill-3)
nsubj:xsubj(finish-5, fill-3)
mark(finish-5, to-4)
xcomp(Make-1, finish-5)
compound(names-7, table-6)
dobj(finish-5, names-7)
cc(names-7, or-8)
dobj(finish-5, column-9)
conj:or(names-7, column-9)
punct(Make-1, .-10)


==============Pipeline Pretty Print==============
Sentence #1 (21 tokens, sentiment: Negative):
It should now be possible for AJDT to work more closely with it and get features like eager parsing to work
[Text=It CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=should CharacterOffsetBegin=3 CharacterOffsetEnd=9 PartOfSpeech=MD Lemma=should NamedEntityTag=O SentimentClass=Neutral]
[Text=now CharacterOffsetBegin=10 CharacterOffsetEnd=13 PartOfSpeech=RB Lemma=now NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=14 CharacterOffsetEnd=16 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=possible CharacterOffsetBegin=17 CharacterOffsetEnd=25 PartOfSpeech=JJ Lemma=possible NamedEntityTag=O SentimentClass=Neutral]
[Text=for CharacterOffsetBegin=26 CharacterOffsetEnd=29 PartOfSpeech=IN Lemma=for NamedEntityTag=O SentimentClass=Neutral]
[Text=AJDT CharacterOffsetBegin=30 CharacterOffsetEnd=34 PartOfSpeech=NNP Lemma=AJDT NamedEntityTag=ORGANIZATION SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=35 CharacterOffsetEnd=37 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=work CharacterOffsetBegin=38 CharacterOffsetEnd=42 PartOfSpeech=VB Lemma=work NamedEntityTag=O SentimentClass=Neutral]
[Text=more CharacterOffsetBegin=43 CharacterOffsetEnd=47 PartOfSpeech=RBR Lemma=more NamedEntityTag=O SentimentClass=Neutral]
[Text=closely CharacterOffsetBegin=48 CharacterOffsetEnd=55 PartOfSpeech=RB Lemma=closely NamedEntityTag=O SentimentClass=Neutral]
[Text=with CharacterOffsetBegin=56 CharacterOffsetEnd=60 PartOfSpeech=IN Lemma=with NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=61 CharacterOffsetEnd=63 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=64 CharacterOffsetEnd=67 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=get CharacterOffsetBegin=68 CharacterOffsetEnd=71 PartOfSpeech=VB Lemma=get NamedEntityTag=O SentimentClass=Neutral]
[Text=features CharacterOffsetBegin=72 CharacterOffsetEnd=80 PartOfSpeech=NNS Lemma=feature NamedEntityTag=O SentimentClass=Neutral]
[Text=like CharacterOffsetBegin=81 CharacterOffsetEnd=85 PartOfSpeech=IN Lemma=like NamedEntityTag=O SentimentClass=Neutral]
[Text=eager CharacterOffsetBegin=86 CharacterOffsetEnd=91 PartOfSpeech=JJ Lemma=eager NamedEntityTag=O SentimentClass=Neutral]
[Text=parsing CharacterOffsetBegin=92 CharacterOffsetEnd=99 PartOfSpeech=NN Lemma=parsing NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=100 CharacterOffsetEnd=102 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=work CharacterOffsetBegin=103 CharacterOffsetEnd=107 PartOfSpeech=VB Lemma=work NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP It))
    (VP (MD should)
      (ADVP (RB now))
      (VP (VB be)
        (ADJP (JJ possible)
          (PP (IN for)
            (NP (NNP AJDT))))
        (S
          (VP (TO to)
            (VP
              (VP (VB work)
                (ADVP (RBR more) (RB closely))
                (PP (IN with)
                  (NP (PRP it))))
              (CC and)
              (VP (VB get)
                (NP
                  (NP (NNS features))
                  (PP (IN like)
                    (NP (JJ eager) (NN parsing))))
                (S
                  (VP (TO to)
                    (VP (VB work))))))))))))

root(ROOT-0, possible-5)
nsubj(possible-5, It-1)
nsubj:xsubj(work-9, It-1)
nsubj:xsubj(get-15, It-1)
aux(possible-5, should-2)
advmod(possible-5, now-3)
cop(possible-5, be-4)
case(AJDT-7, for-6)
nmod:for(possible-5, AJDT-7)
mark(work-9, to-8)
xcomp(possible-5, work-9)
advmod(closely-11, more-10)
advmod(work-9, closely-11)
case(it-13, with-12)
nmod:with(work-9, it-13)
cc(work-9, and-14)
xcomp(possible-5, get-15)
conj:and(work-9, get-15)
dobj(get-15, features-16)
case(parsing-19, like-17)
amod(parsing-19, eager-18)
nmod:like(features-16, parsing-19)
mark(work-21, to-20)
advcl:to(get-15, work-21)

Coreference set:
	(1,13,[13,14]) -> (1,7,[7,8]), that is: "it" -> "AJDT"

==============Pipeline Pretty Print==============
Sentence #1 (21 tokens, sentiment: Negative):
It should now be possible for AJDT to work more closely with it and get features like eager parsing to work
[Text=It CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=should CharacterOffsetBegin=3 CharacterOffsetEnd=9 PartOfSpeech=MD Lemma=should NamedEntityTag=O SentimentClass=Neutral]
[Text=now CharacterOffsetBegin=10 CharacterOffsetEnd=13 PartOfSpeech=RB Lemma=now NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=14 CharacterOffsetEnd=16 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=possible CharacterOffsetBegin=17 CharacterOffsetEnd=25 PartOfSpeech=JJ Lemma=possible NamedEntityTag=O SentimentClass=Neutral]
[Text=for CharacterOffsetBegin=26 CharacterOffsetEnd=29 PartOfSpeech=IN Lemma=for NamedEntityTag=O SentimentClass=Neutral]
[Text=AJDT CharacterOffsetBegin=30 CharacterOffsetEnd=34 PartOfSpeech=NNP Lemma=AJDT NamedEntityTag=ORGANIZATION SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=35 CharacterOffsetEnd=37 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=work CharacterOffsetBegin=38 CharacterOffsetEnd=42 PartOfSpeech=VB Lemma=work NamedEntityTag=O SentimentClass=Neutral]
[Text=more CharacterOffsetBegin=43 CharacterOffsetEnd=47 PartOfSpeech=RBR Lemma=more NamedEntityTag=O SentimentClass=Neutral]
[Text=closely CharacterOffsetBegin=48 CharacterOffsetEnd=55 PartOfSpeech=RB Lemma=closely NamedEntityTag=O SentimentClass=Neutral]
[Text=with CharacterOffsetBegin=56 CharacterOffsetEnd=60 PartOfSpeech=IN Lemma=with NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=61 CharacterOffsetEnd=63 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=64 CharacterOffsetEnd=67 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=get CharacterOffsetBegin=68 CharacterOffsetEnd=71 PartOfSpeech=VB Lemma=get NamedEntityTag=O SentimentClass=Neutral]
[Text=features CharacterOffsetBegin=72 CharacterOffsetEnd=80 PartOfSpeech=NNS Lemma=feature NamedEntityTag=O SentimentClass=Neutral]
[Text=like CharacterOffsetBegin=81 CharacterOffsetEnd=85 PartOfSpeech=IN Lemma=like NamedEntityTag=O SentimentClass=Neutral]
[Text=eager CharacterOffsetBegin=86 CharacterOffsetEnd=91 PartOfSpeech=JJ Lemma=eager NamedEntityTag=O SentimentClass=Neutral]
[Text=parsing CharacterOffsetBegin=92 CharacterOffsetEnd=99 PartOfSpeech=NN Lemma=parsing NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=100 CharacterOffsetEnd=102 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=work CharacterOffsetBegin=103 CharacterOffsetEnd=107 PartOfSpeech=VB Lemma=work NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP It))
    (VP (MD should)
      (ADVP (RB now))
      (VP (VB be)
        (ADJP (JJ possible)
          (PP (IN for)
            (NP (NNP AJDT))))
        (S
          (VP (TO to)
            (VP
              (VP (VB work)
                (ADVP (RBR more) (RB closely))
                (PP (IN with)
                  (NP (PRP it))))
              (CC and)
              (VP (VB get)
                (NP
                  (NP (NNS features))
                  (PP (IN like)
                    (NP (JJ eager) (NN parsing))))
                (S
                  (VP (TO to)
                    (VP (VB work))))))))))))

root(ROOT-0, possible-5)
nsubj(possible-5, It-1)
nsubj:xsubj(work-9, It-1)
nsubj:xsubj(get-15, It-1)
aux(possible-5, should-2)
advmod(possible-5, now-3)
cop(possible-5, be-4)
case(AJDT-7, for-6)
nmod:for(possible-5, AJDT-7)
mark(work-9, to-8)
xcomp(possible-5, work-9)
advmod(closely-11, more-10)
advmod(work-9, closely-11)
case(it-13, with-12)
nmod:with(work-9, it-13)
cc(work-9, and-14)
xcomp(possible-5, get-15)
conj:and(work-9, get-15)
dobj(get-15, features-16)
case(parsing-19, like-17)
amod(parsing-19, eager-18)
nmod:like(features-16, parsing-19)
mark(work-21, to-20)
advcl:to(get-15, work-21)

Coreference set:
	(1,13,[13,14]) -> (1,7,[7,8]), that is: "it" -> "AJDT"

==============Pipeline Pretty Print==============
Sentence #1 (21 tokens, sentiment: Negative):
It should now be possible for AJDT to work more closely with it and get features like eager parsing to work
[Text=It CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=should CharacterOffsetBegin=3 CharacterOffsetEnd=9 PartOfSpeech=MD Lemma=should NamedEntityTag=O SentimentClass=Neutral]
[Text=now CharacterOffsetBegin=10 CharacterOffsetEnd=13 PartOfSpeech=RB Lemma=now NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=14 CharacterOffsetEnd=16 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=possible CharacterOffsetBegin=17 CharacterOffsetEnd=25 PartOfSpeech=JJ Lemma=possible NamedEntityTag=O SentimentClass=Neutral]
[Text=for CharacterOffsetBegin=26 CharacterOffsetEnd=29 PartOfSpeech=IN Lemma=for NamedEntityTag=O SentimentClass=Neutral]
[Text=AJDT CharacterOffsetBegin=30 CharacterOffsetEnd=34 PartOfSpeech=NNP Lemma=AJDT NamedEntityTag=ORGANIZATION SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=35 CharacterOffsetEnd=37 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=work CharacterOffsetBegin=38 CharacterOffsetEnd=42 PartOfSpeech=VB Lemma=work NamedEntityTag=O SentimentClass=Neutral]
[Text=more CharacterOffsetBegin=43 CharacterOffsetEnd=47 PartOfSpeech=RBR Lemma=more NamedEntityTag=O SentimentClass=Neutral]
[Text=closely CharacterOffsetBegin=48 CharacterOffsetEnd=55 PartOfSpeech=RB Lemma=closely NamedEntityTag=O SentimentClass=Neutral]
[Text=with CharacterOffsetBegin=56 CharacterOffsetEnd=60 PartOfSpeech=IN Lemma=with NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=61 CharacterOffsetEnd=63 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=64 CharacterOffsetEnd=67 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=get CharacterOffsetBegin=68 CharacterOffsetEnd=71 PartOfSpeech=VB Lemma=get NamedEntityTag=O SentimentClass=Neutral]
[Text=features CharacterOffsetBegin=72 CharacterOffsetEnd=80 PartOfSpeech=NNS Lemma=feature NamedEntityTag=O SentimentClass=Neutral]
[Text=like CharacterOffsetBegin=81 CharacterOffsetEnd=85 PartOfSpeech=IN Lemma=like NamedEntityTag=O SentimentClass=Neutral]
[Text=eager CharacterOffsetBegin=86 CharacterOffsetEnd=91 PartOfSpeech=JJ Lemma=eager NamedEntityTag=O SentimentClass=Neutral]
[Text=parsing CharacterOffsetBegin=92 CharacterOffsetEnd=99 PartOfSpeech=NN Lemma=parsing NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=100 CharacterOffsetEnd=102 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=work CharacterOffsetBegin=103 CharacterOffsetEnd=107 PartOfSpeech=VB Lemma=work NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP It))
    (VP (MD should)
      (ADVP (RB now))
      (VP (VB be)
        (ADJP (JJ possible)
          (PP (IN for)
            (NP (NNP AJDT))))
        (S
          (VP (TO to)
            (VP
              (VP (VB work)
                (ADVP (RBR more) (RB closely))
                (PP (IN with)
                  (NP (PRP it))))
              (CC and)
              (VP (VB get)
                (NP
                  (NP (NNS features))
                  (PP (IN like)
                    (NP (JJ eager) (NN parsing))))
                (S
                  (VP (TO to)
                    (VP (VB work))))))))))))

root(ROOT-0, possible-5)
nsubj(possible-5, It-1)
nsubj:xsubj(work-9, It-1)
nsubj:xsubj(get-15, It-1)
aux(possible-5, should-2)
advmod(possible-5, now-3)
cop(possible-5, be-4)
case(AJDT-7, for-6)
nmod:for(possible-5, AJDT-7)
mark(work-9, to-8)
xcomp(possible-5, work-9)
advmod(closely-11, more-10)
advmod(work-9, closely-11)
case(it-13, with-12)
nmod:with(work-9, it-13)
cc(work-9, and-14)
xcomp(possible-5, get-15)
conj:and(work-9, get-15)
dobj(get-15, features-16)
case(parsing-19, like-17)
amod(parsing-19, eager-18)
nmod:like(features-16, parsing-19)
mark(work-21, to-20)
advcl:to(get-15, work-21)

Coreference set:
	(1,13,[13,14]) -> (1,7,[7,8]), that is: "it" -> "AJDT"

==============Pipeline Pretty Print==============
Sentence #1 (29 tokens, sentiment: Neutral):
I mean if someone save name of file into database, it would be also possible to add relative path to the image and show him direct in db
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=mean CharacterOffsetBegin=2 CharacterOffsetEnd=6 PartOfSpeech=VBP Lemma=mean NamedEntityTag=O SentimentClass=Negative]
[Text=if CharacterOffsetBegin=7 CharacterOffsetEnd=9 PartOfSpeech=IN Lemma=if NamedEntityTag=O SentimentClass=Neutral]
[Text=someone CharacterOffsetBegin=10 CharacterOffsetEnd=17 PartOfSpeech=NN Lemma=someone NamedEntityTag=O SentimentClass=Neutral]
[Text=save CharacterOffsetBegin=18 CharacterOffsetEnd=22 PartOfSpeech=VB Lemma=save NamedEntityTag=O SentimentClass=Neutral]
[Text=name CharacterOffsetBegin=23 CharacterOffsetEnd=27 PartOfSpeech=NN Lemma=name NamedEntityTag=O SentimentClass=Neutral]
[Text=of CharacterOffsetBegin=28 CharacterOffsetEnd=30 PartOfSpeech=IN Lemma=of NamedEntityTag=O SentimentClass=Neutral]
[Text=file CharacterOffsetBegin=31 CharacterOffsetEnd=35 PartOfSpeech=NN Lemma=file NamedEntityTag=O SentimentClass=Neutral]
[Text=into CharacterOffsetBegin=36 CharacterOffsetEnd=40 PartOfSpeech=IN Lemma=into NamedEntityTag=O SentimentClass=Neutral]
[Text=database CharacterOffsetBegin=41 CharacterOffsetEnd=49 PartOfSpeech=NN Lemma=database NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=49 CharacterOffsetEnd=50 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=51 CharacterOffsetEnd=53 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=would CharacterOffsetBegin=54 CharacterOffsetEnd=59 PartOfSpeech=MD Lemma=would NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=60 CharacterOffsetEnd=62 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=also CharacterOffsetBegin=63 CharacterOffsetEnd=67 PartOfSpeech=RB Lemma=also NamedEntityTag=O SentimentClass=Neutral]
[Text=possible CharacterOffsetBegin=68 CharacterOffsetEnd=76 PartOfSpeech=JJ Lemma=possible NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=77 CharacterOffsetEnd=79 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=add CharacterOffsetBegin=80 CharacterOffsetEnd=83 PartOfSpeech=VB Lemma=add NamedEntityTag=O SentimentClass=Positive]
[Text=relative CharacterOffsetBegin=84 CharacterOffsetEnd=92 PartOfSpeech=JJ Lemma=relative NamedEntityTag=O SentimentClass=Positive]
[Text=path CharacterOffsetBegin=93 CharacterOffsetEnd=97 PartOfSpeech=NN Lemma=path NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=98 CharacterOffsetEnd=100 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=101 CharacterOffsetEnd=104 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=image CharacterOffsetBegin=105 CharacterOffsetEnd=110 PartOfSpeech=NN Lemma=image NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=111 CharacterOffsetEnd=114 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=show CharacterOffsetBegin=115 CharacterOffsetEnd=119 PartOfSpeech=VB Lemma=show NamedEntityTag=O SentimentClass=Neutral]
[Text=him CharacterOffsetBegin=120 CharacterOffsetEnd=123 PartOfSpeech=PRP Lemma=he NamedEntityTag=O SentimentClass=Neutral]
[Text=direct CharacterOffsetBegin=124 CharacterOffsetEnd=130 PartOfSpeech=VB Lemma=direct NamedEntityTag=O SentimentClass=Neutral]
[Text=in CharacterOffsetBegin=131 CharacterOffsetEnd=133 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=db CharacterOffsetBegin=134 CharacterOffsetEnd=136 PartOfSpeech=NN Lemma=db NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP mean)
      (SBAR
        (S
          (SBAR (IN if)
            (S
              (NP (NN someone))
              (VP (VB save)
                (NP
                  (NP (NN name))
                  (PP (IN of)
                    (NP (NN file))))
                (PP (IN into)
                  (NP (NN database))))))
          (, ,)
          (NP (PRP it))
          (VP (MD would)
            (VP (VB be)
              (ADJP
                (ADVP (RB also))
                (JJ possible)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB add)
                        (NP (JJ relative) (NN path))
                        (PP (TO to)
                          (NP (DT the) (NN image))))
                      (CC and)
                      (VP (VB show)
                        (S
                          (NP (PRP him))
                          (VP (VB direct)
                            (PP (IN in)
                              (NP (NN db)))))))))))))))))

root(ROOT-0, mean-2)
nsubj(mean-2, I-1)
mark(save-5, if-3)
nsubj(save-5, someone-4)
advcl:if(possible-16, save-5)
dobj(save-5, name-6)
case(file-8, of-7)
nmod:of(name-6, file-8)
case(database-10, into-9)
nmod:into(save-5, database-10)
punct(possible-16, ,-11)
nsubj(possible-16, it-12)
nsubj:xsubj(add-18, it-12)
nsubj:xsubj(show-25, it-12)
aux(possible-16, would-13)
cop(possible-16, be-14)
advmod(possible-16, also-15)
ccomp(mean-2, possible-16)
mark(add-18, to-17)
xcomp(possible-16, add-18)
amod(path-20, relative-19)
dobj(add-18, path-20)
case(image-23, to-21)
det(image-23, the-22)
nmod:to(add-18, image-23)
cc(add-18, and-24)
xcomp(possible-16, show-25)
conj:and(add-18, show-25)
nsubj(direct-27, him-26)
ccomp(show-25, direct-27)
case(db-29, in-28)
nmod:in(direct-27, db-29)


==============Pipeline Pretty Print==============
Sentence #1 (29 tokens, sentiment: Neutral):
I mean if someone save name of file into database, it would be also possible to add relative path to the image and show him direct in db
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=mean CharacterOffsetBegin=2 CharacterOffsetEnd=6 PartOfSpeech=VBP Lemma=mean NamedEntityTag=O SentimentClass=Negative]
[Text=if CharacterOffsetBegin=7 CharacterOffsetEnd=9 PartOfSpeech=IN Lemma=if NamedEntityTag=O SentimentClass=Neutral]
[Text=someone CharacterOffsetBegin=10 CharacterOffsetEnd=17 PartOfSpeech=NN Lemma=someone NamedEntityTag=O SentimentClass=Neutral]
[Text=save CharacterOffsetBegin=18 CharacterOffsetEnd=22 PartOfSpeech=VB Lemma=save NamedEntityTag=O SentimentClass=Neutral]
[Text=name CharacterOffsetBegin=23 CharacterOffsetEnd=27 PartOfSpeech=NN Lemma=name NamedEntityTag=O SentimentClass=Neutral]
[Text=of CharacterOffsetBegin=28 CharacterOffsetEnd=30 PartOfSpeech=IN Lemma=of NamedEntityTag=O SentimentClass=Neutral]
[Text=file CharacterOffsetBegin=31 CharacterOffsetEnd=35 PartOfSpeech=NN Lemma=file NamedEntityTag=O SentimentClass=Neutral]
[Text=into CharacterOffsetBegin=36 CharacterOffsetEnd=40 PartOfSpeech=IN Lemma=into NamedEntityTag=O SentimentClass=Neutral]
[Text=database CharacterOffsetBegin=41 CharacterOffsetEnd=49 PartOfSpeech=NN Lemma=database NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=49 CharacterOffsetEnd=50 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=51 CharacterOffsetEnd=53 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=would CharacterOffsetBegin=54 CharacterOffsetEnd=59 PartOfSpeech=MD Lemma=would NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=60 CharacterOffsetEnd=62 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=also CharacterOffsetBegin=63 CharacterOffsetEnd=67 PartOfSpeech=RB Lemma=also NamedEntityTag=O SentimentClass=Neutral]
[Text=possible CharacterOffsetBegin=68 CharacterOffsetEnd=76 PartOfSpeech=JJ Lemma=possible NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=77 CharacterOffsetEnd=79 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=add CharacterOffsetBegin=80 CharacterOffsetEnd=83 PartOfSpeech=VB Lemma=add NamedEntityTag=O SentimentClass=Positive]
[Text=relative CharacterOffsetBegin=84 CharacterOffsetEnd=92 PartOfSpeech=JJ Lemma=relative NamedEntityTag=O SentimentClass=Positive]
[Text=path CharacterOffsetBegin=93 CharacterOffsetEnd=97 PartOfSpeech=NN Lemma=path NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=98 CharacterOffsetEnd=100 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=101 CharacterOffsetEnd=104 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=image CharacterOffsetBegin=105 CharacterOffsetEnd=110 PartOfSpeech=NN Lemma=image NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=111 CharacterOffsetEnd=114 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=show CharacterOffsetBegin=115 CharacterOffsetEnd=119 PartOfSpeech=VB Lemma=show NamedEntityTag=O SentimentClass=Neutral]
[Text=him CharacterOffsetBegin=120 CharacterOffsetEnd=123 PartOfSpeech=PRP Lemma=he NamedEntityTag=O SentimentClass=Neutral]
[Text=direct CharacterOffsetBegin=124 CharacterOffsetEnd=130 PartOfSpeech=VB Lemma=direct NamedEntityTag=O SentimentClass=Neutral]
[Text=in CharacterOffsetBegin=131 CharacterOffsetEnd=133 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=db CharacterOffsetBegin=134 CharacterOffsetEnd=136 PartOfSpeech=NN Lemma=db NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP mean)
      (SBAR
        (S
          (SBAR (IN if)
            (S
              (NP (NN someone))
              (VP (VB save)
                (NP
                  (NP (NN name))
                  (PP (IN of)
                    (NP (NN file))))
                (PP (IN into)
                  (NP (NN database))))))
          (, ,)
          (NP (PRP it))
          (VP (MD would)
            (VP (VB be)
              (ADJP
                (ADVP (RB also))
                (JJ possible)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB add)
                        (NP (JJ relative) (NN path))
                        (PP (TO to)
                          (NP (DT the) (NN image))))
                      (CC and)
                      (VP (VB show)
                        (S
                          (NP (PRP him))
                          (VP (VB direct)
                            (PP (IN in)
                              (NP (NN db)))))))))))))))))

root(ROOT-0, mean-2)
nsubj(mean-2, I-1)
mark(save-5, if-3)
nsubj(save-5, someone-4)
advcl:if(possible-16, save-5)
dobj(save-5, name-6)
case(file-8, of-7)
nmod:of(name-6, file-8)
case(database-10, into-9)
nmod:into(save-5, database-10)
punct(possible-16, ,-11)
nsubj(possible-16, it-12)
nsubj:xsubj(add-18, it-12)
nsubj:xsubj(show-25, it-12)
aux(possible-16, would-13)
cop(possible-16, be-14)
advmod(possible-16, also-15)
ccomp(mean-2, possible-16)
mark(add-18, to-17)
xcomp(possible-16, add-18)
amod(path-20, relative-19)
dobj(add-18, path-20)
case(image-23, to-21)
det(image-23, the-22)
nmod:to(add-18, image-23)
cc(add-18, and-24)
xcomp(possible-16, show-25)
conj:and(add-18, show-25)
nsubj(direct-27, him-26)
ccomp(show-25, direct-27)
case(db-29, in-28)
nmod:in(direct-27, db-29)


==============Pipeline Pretty Print==============
Sentence #1 (29 tokens, sentiment: Neutral):
I mean if someone save name of file into database, it would be also possible to add relative path to the image and show him direct in db
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=mean CharacterOffsetBegin=2 CharacterOffsetEnd=6 PartOfSpeech=VBP Lemma=mean NamedEntityTag=O SentimentClass=Negative]
[Text=if CharacterOffsetBegin=7 CharacterOffsetEnd=9 PartOfSpeech=IN Lemma=if NamedEntityTag=O SentimentClass=Neutral]
[Text=someone CharacterOffsetBegin=10 CharacterOffsetEnd=17 PartOfSpeech=NN Lemma=someone NamedEntityTag=O SentimentClass=Neutral]
[Text=save CharacterOffsetBegin=18 CharacterOffsetEnd=22 PartOfSpeech=VB Lemma=save NamedEntityTag=O SentimentClass=Neutral]
[Text=name CharacterOffsetBegin=23 CharacterOffsetEnd=27 PartOfSpeech=NN Lemma=name NamedEntityTag=O SentimentClass=Neutral]
[Text=of CharacterOffsetBegin=28 CharacterOffsetEnd=30 PartOfSpeech=IN Lemma=of NamedEntityTag=O SentimentClass=Neutral]
[Text=file CharacterOffsetBegin=31 CharacterOffsetEnd=35 PartOfSpeech=NN Lemma=file NamedEntityTag=O SentimentClass=Neutral]
[Text=into CharacterOffsetBegin=36 CharacterOffsetEnd=40 PartOfSpeech=IN Lemma=into NamedEntityTag=O SentimentClass=Neutral]
[Text=database CharacterOffsetBegin=41 CharacterOffsetEnd=49 PartOfSpeech=NN Lemma=database NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=49 CharacterOffsetEnd=50 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=51 CharacterOffsetEnd=53 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=would CharacterOffsetBegin=54 CharacterOffsetEnd=59 PartOfSpeech=MD Lemma=would NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=60 CharacterOffsetEnd=62 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=also CharacterOffsetBegin=63 CharacterOffsetEnd=67 PartOfSpeech=RB Lemma=also NamedEntityTag=O SentimentClass=Neutral]
[Text=possible CharacterOffsetBegin=68 CharacterOffsetEnd=76 PartOfSpeech=JJ Lemma=possible NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=77 CharacterOffsetEnd=79 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=add CharacterOffsetBegin=80 CharacterOffsetEnd=83 PartOfSpeech=VB Lemma=add NamedEntityTag=O SentimentClass=Positive]
[Text=relative CharacterOffsetBegin=84 CharacterOffsetEnd=92 PartOfSpeech=JJ Lemma=relative NamedEntityTag=O SentimentClass=Positive]
[Text=path CharacterOffsetBegin=93 CharacterOffsetEnd=97 PartOfSpeech=NN Lemma=path NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=98 CharacterOffsetEnd=100 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=101 CharacterOffsetEnd=104 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=image CharacterOffsetBegin=105 CharacterOffsetEnd=110 PartOfSpeech=NN Lemma=image NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=111 CharacterOffsetEnd=114 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=show CharacterOffsetBegin=115 CharacterOffsetEnd=119 PartOfSpeech=VB Lemma=show NamedEntityTag=O SentimentClass=Neutral]
[Text=him CharacterOffsetBegin=120 CharacterOffsetEnd=123 PartOfSpeech=PRP Lemma=he NamedEntityTag=O SentimentClass=Neutral]
[Text=direct CharacterOffsetBegin=124 CharacterOffsetEnd=130 PartOfSpeech=VB Lemma=direct NamedEntityTag=O SentimentClass=Neutral]
[Text=in CharacterOffsetBegin=131 CharacterOffsetEnd=133 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=db CharacterOffsetBegin=134 CharacterOffsetEnd=136 PartOfSpeech=NN Lemma=db NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP mean)
      (SBAR
        (S
          (SBAR (IN if)
            (S
              (NP (NN someone))
              (VP (VB save)
                (NP
                  (NP (NN name))
                  (PP (IN of)
                    (NP (NN file))))
                (PP (IN into)
                  (NP (NN database))))))
          (, ,)
          (NP (PRP it))
          (VP (MD would)
            (VP (VB be)
              (ADJP
                (ADVP (RB also))
                (JJ possible)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB add)
                        (NP (JJ relative) (NN path))
                        (PP (TO to)
                          (NP (DT the) (NN image))))
                      (CC and)
                      (VP (VB show)
                        (S
                          (NP (PRP him))
                          (VP (VB direct)
                            (PP (IN in)
                              (NP (NN db)))))))))))))))))

root(ROOT-0, mean-2)
nsubj(mean-2, I-1)
mark(save-5, if-3)
nsubj(save-5, someone-4)
advcl:if(possible-16, save-5)
dobj(save-5, name-6)
case(file-8, of-7)
nmod:of(name-6, file-8)
case(database-10, into-9)
nmod:into(save-5, database-10)
punct(possible-16, ,-11)
nsubj(possible-16, it-12)
nsubj:xsubj(add-18, it-12)
nsubj:xsubj(show-25, it-12)
aux(possible-16, would-13)
cop(possible-16, be-14)
advmod(possible-16, also-15)
ccomp(mean-2, possible-16)
mark(add-18, to-17)
xcomp(possible-16, add-18)
amod(path-20, relative-19)
dobj(add-18, path-20)
case(image-23, to-21)
det(image-23, the-22)
nmod:to(add-18, image-23)
cc(add-18, and-24)
xcomp(possible-16, show-25)
conj:and(add-18, show-25)
nsubj(direct-27, him-26)
ccomp(show-25, direct-27)
case(db-29, in-28)
nmod:in(direct-27, db-29)


==============Pipeline Pretty Print==============
Sentence #1 (29 tokens, sentiment: Neutral):
I mean if someone save name of file into database, it would be also possible to add relative path to the image and show him direct in db
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=mean CharacterOffsetBegin=2 CharacterOffsetEnd=6 PartOfSpeech=VBP Lemma=mean NamedEntityTag=O SentimentClass=Negative]
[Text=if CharacterOffsetBegin=7 CharacterOffsetEnd=9 PartOfSpeech=IN Lemma=if NamedEntityTag=O SentimentClass=Neutral]
[Text=someone CharacterOffsetBegin=10 CharacterOffsetEnd=17 PartOfSpeech=NN Lemma=someone NamedEntityTag=O SentimentClass=Neutral]
[Text=save CharacterOffsetBegin=18 CharacterOffsetEnd=22 PartOfSpeech=VB Lemma=save NamedEntityTag=O SentimentClass=Neutral]
[Text=name CharacterOffsetBegin=23 CharacterOffsetEnd=27 PartOfSpeech=NN Lemma=name NamedEntityTag=O SentimentClass=Neutral]
[Text=of CharacterOffsetBegin=28 CharacterOffsetEnd=30 PartOfSpeech=IN Lemma=of NamedEntityTag=O SentimentClass=Neutral]
[Text=file CharacterOffsetBegin=31 CharacterOffsetEnd=35 PartOfSpeech=NN Lemma=file NamedEntityTag=O SentimentClass=Neutral]
[Text=into CharacterOffsetBegin=36 CharacterOffsetEnd=40 PartOfSpeech=IN Lemma=into NamedEntityTag=O SentimentClass=Neutral]
[Text=database CharacterOffsetBegin=41 CharacterOffsetEnd=49 PartOfSpeech=NN Lemma=database NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=49 CharacterOffsetEnd=50 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=51 CharacterOffsetEnd=53 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=would CharacterOffsetBegin=54 CharacterOffsetEnd=59 PartOfSpeech=MD Lemma=would NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=60 CharacterOffsetEnd=62 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=also CharacterOffsetBegin=63 CharacterOffsetEnd=67 PartOfSpeech=RB Lemma=also NamedEntityTag=O SentimentClass=Neutral]
[Text=possible CharacterOffsetBegin=68 CharacterOffsetEnd=76 PartOfSpeech=JJ Lemma=possible NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=77 CharacterOffsetEnd=79 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=add CharacterOffsetBegin=80 CharacterOffsetEnd=83 PartOfSpeech=VB Lemma=add NamedEntityTag=O SentimentClass=Positive]
[Text=relative CharacterOffsetBegin=84 CharacterOffsetEnd=92 PartOfSpeech=JJ Lemma=relative NamedEntityTag=O SentimentClass=Positive]
[Text=path CharacterOffsetBegin=93 CharacterOffsetEnd=97 PartOfSpeech=NN Lemma=path NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=98 CharacterOffsetEnd=100 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=101 CharacterOffsetEnd=104 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=image CharacterOffsetBegin=105 CharacterOffsetEnd=110 PartOfSpeech=NN Lemma=image NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=111 CharacterOffsetEnd=114 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=show CharacterOffsetBegin=115 CharacterOffsetEnd=119 PartOfSpeech=VB Lemma=show NamedEntityTag=O SentimentClass=Neutral]
[Text=him CharacterOffsetBegin=120 CharacterOffsetEnd=123 PartOfSpeech=PRP Lemma=he NamedEntityTag=O SentimentClass=Neutral]
[Text=direct CharacterOffsetBegin=124 CharacterOffsetEnd=130 PartOfSpeech=VB Lemma=direct NamedEntityTag=O SentimentClass=Neutral]
[Text=in CharacterOffsetBegin=131 CharacterOffsetEnd=133 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=db CharacterOffsetBegin=134 CharacterOffsetEnd=136 PartOfSpeech=NN Lemma=db NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP mean)
      (SBAR
        (S
          (SBAR (IN if)
            (S
              (NP (NN someone))
              (VP (VB save)
                (NP
                  (NP (NN name))
                  (PP (IN of)
                    (NP (NN file))))
                (PP (IN into)
                  (NP (NN database))))))
          (, ,)
          (NP (PRP it))
          (VP (MD would)
            (VP (VB be)
              (ADJP
                (ADVP (RB also))
                (JJ possible)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB add)
                        (NP (JJ relative) (NN path))
                        (PP (TO to)
                          (NP (DT the) (NN image))))
                      (CC and)
                      (VP (VB show)
                        (S
                          (NP (PRP him))
                          (VP (VB direct)
                            (PP (IN in)
                              (NP (NN db)))))))))))))))))

root(ROOT-0, mean-2)
nsubj(mean-2, I-1)
mark(save-5, if-3)
nsubj(save-5, someone-4)
advcl:if(possible-16, save-5)
dobj(save-5, name-6)
case(file-8, of-7)
nmod:of(name-6, file-8)
case(database-10, into-9)
nmod:into(save-5, database-10)
punct(possible-16, ,-11)
nsubj(possible-16, it-12)
nsubj:xsubj(add-18, it-12)
nsubj:xsubj(show-25, it-12)
aux(possible-16, would-13)
cop(possible-16, be-14)
advmod(possible-16, also-15)
ccomp(mean-2, possible-16)
mark(add-18, to-17)
xcomp(possible-16, add-18)
amod(path-20, relative-19)
dobj(add-18, path-20)
case(image-23, to-21)
det(image-23, the-22)
nmod:to(add-18, image-23)
cc(add-18, and-24)
xcomp(possible-16, show-25)
conj:and(add-18, show-25)
nsubj(direct-27, him-26)
ccomp(show-25, direct-27)
case(db-29, in-28)
nmod:in(direct-27, db-29)


==============Pipeline Pretty Print==============
Sentence #1 (29 tokens, sentiment: Neutral):
I mean if someone save name of file into database, it would be also possible to add relative path to the image and show him direct in db
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=mean CharacterOffsetBegin=2 CharacterOffsetEnd=6 PartOfSpeech=VBP Lemma=mean NamedEntityTag=O SentimentClass=Negative]
[Text=if CharacterOffsetBegin=7 CharacterOffsetEnd=9 PartOfSpeech=IN Lemma=if NamedEntityTag=O SentimentClass=Neutral]
[Text=someone CharacterOffsetBegin=10 CharacterOffsetEnd=17 PartOfSpeech=NN Lemma=someone NamedEntityTag=O SentimentClass=Neutral]
[Text=save CharacterOffsetBegin=18 CharacterOffsetEnd=22 PartOfSpeech=VB Lemma=save NamedEntityTag=O SentimentClass=Neutral]
[Text=name CharacterOffsetBegin=23 CharacterOffsetEnd=27 PartOfSpeech=NN Lemma=name NamedEntityTag=O SentimentClass=Neutral]
[Text=of CharacterOffsetBegin=28 CharacterOffsetEnd=30 PartOfSpeech=IN Lemma=of NamedEntityTag=O SentimentClass=Neutral]
[Text=file CharacterOffsetBegin=31 CharacterOffsetEnd=35 PartOfSpeech=NN Lemma=file NamedEntityTag=O SentimentClass=Neutral]
[Text=into CharacterOffsetBegin=36 CharacterOffsetEnd=40 PartOfSpeech=IN Lemma=into NamedEntityTag=O SentimentClass=Neutral]
[Text=database CharacterOffsetBegin=41 CharacterOffsetEnd=49 PartOfSpeech=NN Lemma=database NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=49 CharacterOffsetEnd=50 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=51 CharacterOffsetEnd=53 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=would CharacterOffsetBegin=54 CharacterOffsetEnd=59 PartOfSpeech=MD Lemma=would NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=60 CharacterOffsetEnd=62 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=also CharacterOffsetBegin=63 CharacterOffsetEnd=67 PartOfSpeech=RB Lemma=also NamedEntityTag=O SentimentClass=Neutral]
[Text=possible CharacterOffsetBegin=68 CharacterOffsetEnd=76 PartOfSpeech=JJ Lemma=possible NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=77 CharacterOffsetEnd=79 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=add CharacterOffsetBegin=80 CharacterOffsetEnd=83 PartOfSpeech=VB Lemma=add NamedEntityTag=O SentimentClass=Positive]
[Text=relative CharacterOffsetBegin=84 CharacterOffsetEnd=92 PartOfSpeech=JJ Lemma=relative NamedEntityTag=O SentimentClass=Positive]
[Text=path CharacterOffsetBegin=93 CharacterOffsetEnd=97 PartOfSpeech=NN Lemma=path NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=98 CharacterOffsetEnd=100 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=101 CharacterOffsetEnd=104 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=image CharacterOffsetBegin=105 CharacterOffsetEnd=110 PartOfSpeech=NN Lemma=image NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=111 CharacterOffsetEnd=114 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=show CharacterOffsetBegin=115 CharacterOffsetEnd=119 PartOfSpeech=VB Lemma=show NamedEntityTag=O SentimentClass=Neutral]
[Text=him CharacterOffsetBegin=120 CharacterOffsetEnd=123 PartOfSpeech=PRP Lemma=he NamedEntityTag=O SentimentClass=Neutral]
[Text=direct CharacterOffsetBegin=124 CharacterOffsetEnd=130 PartOfSpeech=VB Lemma=direct NamedEntityTag=O SentimentClass=Neutral]
[Text=in CharacterOffsetBegin=131 CharacterOffsetEnd=133 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=db CharacterOffsetBegin=134 CharacterOffsetEnd=136 PartOfSpeech=NN Lemma=db NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP mean)
      (SBAR
        (S
          (SBAR (IN if)
            (S
              (NP (NN someone))
              (VP (VB save)
                (NP
                  (NP (NN name))
                  (PP (IN of)
                    (NP (NN file))))
                (PP (IN into)
                  (NP (NN database))))))
          (, ,)
          (NP (PRP it))
          (VP (MD would)
            (VP (VB be)
              (ADJP
                (ADVP (RB also))
                (JJ possible)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB add)
                        (NP (JJ relative) (NN path))
                        (PP (TO to)
                          (NP (DT the) (NN image))))
                      (CC and)
                      (VP (VB show)
                        (S
                          (NP (PRP him))
                          (VP (VB direct)
                            (PP (IN in)
                              (NP (NN db)))))))))))))))))

root(ROOT-0, mean-2)
nsubj(mean-2, I-1)
mark(save-5, if-3)
nsubj(save-5, someone-4)
advcl:if(possible-16, save-5)
dobj(save-5, name-6)
case(file-8, of-7)
nmod:of(name-6, file-8)
case(database-10, into-9)
nmod:into(save-5, database-10)
punct(possible-16, ,-11)
nsubj(possible-16, it-12)
nsubj:xsubj(add-18, it-12)
nsubj:xsubj(show-25, it-12)
aux(possible-16, would-13)
cop(possible-16, be-14)
advmod(possible-16, also-15)
ccomp(mean-2, possible-16)
mark(add-18, to-17)
xcomp(possible-16, add-18)
amod(path-20, relative-19)
dobj(add-18, path-20)
case(image-23, to-21)
det(image-23, the-22)
nmod:to(add-18, image-23)
cc(add-18, and-24)
xcomp(possible-16, show-25)
conj:and(add-18, show-25)
nsubj(direct-27, him-26)
ccomp(show-25, direct-27)
case(db-29, in-28)
nmod:in(direct-27, db-29)


==============Pipeline Pretty Print==============
Sentence #1 (29 tokens, sentiment: Neutral):
I mean if someone save name of file into database, it would be also possible to add relative path to the image and show him direct in db
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=mean CharacterOffsetBegin=2 CharacterOffsetEnd=6 PartOfSpeech=VBP Lemma=mean NamedEntityTag=O SentimentClass=Negative]
[Text=if CharacterOffsetBegin=7 CharacterOffsetEnd=9 PartOfSpeech=IN Lemma=if NamedEntityTag=O SentimentClass=Neutral]
[Text=someone CharacterOffsetBegin=10 CharacterOffsetEnd=17 PartOfSpeech=NN Lemma=someone NamedEntityTag=O SentimentClass=Neutral]
[Text=save CharacterOffsetBegin=18 CharacterOffsetEnd=22 PartOfSpeech=VB Lemma=save NamedEntityTag=O SentimentClass=Neutral]
[Text=name CharacterOffsetBegin=23 CharacterOffsetEnd=27 PartOfSpeech=NN Lemma=name NamedEntityTag=O SentimentClass=Neutral]
[Text=of CharacterOffsetBegin=28 CharacterOffsetEnd=30 PartOfSpeech=IN Lemma=of NamedEntityTag=O SentimentClass=Neutral]
[Text=file CharacterOffsetBegin=31 CharacterOffsetEnd=35 PartOfSpeech=NN Lemma=file NamedEntityTag=O SentimentClass=Neutral]
[Text=into CharacterOffsetBegin=36 CharacterOffsetEnd=40 PartOfSpeech=IN Lemma=into NamedEntityTag=O SentimentClass=Neutral]
[Text=database CharacterOffsetBegin=41 CharacterOffsetEnd=49 PartOfSpeech=NN Lemma=database NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=49 CharacterOffsetEnd=50 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=51 CharacterOffsetEnd=53 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=would CharacterOffsetBegin=54 CharacterOffsetEnd=59 PartOfSpeech=MD Lemma=would NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=60 CharacterOffsetEnd=62 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=also CharacterOffsetBegin=63 CharacterOffsetEnd=67 PartOfSpeech=RB Lemma=also NamedEntityTag=O SentimentClass=Neutral]
[Text=possible CharacterOffsetBegin=68 CharacterOffsetEnd=76 PartOfSpeech=JJ Lemma=possible NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=77 CharacterOffsetEnd=79 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=add CharacterOffsetBegin=80 CharacterOffsetEnd=83 PartOfSpeech=VB Lemma=add NamedEntityTag=O SentimentClass=Positive]
[Text=relative CharacterOffsetBegin=84 CharacterOffsetEnd=92 PartOfSpeech=JJ Lemma=relative NamedEntityTag=O SentimentClass=Positive]
[Text=path CharacterOffsetBegin=93 CharacterOffsetEnd=97 PartOfSpeech=NN Lemma=path NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=98 CharacterOffsetEnd=100 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=101 CharacterOffsetEnd=104 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=image CharacterOffsetBegin=105 CharacterOffsetEnd=110 PartOfSpeech=NN Lemma=image NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=111 CharacterOffsetEnd=114 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=show CharacterOffsetBegin=115 CharacterOffsetEnd=119 PartOfSpeech=VB Lemma=show NamedEntityTag=O SentimentClass=Neutral]
[Text=him CharacterOffsetBegin=120 CharacterOffsetEnd=123 PartOfSpeech=PRP Lemma=he NamedEntityTag=O SentimentClass=Neutral]
[Text=direct CharacterOffsetBegin=124 CharacterOffsetEnd=130 PartOfSpeech=VB Lemma=direct NamedEntityTag=O SentimentClass=Neutral]
[Text=in CharacterOffsetBegin=131 CharacterOffsetEnd=133 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=db CharacterOffsetBegin=134 CharacterOffsetEnd=136 PartOfSpeech=NN Lemma=db NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP mean)
      (SBAR
        (S
          (SBAR (IN if)
            (S
              (NP (NN someone))
              (VP (VB save)
                (NP
                  (NP (NN name))
                  (PP (IN of)
                    (NP (NN file))))
                (PP (IN into)
                  (NP (NN database))))))
          (, ,)
          (NP (PRP it))
          (VP (MD would)
            (VP (VB be)
              (ADJP
                (ADVP (RB also))
                (JJ possible)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB add)
                        (NP (JJ relative) (NN path))
                        (PP (TO to)
                          (NP (DT the) (NN image))))
                      (CC and)
                      (VP (VB show)
                        (S
                          (NP (PRP him))
                          (VP (VB direct)
                            (PP (IN in)
                              (NP (NN db)))))))))))))))))

root(ROOT-0, mean-2)
nsubj(mean-2, I-1)
mark(save-5, if-3)
nsubj(save-5, someone-4)
advcl:if(possible-16, save-5)
dobj(save-5, name-6)
case(file-8, of-7)
nmod:of(name-6, file-8)
case(database-10, into-9)
nmod:into(save-5, database-10)
punct(possible-16, ,-11)
nsubj(possible-16, it-12)
nsubj:xsubj(add-18, it-12)
nsubj:xsubj(show-25, it-12)
aux(possible-16, would-13)
cop(possible-16, be-14)
advmod(possible-16, also-15)
ccomp(mean-2, possible-16)
mark(add-18, to-17)
xcomp(possible-16, add-18)
amod(path-20, relative-19)
dobj(add-18, path-20)
case(image-23, to-21)
det(image-23, the-22)
nmod:to(add-18, image-23)
cc(add-18, and-24)
xcomp(possible-16, show-25)
conj:and(add-18, show-25)
nsubj(direct-27, him-26)
ccomp(show-25, direct-27)
case(db-29, in-28)
nmod:in(direct-27, db-29)


==============Pipeline Pretty Print==============
Sentence #1 (29 tokens, sentiment: Neutral):
I mean if someone save name of file into database, it would be also possible to add relative path to the image and show him direct in db
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=mean CharacterOffsetBegin=2 CharacterOffsetEnd=6 PartOfSpeech=VBP Lemma=mean NamedEntityTag=O SentimentClass=Negative]
[Text=if CharacterOffsetBegin=7 CharacterOffsetEnd=9 PartOfSpeech=IN Lemma=if NamedEntityTag=O SentimentClass=Neutral]
[Text=someone CharacterOffsetBegin=10 CharacterOffsetEnd=17 PartOfSpeech=NN Lemma=someone NamedEntityTag=O SentimentClass=Neutral]
[Text=save CharacterOffsetBegin=18 CharacterOffsetEnd=22 PartOfSpeech=VB Lemma=save NamedEntityTag=O SentimentClass=Neutral]
[Text=name CharacterOffsetBegin=23 CharacterOffsetEnd=27 PartOfSpeech=NN Lemma=name NamedEntityTag=O SentimentClass=Neutral]
[Text=of CharacterOffsetBegin=28 CharacterOffsetEnd=30 PartOfSpeech=IN Lemma=of NamedEntityTag=O SentimentClass=Neutral]
[Text=file CharacterOffsetBegin=31 CharacterOffsetEnd=35 PartOfSpeech=NN Lemma=file NamedEntityTag=O SentimentClass=Neutral]
[Text=into CharacterOffsetBegin=36 CharacterOffsetEnd=40 PartOfSpeech=IN Lemma=into NamedEntityTag=O SentimentClass=Neutral]
[Text=database CharacterOffsetBegin=41 CharacterOffsetEnd=49 PartOfSpeech=NN Lemma=database NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=49 CharacterOffsetEnd=50 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=51 CharacterOffsetEnd=53 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=would CharacterOffsetBegin=54 CharacterOffsetEnd=59 PartOfSpeech=MD Lemma=would NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=60 CharacterOffsetEnd=62 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=also CharacterOffsetBegin=63 CharacterOffsetEnd=67 PartOfSpeech=RB Lemma=also NamedEntityTag=O SentimentClass=Neutral]
[Text=possible CharacterOffsetBegin=68 CharacterOffsetEnd=76 PartOfSpeech=JJ Lemma=possible NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=77 CharacterOffsetEnd=79 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=add CharacterOffsetBegin=80 CharacterOffsetEnd=83 PartOfSpeech=VB Lemma=add NamedEntityTag=O SentimentClass=Positive]
[Text=relative CharacterOffsetBegin=84 CharacterOffsetEnd=92 PartOfSpeech=JJ Lemma=relative NamedEntityTag=O SentimentClass=Positive]
[Text=path CharacterOffsetBegin=93 CharacterOffsetEnd=97 PartOfSpeech=NN Lemma=path NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=98 CharacterOffsetEnd=100 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=101 CharacterOffsetEnd=104 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=image CharacterOffsetBegin=105 CharacterOffsetEnd=110 PartOfSpeech=NN Lemma=image NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=111 CharacterOffsetEnd=114 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=show CharacterOffsetBegin=115 CharacterOffsetEnd=119 PartOfSpeech=VB Lemma=show NamedEntityTag=O SentimentClass=Neutral]
[Text=him CharacterOffsetBegin=120 CharacterOffsetEnd=123 PartOfSpeech=PRP Lemma=he NamedEntityTag=O SentimentClass=Neutral]
[Text=direct CharacterOffsetBegin=124 CharacterOffsetEnd=130 PartOfSpeech=VB Lemma=direct NamedEntityTag=O SentimentClass=Neutral]
[Text=in CharacterOffsetBegin=131 CharacterOffsetEnd=133 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=db CharacterOffsetBegin=134 CharacterOffsetEnd=136 PartOfSpeech=NN Lemma=db NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP mean)
      (SBAR
        (S
          (SBAR (IN if)
            (S
              (NP (NN someone))
              (VP (VB save)
                (NP
                  (NP (NN name))
                  (PP (IN of)
                    (NP (NN file))))
                (PP (IN into)
                  (NP (NN database))))))
          (, ,)
          (NP (PRP it))
          (VP (MD would)
            (VP (VB be)
              (ADJP
                (ADVP (RB also))
                (JJ possible)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB add)
                        (NP (JJ relative) (NN path))
                        (PP (TO to)
                          (NP (DT the) (NN image))))
                      (CC and)
                      (VP (VB show)
                        (S
                          (NP (PRP him))
                          (VP (VB direct)
                            (PP (IN in)
                              (NP (NN db)))))))))))))))))

root(ROOT-0, mean-2)
nsubj(mean-2, I-1)
mark(save-5, if-3)
nsubj(save-5, someone-4)
advcl:if(possible-16, save-5)
dobj(save-5, name-6)
case(file-8, of-7)
nmod:of(name-6, file-8)
case(database-10, into-9)
nmod:into(save-5, database-10)
punct(possible-16, ,-11)
nsubj(possible-16, it-12)
nsubj:xsubj(add-18, it-12)
nsubj:xsubj(show-25, it-12)
aux(possible-16, would-13)
cop(possible-16, be-14)
advmod(possible-16, also-15)
ccomp(mean-2, possible-16)
mark(add-18, to-17)
xcomp(possible-16, add-18)
amod(path-20, relative-19)
dobj(add-18, path-20)
case(image-23, to-21)
det(image-23, the-22)
nmod:to(add-18, image-23)
cc(add-18, and-24)
xcomp(possible-16, show-25)
conj:and(add-18, show-25)
nsubj(direct-27, him-26)
ccomp(show-25, direct-27)
case(db-29, in-28)
nmod:in(direct-27, db-29)


==============Pipeline Pretty Print==============
Sentence #1 (13 tokens, sentiment: Negative):
The interface was used jndi ,so can use in any JMS Server
[Text=The CharacterOffsetBegin=0 CharacterOffsetEnd=3 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=interface CharacterOffsetBegin=4 CharacterOffsetEnd=13 PartOfSpeech=NN Lemma=interface NamedEntityTag=O SentimentClass=Neutral]
[Text=was CharacterOffsetBegin=14 CharacterOffsetEnd=17 PartOfSpeech=VBD Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=used CharacterOffsetBegin=18 CharacterOffsetEnd=22 PartOfSpeech=VBN Lemma=use NamedEntityTag=O SentimentClass=Neutral]
[Text=jndi CharacterOffsetBegin=23 CharacterOffsetEnd=27 PartOfSpeech=NNS Lemma=jndus NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=28 CharacterOffsetEnd=29 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=so CharacterOffsetBegin=29 CharacterOffsetEnd=31 PartOfSpeech=RB Lemma=so NamedEntityTag=O SentimentClass=Neutral]
[Text=can CharacterOffsetBegin=32 CharacterOffsetEnd=35 PartOfSpeech=MD Lemma=can NamedEntityTag=O SentimentClass=Neutral]
[Text=use CharacterOffsetBegin=36 CharacterOffsetEnd=39 PartOfSpeech=VB Lemma=use NamedEntityTag=O SentimentClass=Neutral]
[Text=in CharacterOffsetBegin=40 CharacterOffsetEnd=42 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=any CharacterOffsetBegin=43 CharacterOffsetEnd=46 PartOfSpeech=DT Lemma=any NamedEntityTag=O SentimentClass=Neutral]
[Text=JMS CharacterOffsetBegin=47 CharacterOffsetEnd=50 PartOfSpeech=NNP Lemma=JMS NamedEntityTag=O SentimentClass=Neutral]
[Text=Server CharacterOffsetBegin=51 CharacterOffsetEnd=57 PartOfSpeech=NN Lemma=server NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT The) (NN interface))
    (VP (VBD was)
      (VP (VBN used)
        (NP
          (NP (NNS jndi))
          (, ,)
          (SBAR (RB so)
            (S
              (VP (MD can)
                (VP (VB use)
                  (PP (IN in)
                    (NP (DT any) (NNP JMS) (NN Server))))))))))))

root(ROOT-0, used-4)
det(interface-2, The-1)
nsubjpass(used-4, interface-2)
auxpass(used-4, was-3)
dobj(used-4, jndi-5)
punct(jndi-5, ,-6)
advmod(use-9, so-7)
aux(use-9, can-8)
dep(jndi-5, use-9)
case(Server-13, in-10)
det(Server-13, any-11)
compound(Server-13, JMS-12)
nmod:in(use-9, Server-13)


==============Pipeline Pretty Print==============
Sentence #1 (13 tokens, sentiment: Negative):
The interface was used jndi ,so can use in any JMS Server
[Text=The CharacterOffsetBegin=0 CharacterOffsetEnd=3 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=interface CharacterOffsetBegin=4 CharacterOffsetEnd=13 PartOfSpeech=NN Lemma=interface NamedEntityTag=O SentimentClass=Neutral]
[Text=was CharacterOffsetBegin=14 CharacterOffsetEnd=17 PartOfSpeech=VBD Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=used CharacterOffsetBegin=18 CharacterOffsetEnd=22 PartOfSpeech=VBN Lemma=use NamedEntityTag=O SentimentClass=Neutral]
[Text=jndi CharacterOffsetBegin=23 CharacterOffsetEnd=27 PartOfSpeech=NNS Lemma=jndus NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=28 CharacterOffsetEnd=29 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=so CharacterOffsetBegin=29 CharacterOffsetEnd=31 PartOfSpeech=RB Lemma=so NamedEntityTag=O SentimentClass=Neutral]
[Text=can CharacterOffsetBegin=32 CharacterOffsetEnd=35 PartOfSpeech=MD Lemma=can NamedEntityTag=O SentimentClass=Neutral]
[Text=use CharacterOffsetBegin=36 CharacterOffsetEnd=39 PartOfSpeech=VB Lemma=use NamedEntityTag=O SentimentClass=Neutral]
[Text=in CharacterOffsetBegin=40 CharacterOffsetEnd=42 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=any CharacterOffsetBegin=43 CharacterOffsetEnd=46 PartOfSpeech=DT Lemma=any NamedEntityTag=O SentimentClass=Neutral]
[Text=JMS CharacterOffsetBegin=47 CharacterOffsetEnd=50 PartOfSpeech=NNP Lemma=JMS NamedEntityTag=O SentimentClass=Neutral]
[Text=Server CharacterOffsetBegin=51 CharacterOffsetEnd=57 PartOfSpeech=NN Lemma=server NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT The) (NN interface))
    (VP (VBD was)
      (VP (VBN used)
        (NP
          (NP (NNS jndi))
          (, ,)
          (SBAR (RB so)
            (S
              (VP (MD can)
                (VP (VB use)
                  (PP (IN in)
                    (NP (DT any) (NNP JMS) (NN Server))))))))))))

root(ROOT-0, used-4)
det(interface-2, The-1)
nsubjpass(used-4, interface-2)
auxpass(used-4, was-3)
dobj(used-4, jndi-5)
punct(jndi-5, ,-6)
advmod(use-9, so-7)
aux(use-9, can-8)
dep(jndi-5, use-9)
case(Server-13, in-10)
det(Server-13, any-11)
compound(Server-13, JMS-12)
nmod:in(use-9, Server-13)


==============Pipeline Pretty Print==============
Sentence #1 (13 tokens, sentiment: Negative):
The interface was used jndi ,so can use in any JMS Server
[Text=The CharacterOffsetBegin=0 CharacterOffsetEnd=3 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=interface CharacterOffsetBegin=4 CharacterOffsetEnd=13 PartOfSpeech=NN Lemma=interface NamedEntityTag=O SentimentClass=Neutral]
[Text=was CharacterOffsetBegin=14 CharacterOffsetEnd=17 PartOfSpeech=VBD Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=used CharacterOffsetBegin=18 CharacterOffsetEnd=22 PartOfSpeech=VBN Lemma=use NamedEntityTag=O SentimentClass=Neutral]
[Text=jndi CharacterOffsetBegin=23 CharacterOffsetEnd=27 PartOfSpeech=NNS Lemma=jndus NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=28 CharacterOffsetEnd=29 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=so CharacterOffsetBegin=29 CharacterOffsetEnd=31 PartOfSpeech=RB Lemma=so NamedEntityTag=O SentimentClass=Neutral]
[Text=can CharacterOffsetBegin=32 CharacterOffsetEnd=35 PartOfSpeech=MD Lemma=can NamedEntityTag=O SentimentClass=Neutral]
[Text=use CharacterOffsetBegin=36 CharacterOffsetEnd=39 PartOfSpeech=VB Lemma=use NamedEntityTag=O SentimentClass=Neutral]
[Text=in CharacterOffsetBegin=40 CharacterOffsetEnd=42 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=any CharacterOffsetBegin=43 CharacterOffsetEnd=46 PartOfSpeech=DT Lemma=any NamedEntityTag=O SentimentClass=Neutral]
[Text=JMS CharacterOffsetBegin=47 CharacterOffsetEnd=50 PartOfSpeech=NNP Lemma=JMS NamedEntityTag=O SentimentClass=Neutral]
[Text=Server CharacterOffsetBegin=51 CharacterOffsetEnd=57 PartOfSpeech=NN Lemma=server NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT The) (NN interface))
    (VP (VBD was)
      (VP (VBN used)
        (NP
          (NP (NNS jndi))
          (, ,)
          (SBAR (RB so)
            (S
              (VP (MD can)
                (VP (VB use)
                  (PP (IN in)
                    (NP (DT any) (NNP JMS) (NN Server))))))))))))

root(ROOT-0, used-4)
det(interface-2, The-1)
nsubjpass(used-4, interface-2)
auxpass(used-4, was-3)
dobj(used-4, jndi-5)
punct(jndi-5, ,-6)
advmod(use-9, so-7)
aux(use-9, can-8)
dep(jndi-5, use-9)
case(Server-13, in-10)
det(Server-13, any-11)
compound(Server-13, JMS-12)
nmod:in(use-9, Server-13)


==============Pipeline Pretty Print==============
Sentence #1 (13 tokens, sentiment: Negative):
The interface was used jndi ,so can use in any JMS Server
[Text=The CharacterOffsetBegin=0 CharacterOffsetEnd=3 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=interface CharacterOffsetBegin=4 CharacterOffsetEnd=13 PartOfSpeech=NN Lemma=interface NamedEntityTag=O SentimentClass=Neutral]
[Text=was CharacterOffsetBegin=14 CharacterOffsetEnd=17 PartOfSpeech=VBD Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=used CharacterOffsetBegin=18 CharacterOffsetEnd=22 PartOfSpeech=VBN Lemma=use NamedEntityTag=O SentimentClass=Neutral]
[Text=jndi CharacterOffsetBegin=23 CharacterOffsetEnd=27 PartOfSpeech=NNS Lemma=jndus NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=28 CharacterOffsetEnd=29 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=so CharacterOffsetBegin=29 CharacterOffsetEnd=31 PartOfSpeech=RB Lemma=so NamedEntityTag=O SentimentClass=Neutral]
[Text=can CharacterOffsetBegin=32 CharacterOffsetEnd=35 PartOfSpeech=MD Lemma=can NamedEntityTag=O SentimentClass=Neutral]
[Text=use CharacterOffsetBegin=36 CharacterOffsetEnd=39 PartOfSpeech=VB Lemma=use NamedEntityTag=O SentimentClass=Neutral]
[Text=in CharacterOffsetBegin=40 CharacterOffsetEnd=42 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=any CharacterOffsetBegin=43 CharacterOffsetEnd=46 PartOfSpeech=DT Lemma=any NamedEntityTag=O SentimentClass=Neutral]
[Text=JMS CharacterOffsetBegin=47 CharacterOffsetEnd=50 PartOfSpeech=NNP Lemma=JMS NamedEntityTag=O SentimentClass=Neutral]
[Text=Server CharacterOffsetBegin=51 CharacterOffsetEnd=57 PartOfSpeech=NN Lemma=server NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT The) (NN interface))
    (VP (VBD was)
      (VP (VBN used)
        (NP
          (NP (NNS jndi))
          (, ,)
          (SBAR (RB so)
            (S
              (VP (MD can)
                (VP (VB use)
                  (PP (IN in)
                    (NP (DT any) (NNP JMS) (NN Server))))))))))))

root(ROOT-0, used-4)
det(interface-2, The-1)
nsubjpass(used-4, interface-2)
auxpass(used-4, was-3)
dobj(used-4, jndi-5)
punct(jndi-5, ,-6)
advmod(use-9, so-7)
aux(use-9, can-8)
dep(jndi-5, use-9)
case(Server-13, in-10)
det(Server-13, any-11)
compound(Server-13, JMS-12)
nmod:in(use-9, Server-13)


==============Pipeline Pretty Print==============
Sentence #1 (37 tokens, sentiment: Negative):
The introduction of the -showWeaveInfo option means that we can record these places, however, this would be greatly enhanced by providing similar information as to that which is collected as the program is running
[Text=The CharacterOffsetBegin=0 CharacterOffsetEnd=3 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=introduction CharacterOffsetBegin=4 CharacterOffsetEnd=16 PartOfSpeech=NN Lemma=introduction NamedEntityTag=O SentimentClass=Neutral]
[Text=of CharacterOffsetBegin=17 CharacterOffsetEnd=19 PartOfSpeech=IN Lemma=of NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=20 CharacterOffsetEnd=23 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=- CharacterOffsetBegin=24 CharacterOffsetEnd=25 PartOfSpeech=: Lemma=- NamedEntityTag=O SentimentClass=Neutral]
[Text=showWeaveInfo CharacterOffsetBegin=25 CharacterOffsetEnd=38 PartOfSpeech=NN Lemma=showweaveinfo NamedEntityTag=O SentimentClass=Neutral]
[Text=option CharacterOffsetBegin=39 CharacterOffsetEnd=45 PartOfSpeech=NN Lemma=option NamedEntityTag=O SentimentClass=Neutral]
[Text=means CharacterOffsetBegin=46 CharacterOffsetEnd=51 PartOfSpeech=VBZ Lemma=mean NamedEntityTag=O SentimentClass=Neutral]
[Text=that CharacterOffsetBegin=52 CharacterOffsetEnd=56 PartOfSpeech=IN Lemma=that NamedEntityTag=O SentimentClass=Neutral]
[Text=we CharacterOffsetBegin=57 CharacterOffsetEnd=59 PartOfSpeech=PRP Lemma=we NamedEntityTag=O SentimentClass=Neutral]
[Text=can CharacterOffsetBegin=60 CharacterOffsetEnd=63 PartOfSpeech=MD Lemma=can NamedEntityTag=O SentimentClass=Neutral]
[Text=record CharacterOffsetBegin=64 CharacterOffsetEnd=70 PartOfSpeech=VB Lemma=record NamedEntityTag=O SentimentClass=Neutral]
[Text=these CharacterOffsetBegin=71 CharacterOffsetEnd=76 PartOfSpeech=DT Lemma=these NamedEntityTag=O SentimentClass=Neutral]
[Text=places CharacterOffsetBegin=77 CharacterOffsetEnd=83 PartOfSpeech=NNS Lemma=place NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=83 CharacterOffsetEnd=84 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=however CharacterOffsetBegin=85 CharacterOffsetEnd=92 PartOfSpeech=RB Lemma=however NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=92 CharacterOffsetEnd=93 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=this CharacterOffsetBegin=94 CharacterOffsetEnd=98 PartOfSpeech=DT Lemma=this NamedEntityTag=O SentimentClass=Neutral]
[Text=would CharacterOffsetBegin=99 CharacterOffsetEnd=104 PartOfSpeech=MD Lemma=would NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=105 CharacterOffsetEnd=107 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=greatly CharacterOffsetBegin=108 CharacterOffsetEnd=115 PartOfSpeech=RB Lemma=greatly NamedEntityTag=O SentimentClass=Positive]
[Text=enhanced CharacterOffsetBegin=116 CharacterOffsetEnd=124 PartOfSpeech=VBN Lemma=enhance NamedEntityTag=O SentimentClass=Positive]
[Text=by CharacterOffsetBegin=125 CharacterOffsetEnd=127 PartOfSpeech=IN Lemma=by NamedEntityTag=O SentimentClass=Neutral]
[Text=providing CharacterOffsetBegin=128 CharacterOffsetEnd=137 PartOfSpeech=VBG Lemma=provide NamedEntityTag=O SentimentClass=Neutral]
[Text=similar CharacterOffsetBegin=138 CharacterOffsetEnd=145 PartOfSpeech=JJ Lemma=similar NamedEntityTag=O SentimentClass=Neutral]
[Text=information CharacterOffsetBegin=146 CharacterOffsetEnd=157 PartOfSpeech=NN Lemma=information NamedEntityTag=O SentimentClass=Neutral]
[Text=as CharacterOffsetBegin=158 CharacterOffsetEnd=160 PartOfSpeech=IN Lemma=as NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=161 CharacterOffsetEnd=163 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=that CharacterOffsetBegin=164 CharacterOffsetEnd=168 PartOfSpeech=DT Lemma=that NamedEntityTag=O SentimentClass=Neutral]
[Text=which CharacterOffsetBegin=169 CharacterOffsetEnd=174 PartOfSpeech=WDT Lemma=which NamedEntityTag=O SentimentClass=Neutral]
[Text=is CharacterOffsetBegin=175 CharacterOffsetEnd=177 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=collected CharacterOffsetBegin=178 CharacterOffsetEnd=187 PartOfSpeech=VBN Lemma=collect NamedEntityTag=O SentimentClass=Neutral]
[Text=as CharacterOffsetBegin=188 CharacterOffsetEnd=190 PartOfSpeech=IN Lemma=as NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=191 CharacterOffsetEnd=194 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=program CharacterOffsetBegin=195 CharacterOffsetEnd=202 PartOfSpeech=NN Lemma=program NamedEntityTag=O SentimentClass=Neutral]
[Text=is CharacterOffsetBegin=203 CharacterOffsetEnd=205 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=running CharacterOffsetBegin=206 CharacterOffsetEnd=213 PartOfSpeech=VBG Lemma=run NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP
      (NP (DT The) (NN introduction))
      (PP (IN of)
        (NP
          (NP (DT the))
          (: -)
          (S
            (NP (NN showWeaveInfo) (NN option))
            (VP (VBZ means)
              (SBAR (IN that)
                (S
                  (NP (PRP we))
                  (VP (MD can)
                    (VP (VB record)
                      (NP (DT these) (NNS places)))))))))))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (NP (DT this))
    (VP (MD would)
      (VP (VB be)
        (VP
          (ADVP (RB greatly))
          (VBN enhanced)
          (PP (IN by)
            (S
              (VP (VBG providing)
                (NP (JJ similar) (NN information))
                (PP (IN as)
                  (PP (TO to)
                    (NP
                      (NP (DT that))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBZ is)
                            (VP (VBN collected)
                              (SBAR (IN as)
                                (S
                                  (NP (DT the) (NN program))
                                  (VP (VBZ is)
                                    (VP (VBG running))))))))))))))))))))

root(ROOT-0, enhanced-22)
det(introduction-2, The-1)
nsubjpass(enhanced-22, introduction-2)
case(the-4, of-3)
nmod:of(introduction-2, the-4)
punct(the-4, --5)
compound(option-7, showWeaveInfo-6)
nsubj(means-8, option-7)
dep(the-4, means-8)
mark(record-12, that-9)
nsubj(record-12, we-10)
aux(record-12, can-11)
ccomp(means-8, record-12)
det(places-14, these-13)
dobj(record-12, places-14)
punct(enhanced-22, ,-15)
advmod(enhanced-22, however-16)
punct(enhanced-22, ,-17)
nsubjpass(enhanced-22, this-18)
aux(enhanced-22, would-19)
auxpass(enhanced-22, be-20)
advmod(enhanced-22, greatly-21)
mark(providing-24, by-23)
advcl:by(enhanced-22, providing-24)
amod(information-26, similar-25)
dobj(providing-24, information-26)
case(that-29, as-27)
mwe(as-27, to-28)
nmod:as_to(providing-24, that-29)
nsubjpass(collected-32, that-29)
ref(that-29, which-30)
auxpass(collected-32, is-31)
acl:relcl(that-29, collected-32)
mark(running-37, as-33)
det(program-35, the-34)
nsubj(running-37, program-35)
aux(running-37, is-36)
advcl:as(collected-32, running-37)


==============Pipeline Pretty Print==============
Sentence #1 (37 tokens, sentiment: Negative):
The introduction of the -showWeaveInfo option means that we can record these places, however, this would be greatly enhanced by providing similar information as to that which is collected as the program is running
[Text=The CharacterOffsetBegin=0 CharacterOffsetEnd=3 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=introduction CharacterOffsetBegin=4 CharacterOffsetEnd=16 PartOfSpeech=NN Lemma=introduction NamedEntityTag=O SentimentClass=Neutral]
[Text=of CharacterOffsetBegin=17 CharacterOffsetEnd=19 PartOfSpeech=IN Lemma=of NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=20 CharacterOffsetEnd=23 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=- CharacterOffsetBegin=24 CharacterOffsetEnd=25 PartOfSpeech=: Lemma=- NamedEntityTag=O SentimentClass=Neutral]
[Text=showWeaveInfo CharacterOffsetBegin=25 CharacterOffsetEnd=38 PartOfSpeech=NN Lemma=showweaveinfo NamedEntityTag=O SentimentClass=Neutral]
[Text=option CharacterOffsetBegin=39 CharacterOffsetEnd=45 PartOfSpeech=NN Lemma=option NamedEntityTag=O SentimentClass=Neutral]
[Text=means CharacterOffsetBegin=46 CharacterOffsetEnd=51 PartOfSpeech=VBZ Lemma=mean NamedEntityTag=O SentimentClass=Neutral]
[Text=that CharacterOffsetBegin=52 CharacterOffsetEnd=56 PartOfSpeech=IN Lemma=that NamedEntityTag=O SentimentClass=Neutral]
[Text=we CharacterOffsetBegin=57 CharacterOffsetEnd=59 PartOfSpeech=PRP Lemma=we NamedEntityTag=O SentimentClass=Neutral]
[Text=can CharacterOffsetBegin=60 CharacterOffsetEnd=63 PartOfSpeech=MD Lemma=can NamedEntityTag=O SentimentClass=Neutral]
[Text=record CharacterOffsetBegin=64 CharacterOffsetEnd=70 PartOfSpeech=VB Lemma=record NamedEntityTag=O SentimentClass=Neutral]
[Text=these CharacterOffsetBegin=71 CharacterOffsetEnd=76 PartOfSpeech=DT Lemma=these NamedEntityTag=O SentimentClass=Neutral]
[Text=places CharacterOffsetBegin=77 CharacterOffsetEnd=83 PartOfSpeech=NNS Lemma=place NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=83 CharacterOffsetEnd=84 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=however CharacterOffsetBegin=85 CharacterOffsetEnd=92 PartOfSpeech=RB Lemma=however NamedEntityTag=O SentimentClass=Neutral]
[Text=, CharacterOffsetBegin=92 CharacterOffsetEnd=93 PartOfSpeech=, Lemma=, NamedEntityTag=O SentimentClass=Neutral]
[Text=this CharacterOffsetBegin=94 CharacterOffsetEnd=98 PartOfSpeech=DT Lemma=this NamedEntityTag=O SentimentClass=Neutral]
[Text=would CharacterOffsetBegin=99 CharacterOffsetEnd=104 PartOfSpeech=MD Lemma=would NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=105 CharacterOffsetEnd=107 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=greatly CharacterOffsetBegin=108 CharacterOffsetEnd=115 PartOfSpeech=RB Lemma=greatly NamedEntityTag=O SentimentClass=Positive]
[Text=enhanced CharacterOffsetBegin=116 CharacterOffsetEnd=124 PartOfSpeech=VBN Lemma=enhance NamedEntityTag=O SentimentClass=Positive]
[Text=by CharacterOffsetBegin=125 CharacterOffsetEnd=127 PartOfSpeech=IN Lemma=by NamedEntityTag=O SentimentClass=Neutral]
[Text=providing CharacterOffsetBegin=128 CharacterOffsetEnd=137 PartOfSpeech=VBG Lemma=provide NamedEntityTag=O SentimentClass=Neutral]
[Text=similar CharacterOffsetBegin=138 CharacterOffsetEnd=145 PartOfSpeech=JJ Lemma=similar NamedEntityTag=O SentimentClass=Neutral]
[Text=information CharacterOffsetBegin=146 CharacterOffsetEnd=157 PartOfSpeech=NN Lemma=information NamedEntityTag=O SentimentClass=Neutral]
[Text=as CharacterOffsetBegin=158 CharacterOffsetEnd=160 PartOfSpeech=IN Lemma=as NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=161 CharacterOffsetEnd=163 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=that CharacterOffsetBegin=164 CharacterOffsetEnd=168 PartOfSpeech=DT Lemma=that NamedEntityTag=O SentimentClass=Neutral]
[Text=which CharacterOffsetBegin=169 CharacterOffsetEnd=174 PartOfSpeech=WDT Lemma=which NamedEntityTag=O SentimentClass=Neutral]
[Text=is CharacterOffsetBegin=175 CharacterOffsetEnd=177 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=collected CharacterOffsetBegin=178 CharacterOffsetEnd=187 PartOfSpeech=VBN Lemma=collect NamedEntityTag=O SentimentClass=Neutral]
[Text=as CharacterOffsetBegin=188 CharacterOffsetEnd=190 PartOfSpeech=IN Lemma=as NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=191 CharacterOffsetEnd=194 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=program CharacterOffsetBegin=195 CharacterOffsetEnd=202 PartOfSpeech=NN Lemma=program NamedEntityTag=O SentimentClass=Neutral]
[Text=is CharacterOffsetBegin=203 CharacterOffsetEnd=205 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=running CharacterOffsetBegin=206 CharacterOffsetEnd=213 PartOfSpeech=VBG Lemma=run NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP
      (NP (DT The) (NN introduction))
      (PP (IN of)
        (NP
          (NP (DT the))
          (: -)
          (S
            (NP (NN showWeaveInfo) (NN option))
            (VP (VBZ means)
              (SBAR (IN that)
                (S
                  (NP (PRP we))
                  (VP (MD can)
                    (VP (VB record)
                      (NP (DT these) (NNS places)))))))))))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (NP (DT this))
    (VP (MD would)
      (VP (VB be)
        (VP
          (ADVP (RB greatly))
          (VBN enhanced)
          (PP (IN by)
            (S
              (VP (VBG providing)
                (NP (JJ similar) (NN information))
                (PP (IN as)
                  (PP (TO to)
                    (NP
                      (NP (DT that))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBZ is)
                            (VP (VBN collected)
                              (SBAR (IN as)
                                (S
                                  (NP (DT the) (NN program))
                                  (VP (VBZ is)
                                    (VP (VBG running))))))))))))))))))))

root(ROOT-0, enhanced-22)
det(introduction-2, The-1)
nsubjpass(enhanced-22, introduction-2)
case(the-4, of-3)
nmod:of(introduction-2, the-4)
punct(the-4, --5)
compound(option-7, showWeaveInfo-6)
nsubj(means-8, option-7)
dep(the-4, means-8)
mark(record-12, that-9)
nsubj(record-12, we-10)
aux(record-12, can-11)
ccomp(means-8, record-12)
det(places-14, these-13)
dobj(record-12, places-14)
punct(enhanced-22, ,-15)
advmod(enhanced-22, however-16)
punct(enhanced-22, ,-17)
nsubjpass(enhanced-22, this-18)
aux(enhanced-22, would-19)
auxpass(enhanced-22, be-20)
advmod(enhanced-22, greatly-21)
mark(providing-24, by-23)
advcl:by(enhanced-22, providing-24)
amod(information-26, similar-25)
dobj(providing-24, information-26)
case(that-29, as-27)
mwe(as-27, to-28)
nmod:as_to(providing-24, that-29)
nsubjpass(collected-32, that-29)
ref(that-29, which-30)
auxpass(collected-32, is-31)
acl:relcl(that-29, collected-32)
mark(running-37, as-33)
det(program-35, the-34)
nsubj(running-37, program-35)
aux(running-37, is-36)
advcl:as(collected-32, running-37)


==============Pipeline Pretty Print==============
Sentence #1 (14 tokens, sentiment: Negative):
We should probably support both command <CODE> and command <CODE> for all MPD commands
[Text=We CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=PRP Lemma=we NamedEntityTag=O SentimentClass=Neutral]
[Text=should CharacterOffsetBegin=3 CharacterOffsetEnd=9 PartOfSpeech=MD Lemma=should NamedEntityTag=O SentimentClass=Neutral]
[Text=probably CharacterOffsetBegin=10 CharacterOffsetEnd=18 PartOfSpeech=RB Lemma=probably NamedEntityTag=O SentimentClass=Neutral]
[Text=support CharacterOffsetBegin=19 CharacterOffsetEnd=26 PartOfSpeech=VB Lemma=support NamedEntityTag=O SentimentClass=Neutral]
[Text=both CharacterOffsetBegin=27 CharacterOffsetEnd=31 PartOfSpeech=DT Lemma=both NamedEntityTag=O SentimentClass=Neutral]
[Text=command CharacterOffsetBegin=32 CharacterOffsetEnd=39 PartOfSpeech=NN Lemma=command NamedEntityTag=O SentimentClass=Neutral]
[Text=<CODE> CharacterOffsetBegin=40 CharacterOffsetEnd=46 PartOfSpeech=NN Lemma=<code> NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=47 CharacterOffsetEnd=50 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=command CharacterOffsetBegin=51 CharacterOffsetEnd=58 PartOfSpeech=NN Lemma=command NamedEntityTag=O SentimentClass=Neutral]
[Text=<CODE> CharacterOffsetBegin=59 CharacterOffsetEnd=65 PartOfSpeech=NN Lemma=<code> NamedEntityTag=O SentimentClass=Neutral]
[Text=for CharacterOffsetBegin=66 CharacterOffsetEnd=69 PartOfSpeech=IN Lemma=for NamedEntityTag=O SentimentClass=Neutral]
[Text=all CharacterOffsetBegin=70 CharacterOffsetEnd=73 PartOfSpeech=DT Lemma=all NamedEntityTag=O SentimentClass=Neutral]
[Text=MPD CharacterOffsetBegin=74 CharacterOffsetEnd=77 PartOfSpeech=NN Lemma=mpd NamedEntityTag=O SentimentClass=Neutral]
[Text=commands CharacterOffsetBegin=78 CharacterOffsetEnd=86 PartOfSpeech=NNS Lemma=command NamedEntityTag=O SentimentClass=Positive]
(ROOT
  (S
    (NP (PRP We))
    (VP (MD should)
      (ADVP (RB probably))
      (VP (VB support)
        (NP
          (NP (DT both) (NN command) (NN <CODE>)
            (CC and)
            (NN command) (NN <CODE>))
          (PP (IN for)
            (NP (DT all) (NN MPD) (NNS commands))))))))

root(ROOT-0, support-4)
nsubj(support-4, We-1)
aux(support-4, should-2)
advmod(support-4, probably-3)
cc:preconj(<CODE>-7, both-5)
compound(<CODE>-7, command-6)
dobj(support-4, <CODE>-7)
cc(<CODE>-7, and-8)
compound(<CODE>-10, command-9)
dobj(support-4, <CODE>-10)
conj:and(<CODE>-7, <CODE>-10)
case(commands-14, for-11)
det(commands-14, all-12)
compound(commands-14, MPD-13)
nmod:for(<CODE>-7, commands-14)


==============Pipeline Pretty Print==============
Sentence #1 (13 tokens, sentiment: Negative):
The iajc ant task could then also be enhanced to support aspectpath directories
[Text=The CharacterOffsetBegin=0 CharacterOffsetEnd=3 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=iajc CharacterOffsetBegin=4 CharacterOffsetEnd=8 PartOfSpeech=JJ Lemma=iajc NamedEntityTag=O SentimentClass=Neutral]
[Text=ant CharacterOffsetBegin=9 CharacterOffsetEnd=12 PartOfSpeech=NN Lemma=ant NamedEntityTag=O SentimentClass=Neutral]
[Text=task CharacterOffsetBegin=13 CharacterOffsetEnd=17 PartOfSpeech=NN Lemma=task NamedEntityTag=O SentimentClass=Neutral]
[Text=could CharacterOffsetBegin=18 CharacterOffsetEnd=23 PartOfSpeech=MD Lemma=could NamedEntityTag=O SentimentClass=Neutral]
[Text=then CharacterOffsetBegin=24 CharacterOffsetEnd=28 PartOfSpeech=RB Lemma=then NamedEntityTag=O SentimentClass=Neutral]
[Text=also CharacterOffsetBegin=29 CharacterOffsetEnd=33 PartOfSpeech=RB Lemma=also NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=34 CharacterOffsetEnd=36 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=enhanced CharacterOffsetBegin=37 CharacterOffsetEnd=45 PartOfSpeech=VBN Lemma=enhance NamedEntityTag=O SentimentClass=Positive]
[Text=to CharacterOffsetBegin=46 CharacterOffsetEnd=48 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=support CharacterOffsetBegin=49 CharacterOffsetEnd=56 PartOfSpeech=VB Lemma=support NamedEntityTag=O SentimentClass=Neutral]
[Text=aspectpath CharacterOffsetBegin=57 CharacterOffsetEnd=67 PartOfSpeech=JJ Lemma=aspectpath NamedEntityTag=O SentimentClass=Neutral]
[Text=directories CharacterOffsetBegin=68 CharacterOffsetEnd=79 PartOfSpeech=NNS Lemma=directory NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT The) (JJ iajc) (NN ant) (NN task))
    (VP (MD could) (RB then)
      (ADVP (RB also))
      (VP (VB be)
        (VP (VBN enhanced)
          (S
            (VP (TO to)
              (VP (VB support)
                (NP (JJ aspectpath) (NNS directories))))))))))

root(ROOT-0, enhanced-9)
det(task-4, The-1)
amod(task-4, iajc-2)
compound(task-4, ant-3)
nsubjpass(enhanced-9, task-4)
nsubj:xsubj(support-11, task-4)
aux(enhanced-9, could-5)
advmod(enhanced-9, then-6)
advmod(enhanced-9, also-7)
auxpass(enhanced-9, be-8)
mark(support-11, to-10)
xcomp(enhanced-9, support-11)
amod(directories-13, aspectpath-12)
dobj(support-11, directories-13)


==============Pipeline Pretty Print==============
Sentence #1 (20 tokens, sentiment: Neutral):
The local backend could possibly benefit from having an alternative to the tag cache file for caching track meta data
[Text=The CharacterOffsetBegin=0 CharacterOffsetEnd=3 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=local CharacterOffsetBegin=4 CharacterOffsetEnd=9 PartOfSpeech=JJ Lemma=local NamedEntityTag=O SentimentClass=Positive]
[Text=backend CharacterOffsetBegin=10 CharacterOffsetEnd=17 PartOfSpeech=NN Lemma=backend NamedEntityTag=O SentimentClass=Neutral]
[Text=could CharacterOffsetBegin=18 CharacterOffsetEnd=23 PartOfSpeech=MD Lemma=could NamedEntityTag=O SentimentClass=Neutral]
[Text=possibly CharacterOffsetBegin=24 CharacterOffsetEnd=32 PartOfSpeech=RB Lemma=possibly NamedEntityTag=O SentimentClass=Neutral]
[Text=benefit CharacterOffsetBegin=33 CharacterOffsetEnd=40 PartOfSpeech=VB Lemma=benefit NamedEntityTag=O SentimentClass=Positive]
[Text=from CharacterOffsetBegin=41 CharacterOffsetEnd=45 PartOfSpeech=IN Lemma=from NamedEntityTag=O SentimentClass=Neutral]
[Text=having CharacterOffsetBegin=46 CharacterOffsetEnd=52 PartOfSpeech=VBG Lemma=have NamedEntityTag=O SentimentClass=Neutral]
[Text=an CharacterOffsetBegin=53 CharacterOffsetEnd=55 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=alternative CharacterOffsetBegin=56 CharacterOffsetEnd=67 PartOfSpeech=NN Lemma=alternative NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=68 CharacterOffsetEnd=70 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=71 CharacterOffsetEnd=74 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=tag CharacterOffsetBegin=75 CharacterOffsetEnd=78 PartOfSpeech=NN Lemma=tag NamedEntityTag=O SentimentClass=Neutral]
[Text=cache CharacterOffsetBegin=79 CharacterOffsetEnd=84 PartOfSpeech=NN Lemma=cache NamedEntityTag=O SentimentClass=Neutral]
[Text=file CharacterOffsetBegin=85 CharacterOffsetEnd=89 PartOfSpeech=NN Lemma=file NamedEntityTag=O SentimentClass=Neutral]
[Text=for CharacterOffsetBegin=90 CharacterOffsetEnd=93 PartOfSpeech=IN Lemma=for NamedEntityTag=O SentimentClass=Neutral]
[Text=caching CharacterOffsetBegin=94 CharacterOffsetEnd=101 PartOfSpeech=VBG Lemma=cache NamedEntityTag=O SentimentClass=Neutral]
[Text=track CharacterOffsetBegin=102 CharacterOffsetEnd=107 PartOfSpeech=NN Lemma=track NamedEntityTag=O SentimentClass=Neutral]
[Text=meta CharacterOffsetBegin=108 CharacterOffsetEnd=112 PartOfSpeech=NN Lemma=meta NamedEntityTag=O SentimentClass=Neutral]
[Text=data CharacterOffsetBegin=113 CharacterOffsetEnd=117 PartOfSpeech=NNS Lemma=datum NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT The) (JJ local) (NN backend))
    (VP (MD could)
      (ADVP (RB possibly))
      (VP (VB benefit)
        (PP (IN from)
          (S
            (VP (VBG having)
              (S
                (NP
                  (NP (DT an) (NN alternative))
                  (PP (TO to)
                    (NP (DT the) (NN tag) (NN cache))))
                (VP (NN file)
                  (PP (IN for)
                    (S
                      (VP (VBG caching)
                        (NP (NN track) (NN meta) (NNS data))))))))))))))

root(ROOT-0, benefit-6)
det(backend-3, The-1)
amod(backend-3, local-2)
nsubj(benefit-6, backend-3)
aux(benefit-6, could-4)
advmod(benefit-6, possibly-5)
mark(having-8, from-7)
advcl:from(benefit-6, having-8)
det(alternative-10, an-9)
nsubj(file-15, alternative-10)
case(cache-14, to-11)
det(cache-14, the-12)
compound(cache-14, tag-13)
nmod:to(alternative-10, cache-14)
ccomp(having-8, file-15)
mark(caching-17, for-16)
advcl:for(file-15, caching-17)
compound(data-20, track-18)
compound(data-20, meta-19)
dobj(caching-17, data-20)


==============Pipeline Pretty Print==============
Sentence #1 (13 tokens, sentiment: Negative):
The iajc ant task could then also be enhanced to support aspectpath directories
[Text=The CharacterOffsetBegin=0 CharacterOffsetEnd=3 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=iajc CharacterOffsetBegin=4 CharacterOffsetEnd=8 PartOfSpeech=JJ Lemma=iajc NamedEntityTag=O SentimentClass=Neutral]
[Text=ant CharacterOffsetBegin=9 CharacterOffsetEnd=12 PartOfSpeech=NN Lemma=ant NamedEntityTag=O SentimentClass=Neutral]
[Text=task CharacterOffsetBegin=13 CharacterOffsetEnd=17 PartOfSpeech=NN Lemma=task NamedEntityTag=O SentimentClass=Neutral]
[Text=could CharacterOffsetBegin=18 CharacterOffsetEnd=23 PartOfSpeech=MD Lemma=could NamedEntityTag=O SentimentClass=Neutral]
[Text=then CharacterOffsetBegin=24 CharacterOffsetEnd=28 PartOfSpeech=RB Lemma=then NamedEntityTag=O SentimentClass=Neutral]
[Text=also CharacterOffsetBegin=29 CharacterOffsetEnd=33 PartOfSpeech=RB Lemma=also NamedEntityTag=O SentimentClass=Neutral]
[Text=be CharacterOffsetBegin=34 CharacterOffsetEnd=36 PartOfSpeech=VB Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=enhanced CharacterOffsetBegin=37 CharacterOffsetEnd=45 PartOfSpeech=VBN Lemma=enhance NamedEntityTag=O SentimentClass=Positive]
[Text=to CharacterOffsetBegin=46 CharacterOffsetEnd=48 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=support CharacterOffsetBegin=49 CharacterOffsetEnd=56 PartOfSpeech=VB Lemma=support NamedEntityTag=O SentimentClass=Neutral]
[Text=aspectpath CharacterOffsetBegin=57 CharacterOffsetEnd=67 PartOfSpeech=JJ Lemma=aspectpath NamedEntityTag=O SentimentClass=Neutral]
[Text=directories CharacterOffsetBegin=68 CharacterOffsetEnd=79 PartOfSpeech=NNS Lemma=directory NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (DT The) (JJ iajc) (NN ant) (NN task))
    (VP (MD could) (RB then)
      (ADVP (RB also))
      (VP (VB be)
        (VP (VBN enhanced)
          (S
            (VP (TO to)
              (VP (VB support)
                (NP (JJ aspectpath) (NNS directories))))))))))

root(ROOT-0, enhanced-9)
det(task-4, The-1)
amod(task-4, iajc-2)
compound(task-4, ant-3)
nsubjpass(enhanced-9, task-4)
nsubj:xsubj(support-11, task-4)
aux(enhanced-9, could-5)
advmod(enhanced-9, then-6)
advmod(enhanced-9, also-7)
auxpass(enhanced-9, be-8)
mark(support-11, to-10)
xcomp(enhanced-9, support-11)
amod(directories-13, aspectpath-12)
dobj(support-11, directories-13)


==============Pipeline Pretty Print==============
Sentence #1 (16 tokens, sentiment: Neutral):
I was able to verify that it parsed and set an option correctly in the debugger
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=was CharacterOffsetBegin=2 CharacterOffsetEnd=5 PartOfSpeech=VBD Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=able CharacterOffsetBegin=6 CharacterOffsetEnd=10 PartOfSpeech=JJ Lemma=able NamedEntityTag=O SentimentClass=Positive]
[Text=to CharacterOffsetBegin=11 CharacterOffsetEnd=13 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=verify CharacterOffsetBegin=14 CharacterOffsetEnd=20 PartOfSpeech=VB Lemma=verify NamedEntityTag=O SentimentClass=Neutral]
[Text=that CharacterOffsetBegin=21 CharacterOffsetEnd=25 PartOfSpeech=IN Lemma=that NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=26 CharacterOffsetEnd=28 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=parsed CharacterOffsetBegin=29 CharacterOffsetEnd=35 PartOfSpeech=VBD Lemma=parse NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=36 CharacterOffsetEnd=39 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=set CharacterOffsetBegin=40 CharacterOffsetEnd=43 PartOfSpeech=VBD Lemma=set NamedEntityTag=O SentimentClass=Neutral]
[Text=an CharacterOffsetBegin=44 CharacterOffsetEnd=46 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=option CharacterOffsetBegin=47 CharacterOffsetEnd=53 PartOfSpeech=NN Lemma=option NamedEntityTag=O SentimentClass=Neutral]
[Text=correctly CharacterOffsetBegin=54 CharacterOffsetEnd=63 PartOfSpeech=RB Lemma=correctly NamedEntityTag=O SentimentClass=Positive]
[Text=in CharacterOffsetBegin=64 CharacterOffsetEnd=66 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=67 CharacterOffsetEnd=70 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=debugger CharacterOffsetBegin=71 CharacterOffsetEnd=79 PartOfSpeech=NN Lemma=debugger NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP (VB verify)
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (VBD parsed)
                    (CC and)
                    (VBD set)
                    (NP (DT an) (NN option))
                    (ADVP (RB correctly))
                    (PP (IN in)
                      (NP (DT the) (NN debugger)))))))))))))

root(ROOT-0, able-3)
nsubj(able-3, I-1)
nsubj:xsubj(verify-5, I-1)
cop(able-3, was-2)
mark(verify-5, to-4)
xcomp(able-3, verify-5)
mark(parsed-8, that-6)
nsubj(parsed-8, it-7)
nsubj(set-10, it-7)
ccomp(verify-5, parsed-8)
cc(parsed-8, and-9)
ccomp(verify-5, set-10)
conj:and(parsed-8, set-10)
det(option-12, an-11)
dobj(parsed-8, option-12)
advmod(parsed-8, correctly-13)
case(debugger-16, in-14)
det(debugger-16, the-15)
nmod:in(parsed-8, debugger-16)


==============Pipeline Pretty Print==============
Sentence #1 (16 tokens, sentiment: Neutral):
I was able to verify that it parsed and set an option correctly in the debugger
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=was CharacterOffsetBegin=2 CharacterOffsetEnd=5 PartOfSpeech=VBD Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=able CharacterOffsetBegin=6 CharacterOffsetEnd=10 PartOfSpeech=JJ Lemma=able NamedEntityTag=O SentimentClass=Positive]
[Text=to CharacterOffsetBegin=11 CharacterOffsetEnd=13 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=verify CharacterOffsetBegin=14 CharacterOffsetEnd=20 PartOfSpeech=VB Lemma=verify NamedEntityTag=O SentimentClass=Neutral]
[Text=that CharacterOffsetBegin=21 CharacterOffsetEnd=25 PartOfSpeech=IN Lemma=that NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=26 CharacterOffsetEnd=28 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=parsed CharacterOffsetBegin=29 CharacterOffsetEnd=35 PartOfSpeech=VBD Lemma=parse NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=36 CharacterOffsetEnd=39 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=set CharacterOffsetBegin=40 CharacterOffsetEnd=43 PartOfSpeech=VBD Lemma=set NamedEntityTag=O SentimentClass=Neutral]
[Text=an CharacterOffsetBegin=44 CharacterOffsetEnd=46 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=option CharacterOffsetBegin=47 CharacterOffsetEnd=53 PartOfSpeech=NN Lemma=option NamedEntityTag=O SentimentClass=Neutral]
[Text=correctly CharacterOffsetBegin=54 CharacterOffsetEnd=63 PartOfSpeech=RB Lemma=correctly NamedEntityTag=O SentimentClass=Positive]
[Text=in CharacterOffsetBegin=64 CharacterOffsetEnd=66 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=67 CharacterOffsetEnd=70 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=debugger CharacterOffsetBegin=71 CharacterOffsetEnd=79 PartOfSpeech=NN Lemma=debugger NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP (VB verify)
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (VBD parsed)
                    (CC and)
                    (VBD set)
                    (NP (DT an) (NN option))
                    (ADVP (RB correctly))
                    (PP (IN in)
                      (NP (DT the) (NN debugger)))))))))))))

root(ROOT-0, able-3)
nsubj(able-3, I-1)
nsubj:xsubj(verify-5, I-1)
cop(able-3, was-2)
mark(verify-5, to-4)
xcomp(able-3, verify-5)
mark(parsed-8, that-6)
nsubj(parsed-8, it-7)
nsubj(set-10, it-7)
ccomp(verify-5, parsed-8)
cc(parsed-8, and-9)
ccomp(verify-5, set-10)
conj:and(parsed-8, set-10)
det(option-12, an-11)
dobj(parsed-8, option-12)
advmod(parsed-8, correctly-13)
case(debugger-16, in-14)
det(debugger-16, the-15)
nmod:in(parsed-8, debugger-16)


==============Pipeline Pretty Print==============
Sentence #1 (16 tokens, sentiment: Neutral):
I was able to verify that it parsed and set an option correctly in the debugger
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=was CharacterOffsetBegin=2 CharacterOffsetEnd=5 PartOfSpeech=VBD Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=able CharacterOffsetBegin=6 CharacterOffsetEnd=10 PartOfSpeech=JJ Lemma=able NamedEntityTag=O SentimentClass=Positive]
[Text=to CharacterOffsetBegin=11 CharacterOffsetEnd=13 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=verify CharacterOffsetBegin=14 CharacterOffsetEnd=20 PartOfSpeech=VB Lemma=verify NamedEntityTag=O SentimentClass=Neutral]
[Text=that CharacterOffsetBegin=21 CharacterOffsetEnd=25 PartOfSpeech=IN Lemma=that NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=26 CharacterOffsetEnd=28 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=parsed CharacterOffsetBegin=29 CharacterOffsetEnd=35 PartOfSpeech=VBD Lemma=parse NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=36 CharacterOffsetEnd=39 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=set CharacterOffsetBegin=40 CharacterOffsetEnd=43 PartOfSpeech=VBD Lemma=set NamedEntityTag=O SentimentClass=Neutral]
[Text=an CharacterOffsetBegin=44 CharacterOffsetEnd=46 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=option CharacterOffsetBegin=47 CharacterOffsetEnd=53 PartOfSpeech=NN Lemma=option NamedEntityTag=O SentimentClass=Neutral]
[Text=correctly CharacterOffsetBegin=54 CharacterOffsetEnd=63 PartOfSpeech=RB Lemma=correctly NamedEntityTag=O SentimentClass=Positive]
[Text=in CharacterOffsetBegin=64 CharacterOffsetEnd=66 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=67 CharacterOffsetEnd=70 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=debugger CharacterOffsetBegin=71 CharacterOffsetEnd=79 PartOfSpeech=NN Lemma=debugger NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP (VB verify)
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (VBD parsed)
                    (CC and)
                    (VBD set)
                    (NP (DT an) (NN option))
                    (ADVP (RB correctly))
                    (PP (IN in)
                      (NP (DT the) (NN debugger)))))))))))))

root(ROOT-0, able-3)
nsubj(able-3, I-1)
nsubj:xsubj(verify-5, I-1)
cop(able-3, was-2)
mark(verify-5, to-4)
xcomp(able-3, verify-5)
mark(parsed-8, that-6)
nsubj(parsed-8, it-7)
nsubj(set-10, it-7)
ccomp(verify-5, parsed-8)
cc(parsed-8, and-9)
ccomp(verify-5, set-10)
conj:and(parsed-8, set-10)
det(option-12, an-11)
dobj(parsed-8, option-12)
advmod(parsed-8, correctly-13)
case(debugger-16, in-14)
det(debugger-16, the-15)
nmod:in(parsed-8, debugger-16)


==============Pipeline Pretty Print==============
Sentence #1 (16 tokens, sentiment: Neutral):
I was able to verify that it parsed and set an option correctly in the debugger
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=was CharacterOffsetBegin=2 CharacterOffsetEnd=5 PartOfSpeech=VBD Lemma=be NamedEntityTag=O SentimentClass=Neutral]
[Text=able CharacterOffsetBegin=6 CharacterOffsetEnd=10 PartOfSpeech=JJ Lemma=able NamedEntityTag=O SentimentClass=Positive]
[Text=to CharacterOffsetBegin=11 CharacterOffsetEnd=13 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=verify CharacterOffsetBegin=14 CharacterOffsetEnd=20 PartOfSpeech=VB Lemma=verify NamedEntityTag=O SentimentClass=Neutral]
[Text=that CharacterOffsetBegin=21 CharacterOffsetEnd=25 PartOfSpeech=IN Lemma=that NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=26 CharacterOffsetEnd=28 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=parsed CharacterOffsetBegin=29 CharacterOffsetEnd=35 PartOfSpeech=VBD Lemma=parse NamedEntityTag=O SentimentClass=Neutral]
[Text=and CharacterOffsetBegin=36 CharacterOffsetEnd=39 PartOfSpeech=CC Lemma=and NamedEntityTag=O SentimentClass=Neutral]
[Text=set CharacterOffsetBegin=40 CharacterOffsetEnd=43 PartOfSpeech=VBD Lemma=set NamedEntityTag=O SentimentClass=Neutral]
[Text=an CharacterOffsetBegin=44 CharacterOffsetEnd=46 PartOfSpeech=DT Lemma=a NamedEntityTag=O SentimentClass=Neutral]
[Text=option CharacterOffsetBegin=47 CharacterOffsetEnd=53 PartOfSpeech=NN Lemma=option NamedEntityTag=O SentimentClass=Neutral]
[Text=correctly CharacterOffsetBegin=54 CharacterOffsetEnd=63 PartOfSpeech=RB Lemma=correctly NamedEntityTag=O SentimentClass=Positive]
[Text=in CharacterOffsetBegin=64 CharacterOffsetEnd=66 PartOfSpeech=IN Lemma=in NamedEntityTag=O SentimentClass=Neutral]
[Text=the CharacterOffsetBegin=67 CharacterOffsetEnd=70 PartOfSpeech=DT Lemma=the NamedEntityTag=O SentimentClass=Neutral]
[Text=debugger CharacterOffsetBegin=71 CharacterOffsetEnd=79 PartOfSpeech=NN Lemma=debugger NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP (VB verify)
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (VBD parsed)
                    (CC and)
                    (VBD set)
                    (NP (DT an) (NN option))
                    (ADVP (RB correctly))
                    (PP (IN in)
                      (NP (DT the) (NN debugger)))))))))))))

root(ROOT-0, able-3)
nsubj(able-3, I-1)
nsubj:xsubj(verify-5, I-1)
cop(able-3, was-2)
mark(verify-5, to-4)
xcomp(able-3, verify-5)
mark(parsed-8, that-6)
nsubj(parsed-8, it-7)
nsubj(set-10, it-7)
ccomp(verify-5, parsed-8)
cc(parsed-8, and-9)
ccomp(verify-5, set-10)
conj:and(parsed-8, set-10)
det(option-12, an-11)
dobj(parsed-8, option-12)
advmod(parsed-8, correctly-13)
case(debugger-16, in-14)
det(debugger-16, the-15)
nmod:in(parsed-8, debugger-16)


==============Pipeline Pretty Print==============
Sentence #1 (6 tokens, sentiment: Neutral):
either remove it or use it
[Text=either CharacterOffsetBegin=0 CharacterOffsetEnd=6 PartOfSpeech=DT Lemma=either NamedEntityTag=O SentimentClass=Neutral]
[Text=remove CharacterOffsetBegin=7 CharacterOffsetEnd=13 PartOfSpeech=VB Lemma=remove NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=14 CharacterOffsetEnd=16 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=or CharacterOffsetBegin=17 CharacterOffsetEnd=19 PartOfSpeech=CC Lemma=or NamedEntityTag=O SentimentClass=Neutral]
[Text=use CharacterOffsetBegin=20 CharacterOffsetEnd=23 PartOfSpeech=VB Lemma=use NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=24 CharacterOffsetEnd=26 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (VP (DT either)
    (VP (VB remove)
      (NP (PRP it)))
    (CC or)
    (VP (VB use)
      (NP (PRP it)))))

root(ROOT-0, remove-2)
cc:preconj(remove-2, either-1)
dobj(remove-2, it-3)
cc(remove-2, or-4)
conj:or(remove-2, use-5)
dobj(use-5, it-6)


==============Pipeline Pretty Print==============
Sentence #1 (9 tokens, sentiment: Neutral):
Appropriate messages must come out indicating what has happened
[Text=Appropriate CharacterOffsetBegin=0 CharacterOffsetEnd=11 PartOfSpeech=JJ Lemma=appropriate NamedEntityTag=O SentimentClass=Neutral]
[Text=messages CharacterOffsetBegin=12 CharacterOffsetEnd=20 PartOfSpeech=NNS Lemma=message NamedEntityTag=O SentimentClass=Neutral]
[Text=must CharacterOffsetBegin=21 CharacterOffsetEnd=25 PartOfSpeech=MD Lemma=must NamedEntityTag=O SentimentClass=Neutral]
[Text=come CharacterOffsetBegin=26 CharacterOffsetEnd=30 PartOfSpeech=VB Lemma=come NamedEntityTag=O SentimentClass=Neutral]
[Text=out CharacterOffsetBegin=31 CharacterOffsetEnd=34 PartOfSpeech=RP Lemma=out NamedEntityTag=O SentimentClass=Negative]
[Text=indicating CharacterOffsetBegin=35 CharacterOffsetEnd=45 PartOfSpeech=VBG Lemma=indicate NamedEntityTag=O SentimentClass=Neutral]
[Text=what CharacterOffsetBegin=46 CharacterOffsetEnd=50 PartOfSpeech=WP Lemma=what NamedEntityTag=O SentimentClass=Neutral]
[Text=has CharacterOffsetBegin=51 CharacterOffsetEnd=54 PartOfSpeech=VBZ Lemma=have NamedEntityTag=O SentimentClass=Neutral]
[Text=happened CharacterOffsetBegin=55 CharacterOffsetEnd=63 PartOfSpeech=VBN Lemma=happen NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (JJ Appropriate) (NNS messages))
    (VP (MD must)
      (VP (VB come)
        (PRT (RP out))
        (S
          (VP (VBG indicating)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBZ has)
                  (VP (VBN happened)))))))))))

root(ROOT-0, come-4)
amod(messages-2, Appropriate-1)
nsubj(come-4, messages-2)
aux(come-4, must-3)
compound:prt(come-4, out-5)
xcomp(come-4, indicating-6)
nsubj(happened-9, what-7)
aux(happened-9, has-8)
ccomp(indicating-6, happened-9)


==============Pipeline Pretty Print==============
Sentence #1 (9 tokens, sentiment: Negative):
I must to search for it for long time
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O SentimentClass=Neutral]
[Text=must CharacterOffsetBegin=2 CharacterOffsetEnd=6 PartOfSpeech=MD Lemma=must NamedEntityTag=O SentimentClass=Neutral]
[Text=to CharacterOffsetBegin=7 CharacterOffsetEnd=9 PartOfSpeech=TO Lemma=to NamedEntityTag=O SentimentClass=Neutral]
[Text=search CharacterOffsetBegin=10 CharacterOffsetEnd=16 PartOfSpeech=VB Lemma=search NamedEntityTag=O SentimentClass=Neutral]
[Text=for CharacterOffsetBegin=17 CharacterOffsetEnd=20 PartOfSpeech=IN Lemma=for NamedEntityTag=O SentimentClass=Neutral]
[Text=it CharacterOffsetBegin=21 CharacterOffsetEnd=23 PartOfSpeech=PRP Lemma=it NamedEntityTag=O SentimentClass=Neutral]
[Text=for CharacterOffsetBegin=24 CharacterOffsetEnd=27 PartOfSpeech=IN Lemma=for NamedEntityTag=O SentimentClass=Neutral]
[Text=long CharacterOffsetBegin=28 CharacterOffsetEnd=32 PartOfSpeech=JJ Lemma=long NamedEntityTag=O SentimentClass=Neutral]
[Text=time CharacterOffsetBegin=33 CharacterOffsetEnd=37 PartOfSpeech=NN Lemma=time NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (S
    (NP (PRP I))
    (VP (MD must)
      (S
        (VP (TO to)
          (VP (VB search)
            (PP (IN for)
              (NP (PRP it)))
            (PP (IN for)
              (NP (JJ long) (NN time)))))))))

root(ROOT-0, must-2)
nsubj(must-2, I-1)
nsubj:xsubj(search-4, I-1)
mark(search-4, to-3)
xcomp(must-2, search-4)
case(it-6, for-5)
nmod:for(search-4, it-6)
case(time-9, for-7)
amod(time-9, long-8)
nmod:for(search-4, time-9)


==============Pipeline Pretty Print==============
Sentence #1 (4 tokens, sentiment: Neutral):
which you must find
[Text=which CharacterOffsetBegin=0 CharacterOffsetEnd=5 PartOfSpeech=WDT Lemma=which NamedEntityTag=O SentimentClass=Neutral]
[Text=you CharacterOffsetBegin=6 CharacterOffsetEnd=9 PartOfSpeech=PRP Lemma=you NamedEntityTag=O SentimentClass=Neutral]
[Text=must CharacterOffsetBegin=10 CharacterOffsetEnd=14 PartOfSpeech=MD Lemma=must NamedEntityTag=O SentimentClass=Neutral]
[Text=find CharacterOffsetBegin=15 CharacterOffsetEnd=19 PartOfSpeech=VB Lemma=find NamedEntityTag=O SentimentClass=Neutral]
(ROOT
  (SBAR
    (WHNP (WDT which))
    (S
      (NP (PRP you))
      (VP (MD must)
        (VP (VB find))))))

root(ROOT-0, find-4)
dobj(find-4, which-1)
nsubj(find-4, you-2)
aux(find-4, must-3)

